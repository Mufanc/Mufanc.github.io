<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>发布自己的 Android Library 到 JitPack</title>
      <link href="/posts/1731161437/"/>
      <url>/posts/1731161437/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  Kotlin 是一门十分简洁的静态类型语言，同时拥有非常优秀的扩展性，与 Java 相比，使用 Kotlin 进行 Android 开发能有效减少代码量。下面以一个常用的 User 类为例，简单展示下 Kotlin 的简洁性：</p><div class="tabs" id="java-vs-kotlin"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#java-vs-kotlin-1"><i class="fa-brands fa-java"></i>Java</button></li><li class="tab"><button type="button" data-href="#java-vs-kotlin-2"><i class="fa-brands fa-kickstarter-k"></i>Kotlin</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="java-vs-kotlin-1"><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User{id="</span> + id + <span class="string">", name='"</span> + name + <span class="string">"'}"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="java-vs-kotlin-2"><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>(<span class="keyword">val</span> id: <span class="built_in">Int</span>, <span class="keyword">val</span> name: String) {</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Users(id=<span class="variable">$id</span>, name='<span class="variable">$name</span>')"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>  在 Xposed 模块开发中，如果能够利用 Kotlin 的简洁性，自然能够极大地加快开发速度，让我们把工作中心放到整理逻辑上来，而不是与各种反射斗智斗勇。有人同样也注意到了这个问题，并制定了一套解决方案，比如 KyuubiRan 的 <a href="https://github.com/KyuubiRan/EzXHelper">EzXHelper</a>，然而用起来总感觉不太顺手，遂决定自己开发一套 Xposed Hook 增强 API</p><p>  首先创建一个空项目（No Activity），然后新建 Module，注意选择类型为 Android Library，将我们的库代码写在这里，然后在<strong>模块的</strong> build.gradle 中添加/合并：</p><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">plugins {</span><br><span class="line">    id <span class="string">'maven-publish'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">afterEvaluate {</span><br><span class="line">    publishing {</span><br><span class="line">        publications {</span><br><span class="line">            release(MavenPublication) {</span><br><span class="line">                from components.release</span><br><span class="line">                groupId = <span class="string">'com.github.mufanc.easyhook'</span></span><br><span class="line">                artifactId = <span class="string">'mufanc'</span></span><br><span class="line">                version = <span class="string">'0.3'</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  将代码发布到 GitHub，在 Release 页发布一个新的版本，标签为当前版本号：</p><p><img src="new-release.png" alt=""></p><p>  现在前往 <a href="https://jitpack.io/">jitpack.io</a>，将你的仓库地址粘贴到输入框，然后点击右侧的 Look up 按钮：</p><p><img src="publish.png" alt=""></p><p>  在下方选择刚刚发布的版本，点击 Get it 即可开始编译</p><h2 id="参考-3">参考</h2><ul><li><a href="https://blog.51cto.com/u_15361941/4726728">gradle7.0.2如何发布jitpack开源项目</a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 环境运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进阶｜使用 PyTorch 完成复杂验证码的识别</title>
      <link href="/posts/4198449335/"/>
      <url>/posts/4198449335/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  早在新生报到时，我就萌生了识别验证码并模拟登录的想法，无奈当时技术有限，最终未能达到目标。去年用 numpy 手写打卡系统验证码识别器后，<a href="https://github.com/Mufanc/HNU-AutoCheckin">自动脚本</a> 一直运行得还算稳定，这也给了我信心，让我继续挑战 <a href="http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/login.zf">迎新系统</a> 的验证码：</p><img src="captcha-sample.png" style="width: 60%;"><h2 id="前期工作">前期工作</h2><h3 id="特征分析">特征分析</h3><p>  乍一看好像挺吓人，随机字号、随机倾斜、随机模糊（可能这模糊是 jpg 算法搞的）,甚至还有一条横线，但当我们叠图之后，事情开始变得逐渐明朗起来：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">overlay = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'../data/raw_image'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    image = cv2.imread(<span class="string">f'../data/raw_image/<span class="subst">{file}</span>'</span>)</span><br><span class="line">    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    <span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        overlay = np.zeros(image.shape)</span><br><span class="line">    overlay += image</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    overlay = (overlay * <span class="number">255</span> / np.<span class="built_in">max</span>(overlay)).astype(np.uint8)</span><br><span class="line">    <span class="built_in">print</span>(overlay.shape)</span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    plt.imshow(overlay)</span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    plt.plot(np.<span class="built_in">sum</span>(<span class="number">255</span> - overlay, axis=<span class="number">0</span>))</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="overlay.png" alt=""></p><p>  左侧的随机短横线几乎不会与文字发生接触，那么我们直接将其裁掉即可，同样地，在右侧裁剪掉一块空白区域，以便后续识别。</p><p>  同时我在下方绘制了一张折线图，为原图反色后沿纵向将各个像素值累加后得到的结果。不难注意到由于背景渐变色的存在，折线整体有一个从左至右由高到低的趋势，修正后，得到了这样的效果：</p><p><img src="cut.png" alt=""></p><p>  下面的步骤，可能看起来会比较复杂，实际上原理却很简单：使用一根横向的「扫描线」自下而上扫描整个折线图，考虑所有被折线图和扫描线围成的部分，不妨将其称为「域」，当底面长度不小于 10 的「域」的数量为 4（字符数）时，认为这是一个较好的切分：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'../data/raw_image'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    image = cv2.imread(<span class="string">f'../data/raw_image/<span class="subst">{file}</span>'</span>)</span><br><span class="line">    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    sumvirt = np.<span class="built_in">sum</span>(<span class="number">255</span> - image, axis=<span class="number">0</span>)</span><br><span class="line">    line = <span class="number">3088</span> - <span class="number">12.04</span> * np.arange(<span class="number">0</span>, <span class="number">200</span>)</span><br><span class="line">    sumvirt = (sumvirt.astype(np.float64) - line)[<span class="number">52</span>:<span class="number">158</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> np.arange(<span class="number">0</span>, sumvirt.<span class="built_in">max</span>()):</span><br><span class="line">        norm = np.where(sumvirt &gt; x, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        diff = np.append(norm, <span class="number">0</span>) - np.append(<span class="number">0</span>, norm)</span><br><span class="line"></span><br><span class="line">        last, results = <span class="number">0</span>, []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(diff)):</span><br><span class="line">            <span class="keyword">if</span> diff[i] == <span class="number">1</span>:</span><br><span class="line">                last = i</span><br><span class="line">            <span class="keyword">elif</span> diff[i] == -<span class="number">1</span> <span class="keyword">and</span> i - last &gt;= <span class="number">10</span>:</span><br><span class="line">                results.append((last, i))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(results) == <span class="number">4</span>:</span><br><span class="line">            plt.subplot(<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            plt.title(<span class="string">f'X = <span class="subst">{x}</span>'</span>)</span><br><span class="line">            plt.imshow(image[:, <span class="number">52</span>:<span class="number">158</span>])</span><br><span class="line"></span><br><span class="line">            plt.subplot(<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">            plt.plot(sumvirt)</span><br><span class="line">            plt.plot(np.full(sumvirt.shape, x))</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(results)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">                plt.subplot(<span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span> + i)</span><br><span class="line">                plt.imshow(image[:, <span class="number">52</span>:<span class="number">158</span>][:, <span class="built_in">range</span>(*results[i])])</span><br><span class="line"></span><br><span class="line">            plt.show()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="split.png" alt=""></p><p>  简单二值化一下，贴到白色背景图上，这里放一张和原图的对比：</p><p><img src="split_2.png" alt=""></p><hr><h3 id="爬取数据集">爬取数据集</h3><p>  接下来就是模拟登录获取训练集了，由于网站会将帐号密码用 RSA 算法加密，再提交到服务器。虽然也可以用 Python 来模拟登录，但逆向 js 代码并找出它的操作逻辑未免过于麻烦，于是这里直接使用 puppeteer + express 计算加密：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">'puppeteer'</span>)</span><br><span class="line"></span><br><span class="line">!(<span class="keyword">async</span> () =&gt; {</span><br><span class="line">    <span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.launch({</span><br><span class="line">        <span class="attr">args</span>: [</span><br><span class="line">            <span class="string">`--user-data-dirs=<span class="subst">${path.join(__dirname, <span class="string">'.chromium'</span>)}</span>`</span></span><br><span class="line">        ]</span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">'http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/login.zf'</span>)</span><br><span class="line">    <span class="keyword">await</span> page.waitForFunction(<span class="function">() =&gt;</span> RSAKey ?? <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> app = express()</span><br><span class="line">    app.use(<span class="built_in">require</span>(<span class="string">'body-parser'</span>).urlencoded())</span><br><span class="line">    app.post(<span class="string">'/encrypt'</span>, <span class="keyword">async</span> (req, res) =&gt; {</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">'New encrypt request!'</span>)</span><br><span class="line">        <span class="keyword">let</span> enc = <span class="keyword">await</span> page.evaluate(<span class="function">(<span class="params">{src, modulus, exponent}</span>) =&gt;</span> {</span><br><span class="line">            <span class="keyword">let</span> rsaKey = <span class="keyword">new</span> RSAKey()</span><br><span class="line">            rsaKey.setPublic(b64tohex(modulus), b64tohex(exponent))</span><br><span class="line">            <span class="keyword">return</span> hex2b64(rsaKey.encrypt(src))</span><br><span class="line">        }, req.body)</span><br><span class="line">        res.send(enc)</span><br><span class="line">    })</span><br><span class="line">    app.listen(<span class="number">34567</span>, <span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">'Server started, listening...'</span>)</span><br><span class="line">    })</span><br><span class="line">})()</span><br></pre></td></tr></tbody></table></figure><p>  与之对应的 Python 代码，用于验证 tesseract 的识别结果，这里只需要确认验证码是否正确，所以帐号和密码都可以乱写（拼音缩写变量名全是从网站的 js 抄的，如果看得难受还请放过我 இωஇ）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> spider <span class="keyword">import</span> get_uuid</span><br><span class="line"><span class="keyword">from</span> splitter <span class="keyword">import</span> split</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">timestamp</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f'<span class="subst">{time() * <span class="number">1000</span>:<span class="number">.0</span>f}</span>'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">src, modulus, exponent</span>):</span></span><br><span class="line">    resp = httpx.post(<span class="string">'http://localhost:34567/encrypt'</span>, data={</span><br><span class="line">        <span class="string">'src'</span>: src,</span><br><span class="line">        <span class="string">'modulus'</span>: modulus,</span><br><span class="line">        <span class="string">'exponent'</span>: exponent</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> resp.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">client, zhlx, zh, mm, yzm, pubkey</span>):</span></span><br><span class="line">    modulus, exponent = pubkey[<span class="string">'modulus'</span>], pubkey[<span class="string">'exponent'</span>]</span><br><span class="line"></span><br><span class="line">    result = client.post(<span class="string">'http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/checkLogin.zf'</span>, data={</span><br><span class="line">        <span class="string">'dldata'</span>: b64encode(json.dumps({</span><br><span class="line">            <span class="string">'zhlx'</span>: encrypt(zhlx, modulus, exponent),</span><br><span class="line">            <span class="string">'zh'</span>: encrypt(zh, modulus, exponent),</span><br><span class="line">            <span class="string">'mm'</span>: encrypt(mm, modulus, exponent),</span><br><span class="line">            <span class="string">'yzm'</span>: encrypt(yzm, modulus, exponent)</span><br><span class="line">        }).encode()).decode()</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> result.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr</span>(<span class="params">image</span>):</span></span><br><span class="line">    proc = sp.Popen([<span class="string">'tesseract'</span>, <span class="string">'-'</span>, <span class="string">'-'</span>, <span class="string">'--psm'</span>, <span class="string">'7'</span>], stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.PIPE)</span><br><span class="line">    proc.stdin.write(image)</span><br><span class="line">    proc.stdin.close()</span><br><span class="line">    result = re.sub(<span class="string">'[^a-z0-9]'</span>, <span class="string">''</span>, proc.stdout.read().decode())</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(result) != <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">    client = httpx.Client(headers={</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                      <span class="string">'Chrome/96.0.4664.110 Safari/537.36'</span></span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    client.get(<span class="string">'http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/login.zf'</span>)</span><br><span class="line">    pubkey = client.get(<span class="string">f'http://yxxt.hnu.edu.cn/yxxt/xtgl/login/getPublicKey.zf?time=<span class="subst">{timestamp()}</span>'</span>).json()</span><br><span class="line">    image = client.get(<span class="string">f'http://yxxt.hnu.edu.cn/yxxt/kaptcha?time=<span class="subst">{timestamp()}</span>'</span>)</span><br><span class="line">    captcha = cv2.imdecode(np.frombuffer(image.content, np.uint8), cv2.IMREAD_COLOR)</span><br><span class="line"></span><br><span class="line">    chars = split(captcha)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> chars:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    stack = np.hstack(chars)</span><br><span class="line">    code = ocr(cv2.imencode(<span class="string">'.png'</span>, stack)[<span class="number">1</span>].tobytes())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> code:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># MMCW | YZMCW</span></span><br><span class="line">    verify = login(client, <span class="string">'xsxh'</span>, <span class="string">'u$ern@me'</span>, <span class="string">'p@$$w0rd'</span>, code, pubkey)</span><br><span class="line">    <span class="keyword">if</span> verify[<span class="string">'status'</span>] != <span class="string">'MMCW'</span>:  <span class="comment"># 密码错误</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(chars):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f'data/marked/<span class="subst">{code[i]}</span>/<span class="subst">{get_uuid()}</span>'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(pickle.dumps(char))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    logger.info(<span class="string">f'cwd: <span class="subst">{os.getcwd()}</span>'</span>)</span><br><span class="line">    os.chdir(<span class="string">'/home/mufanc/JetBrains/PycharmProjects/PyTorch Demo/HNU Captcha Hard/'</span>)</span><br><span class="line"></span><br><span class="line">    failed = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span> * <span class="number">50</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> code := check():</span><br><span class="line">                logger.info(<span class="string">f'[<span class="subst">{code}</span>] Verify success after <span class="subst">{failed}</span> failed attempts'</span>)</span><br><span class="line">                failed = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                failed += <span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><hr><h3 id="意外发现">意外发现</h3><p>  对标记好的验证码简单做个统计，会发现某些字母似乎并不可能出现：</p><p><img src="char-count.png" alt=""></p><p>  把可能出现的字符集 <code>2345678ABCDEFGMNPWXY</code> 拿去搜索，能得知这种验证码使用 Google 的开源项目 <a href="https://code.google.com/archive/p/kaptcha/">Kaptcha</a> 生成，其实这一点在获取验证码的 URL 种就有体现，但我当时并没有留意，这个项目最后一次更新是在 2010 年 12 月，目前已经 Archive <s>（不愧是我校作风）</s>。</p><p><img src="kaptcha.png" alt=""></p><p>  那么或许可以参考 <a href="https://github.com/oopsguy/kaptcha-spring-boot">这个项目</a>，在本地搭建一个服务器，生成样式差不多的验证码，再对学校的验证码进行迁移学习，这样只需很少的训练样本就能达到不错的训练效果🤔</p><hr><h2 id="训练网络">训练网络</h2><p>  我们切分出来的单个字符小图是 50×50 的，经过两次卷积和池化后送入全连接层，最终得到 20 个输出，代表该图片为相应字符的「概率」</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Character</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">10</span>, (<span class="number">5</span>, <span class="number">5</span>))  <span class="comment"># 5 x 5 卷积层 (50 x 50 -&gt; 46 x 46)</span></span><br><span class="line">        <span class="comment"># 2 x 2 最大池化层 (46 x 46 -&gt; 23 x 23)</span></span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">10</span>, <span class="number">20</span>, (<span class="number">4</span>, <span class="number">4</span>))  <span class="comment"># 5 x 5 卷积层 (23 x 23 -&gt; 20 x 20)</span></span><br><span class="line">        <span class="comment"># 2 x 2 平均池化层 (20 x 20 -&gt; 10 x 10)</span></span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">2000</span>, <span class="number">800</span>)  <span class="comment"># 全连接层 (2000 -&gt; 800)</span></span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">800</span>, <span class="number">20</span>)  <span class="comment"># 全连接层 (800 -&gt; 20)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        input_size = x.size(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 卷积层 1</span></span><br><span class="line">        x = F.relu(self.conv1(x))</span><br><span class="line">        x = F.max_pool2d(x, <span class="number">2</span>, <span class="number">2</span>)  <span class="comment"># 最大池化</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 卷积层 2</span></span><br><span class="line">        x = F.relu(self.conv2(x))</span><br><span class="line">        x = F.avg_pool2d(x, <span class="number">2</span>, <span class="number">2</span>)  <span class="comment"># 平均池化</span></span><br><span class="line">        x = x.view(input_size, -<span class="number">1</span>)  <span class="comment"># 拉伸</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 全连接层 1</span></span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 全连接层 2</span></span><br><span class="line">        x = self.fc2(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> F.log_softmax(x, dim=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p>  然后开始训练网络，这里我将十分之一的数据用作测试集，其余数据为训练集（不要问我为什么用 CPU 训练，Linux 平台的 ROCm 真的太难装了 555）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载必要的库</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dataset <span class="keyword">import</span> MyDataset</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Character</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义超参数</span></span><br><span class="line">BATCH_SIZE = <span class="number">32</span>  <span class="comment"># 每次处理的数据数量</span></span><br><span class="line">DEVICE = torch.device(<span class="string">'cpu'</span>)  <span class="comment"># 设备</span></span><br><span class="line">EPOCH = <span class="number">10</span>  <span class="comment"># 数据集循环运行的轮次</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">train_set = MyDataset(<span class="string">'train'</span>)</span><br><span class="line">test_set = MyDataset(<span class="string">'test'</span>)</span><br><span class="line"></span><br><span class="line">train_loader = DataLoader(train_set, batch_size=<span class="number">10</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">8</span>)</span><br><span class="line">test_loader = DataLoader(test_set, batch_size=<span class="number">10</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义优化器</span></span><br><span class="line">model = Character().to(DEVICE)</span><br><span class="line">optimizer = optim.Adam(model.parameters())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义训练方法</span></span><br><span class="line"><span class="comment"># noinspection PyShadowingNames</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train_model</span>(<span class="params">model, device, train_loader, optimizer, epoch</span>):</span></span><br><span class="line">    <span class="comment"># 模型训练</span></span><br><span class="line">    model.train()</span><br><span class="line">    <span class="keyword">for</span> batch_index, (data, label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loader):</span><br><span class="line">        <span class="comment"># 部署到 Device</span></span><br><span class="line">        data, label = data.to(device), label.to(device)</span><br><span class="line">        <span class="comment"># 梯度初始化为 0</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        <span class="comment"># 获取训练结果</span></span><br><span class="line">        output = model(data)</span><br><span class="line">        <span class="comment"># 计算损失</span></span><br><span class="line">        loss = F.cross_entropy(output, label)</span><br><span class="line">        <span class="comment"># 找到概率值最大的下标</span></span><br><span class="line">        pred = output.argmax(dim=<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 反向传播</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        <span class="comment"># 参数优化</span></span><br><span class="line">        optimizer.step()</span><br><span class="line">        <span class="keyword">if</span> batch_index % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f'Train Epoch: <span class="subst">{epoch}</span> \t Loss: <span class="subst">{loss.item():<span class="number">.6</span>f}</span>'</span>)</span><br><span class="line">            <span class="comment"># print(output)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义测试方法</span></span><br><span class="line"><span class="comment"># noinspection PyShadowingNames</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_model</span>(<span class="params">model, device, test_loader</span>):</span></span><br><span class="line">    <span class="comment"># 模型验证</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 计算正确率</span></span><br><span class="line">    correct = <span class="number">.0</span></span><br><span class="line">    <span class="comment"># 测试损失</span></span><br><span class="line">    test_loss = <span class="number">.0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():  <span class="comment"># 不会计算梯度，也不会进行反向传播</span></span><br><span class="line">        <span class="keyword">for</span> data, label <span class="keyword">in</span> test_loader:</span><br><span class="line">            <span class="comment"># 部署到 Device</span></span><br><span class="line">            data, label = data.to(device), label.to(device)</span><br><span class="line">            <span class="comment"># 测试数据</span></span><br><span class="line">            output = model(data)</span><br><span class="line">            <span class="comment"># 计算测试损失</span></span><br><span class="line">            test_loss += F.cross_entropy(output, label).item()</span><br><span class="line">            <span class="comment"># 找到概率值最大的下标</span></span><br><span class="line">            pred = output.argmax(dim=<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 累计正确率</span></span><br><span class="line">            correct += pred.eq(label.view_as(pred)).<span class="built_in">sum</span>().item()</span><br><span class="line">        test_loss /= <span class="built_in">len</span>(test_loader.dataset)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f'Test -- Average Loss: <span class="subst">{test_loss:<span class="number">.4</span>f}</span> \t Accuracy: <span class="subst">{<span class="number">100</span>*correct/<span class="built_in">len</span>(test_loader.dataset):<span class="number">.3</span>f}</span>%'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始训练</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, EPOCH + <span class="number">1</span>):</span><br><span class="line">        train_model(model, DEVICE, train_loader, optimizer, epoch)</span><br><span class="line">        test_model(model, DEVICE, test_loader)</span><br><span class="line"></span><br><span class="line">    torch.save(model.state_dict(), <span class="string">'../model.pck'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最终跑起来效果还不错，识别率达到了 99.8%，放几张图片展示下效果：</p><div class="fj-gallery"><p><img src="myplot-1.png" alt=""><br><img src="myplot-2.png" alt=""><br><img src="myplot-3.png" alt=""><br><img src="myplot-4.png" alt=""><br><img src="myplot-5.png" alt=""><br><img src="myplot-6.png" alt=""></p>          </div></body></html>]]></content>
      
      
      <categories>
          
          <category> 工程实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 验证码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>序</title>
      <link href="/posts/13091/"/>
      <url>/posts/13091/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><center style="font-size: 1.3rem;">所以你好 欢迎来到 <b>星尘空间</b><br>这是我的博客 主要写一些技术类的文章<br>当然 可能还会放一些自己的作品<br>那么请持续关注啦<br><br></center><hr><div class="note info simple"><center><b style="font-size: 1.8rem">~ 使用电脑以获得最佳阅读体验 ~</b></center></div><h2 id="关于我">关于我</h2><ul><li><p>咸鱼一枚，博客随缘更新</p></li><li><p>20 级学生，目前在湖南大学勤奋学习</p></li><li><p>没事就瞎捣鼓些算法 <s>（虽然是 OI 蒟蒻</s></p></li><li><p>喜欢编程，喜欢设计，喜欢研究各种新奇好玩的东西</p></li><li><p>觉得自己应该是一只有趣的咸鱼</p></li></ul><h2 id="关于这个博客">关于这个博客</h2><ul><li><p>由于各种时间不够，上了大学也只能不定期诈尸</p></li><li><p>不过还是会保持尽量更新的啦~</p></li><li><p>希望大家能够多多关注</p></li></ul><hr><br><div class="poem"><div class="poem-title">镜中梦</div><div class="poem-author"></div><p><ruby>因果乃旋转纺车<rt>因果は巡る糸車</rt></ruby>　<ruby>光影之多面明镜<rt>光と影の多面鏡</rt></ruby></p><p><ruby>浮世苍茫<rt>現世の一切は</rt></ruby>　<ruby>不过瞬逝幻梦<rt>一時の夢</rt></ruby></p><p><ruby>善恶爱诳<rt>善も悪も　愛も嘘も</rt></ruby>　<ruby>皆有定数于命运之轮中<rt>全て運命の輪の中で</rt></ruby></p><p><ruby>吞噬于黄泉之冥暗<rt>常世の闇に飲まれゆく</rt></ruby></p><p><ruby>呜呼，吾乃梦之戍人<rt>嗚呼、我は夢の防人</rt></ruby>　<ruby>幻恋之观者<rt>うつろう恋の傍観者</rt></ruby></p><p><ruby>唯于万华镜中<rt>万華鏡の中で</rt></ruby>　<ruby>永世长存<rt>永遠に生きるのみ</rt></ruby></p></div><br></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在 Kubuntu 系统中启用 KVM 并通过 WinApps 使用 TIM</title>
      <link href="/posts/2665227836/"/>
      <url>/posts/2665227836/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  在 linux 系统中优雅地使用 QQ、TIM 一直是广大 linux 爱好者的一大痛点。Deepin wine 版的 QQ 过于老旧，甚至已经无法登录；而第三方客户端长期无人维护，各种不稳定，甚至随时有作者跑路的可能；什么？你说腾讯官方的 QQ for linux？我在下面放一张图，大家自行体会：</p><a href="https://im.qq.com/linuxqq/index.html"><p><img src="qq-for-linux.png" alt="《 QQ For Linux 》"></p></a><p>  这复古的界面，甚至让我有种回到 2008 的错觉，姑且不讨论这东西是否真的能用，单论这卖相，就让我不敢恭维。</p><p>  一日，在 GitHub 上找到了 <a href="https://github.com/Fmstrat/winapps">WinApps</a>，顿时眼前一亮，根据官方的描述：</p><blockquote><p>   WinApps 支持像原生操作系统一样在 Linux（Ubuntu / Fedora）和 GNOME / KDE 中运行微软 Office / Adobe 等 Windows 应用程序。</p></blockquote><p>  截至文章写作时，这个项目已经收获了 5.9k 的 star，其稳定性可见一斑，非常值得一试。</p><hr><h2 id="安装并配置-TIM">安装并配置 TIM</h2><p>  WinApps 依赖于后台 VM 容器中运行的 Windows RDP 服务器，这里强烈推荐使用 KVM 作为容器，KVM 是一种 CPU 和内存高效的虚拟化引擎，与大多数主要 Linux 发行版捆绑在一起，配置 KVM 的教程随便一搜便有不少，本文着重介绍 WinApps 的配置过程，这里仅放几篇思路比较清晰的文章作为参考：</p><ul><li><p><a href="https://github.com/Fmstrat/winapps/blob/main/docs/KVM.md"><strong>【官方文档⭐️必看】</strong> Creating a Virtual Machine in KVM</a></p></li><li><p><a href="https://www.myfreax.com/how-to-install-kvm-on-ubuntu-18-04/">如何在Ubuntu 18.04上安装Kvm</a></p></li><li><p><a href="https://www.hiczp.com/xu-ni-hua/wei-kvm-zhong-de-windows-xu-ni-ji-qi-yong-virtio.html">为 KVM 中的 Windows 虚拟机启用 VirtIO</a></p></li></ul><p>  安装并配置好 Windows 后，将虚拟机重启一次，然后搜索安装 TIM，安装位置保持默认，安装完成后注销虚拟机，接下来准备将 TIM 加入 WinApps 的预定义应用列表中，可以参考 <a href="https://github.com/Fmstrat/winapps/pull/154">这个 PR</a></p><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>  写作本文时，这个 PR 还没有被合并，如果你配置时发现该 PR 已经合并，那么直接执行项目根目录下的 <code>installer.sh</code> 即可</p></div><p>  按照 PR 中的说明，在项目文件夹下创建以下两个文件：</p><div class="tabs" id="file"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#file-1">File 1</button></li><li class="tab"><button type="button" data-href="#file-2">File 2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="file-1"><ul><li><code>apps/tim/icon.svg</code></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">"1609091179180"</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 1024 1024"</span> <span class="attr">version</span>=<span class="string">"1.1"</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">p-id</span>=<span class="string">"8202"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M511.500488 512.499512m-511.500488 0a511.500488 511.500488 0 1 0 1023.000976 0 511.500488 511.500488 0 1 0-1023.000976 0Z"</span> <span class="attr">fill</span>=<span class="string">"#1BC1FA"</span> <span class="attr">p-id</span>=<span class="string">"8203"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M784.234146 572.440976c8.178014 0 16.273108 0.253752 24.282287 0.728288-16.961436-38.434466-42.247742-69.886751-58.977405-90.331785 2.822244-8.482716 11.30496-56.536788-25.443153-90.453666v-2.827239c0-132.850263-96.103149-231.785647-214.822213-231.785647-118.717065 0-214.82521 96.107145-214.825209 231.785647v2.827239c-33.915879 33.915879-25.437159 81.969951-19.782681 90.453666-25.444152 28.265397-73.49223 87.62343-76.320469 155.461182 0 16.961436 2.827239 45.226833 11.305959 56.531794 11.305959 14.133198 39.570357-2.827239 62.186272-48.054073 5.650482 19.788675 19.78368 53.709549 50.876316 93.281905-50.876316 11.302962-65.009514 62.186271-48.049077 90.450669 11.305959 19.788675 39.570357 33.920874 87.624429 33.920874 78.496343 0 115.815899-19.378076 134.378771-35.711126C492.644901 814.680414 490.520976 800.136617 490.520976 785.233171c0-117.522232 131.500581-212.792195 293.71317-212.792195z"</span> <span class="attr">fill</span>=<span class="string">"#FFFFFF"</span> <span class="attr">p-id</span>=<span class="string">"8204"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M514.925143 819.204995c5.654478 0 11.309955 2.82624 14.132199 5.649483 16.960437 16.960437 53.709549 39.575352 138.50674 39.575352 48.054072 0 76.320468-16.960437 87.625428-33.920874 16.960437-28.264398 2.827239-79.147707-48.054072-90.450669 31.092636-39.572355 45.225834-73.493229 50.881311-93.281905 19.787676 45.226833 50.881311 62.18727 62.186271 48.054073 2.827239-11.30496 5.650482-39.570357 5.650482-56.531794-1.93511-23.223321-8.508691-45.121936-17.337069-65.128398-8.009179-0.475536-16.104273-0.729288-24.282287-0.729287-162.212589 0-293.713171 95.269963-293.71317 212.792195 0 14.903446 2.123926 29.447243 6.147996 43.485533a88.18688 88.18688 0 0 0 4.122973-3.864226c2.827239-2.823243 8.481717-5.649483 14.133198-5.649483z"</span> <span class="attr">fill</span>=<span class="string">"#FFFFFF"</span> <span class="attr">opacity</span>=<span class="string">".4"</span> <span class="attr">p-id</span>=<span class="string">"8205"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="file-2"><ul><li><code>apps/tim/info</code></li></ul><figure class="highlight profile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># GNOME shortcut name</span><br><span class="line">NAME=<span class="string">"Tim"</span></span><br><span class="line"></span><br><span class="line"># Used for descriptions and window class</span><br><span class="line">FULL_NAME=<span class="string">"Tencent Tim"</span></span><br><span class="line"></span><br><span class="line"># The executable inside windows</span><br><span class="line">WIN_EXECUTABLE=<span class="string">"C:\Program Files (x86)\Tencent\TIM\Bin\TIM.exe"</span></span><br><span class="line"></span><br><span class="line"># GNOME categories</span><br><span class="line">CATEGORIES=<span class="string">"WinApps;Tencent"</span></span><br><span class="line"></span><br><span class="line"># GNOME mimetypes</span><br><span class="line">MIME_TYPES=<span class="string">"application/tencent-tim"</span></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>  重新执行 <code>installer.sh</code>，依次选择 <code>User</code> -&gt; <code>Select which pre-configured applications to set up</code> -&gt; <code>Tencent Tim (tim)</code> 然后空格选中，建议同时安装一个 cmd，方便在没有图形界面的情况下管理 Windows，最后回车确定，选择 <code>Do not set up any applications</code> 退出即可</p><p>  最后在 Ubuntu 的应用程序列表中找到 TIM 并运行，就可以开始愉快的聊天啦!</p><p><img src="tim-login.png" alt=""></p><hr><h2 id="额外改进">额外改进</h2><p>  上述方式的优点很多，缺点也很明显，还需要做一些额外的改进:</p><div class="tabs" id="improve"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#improve-1">输入法</button></li><li class="tab"><button type="button" data-href="#improve-2">文件访问</button></li><li class="tab"><button type="button" data-href="#improve-3">重复登录</button></li><li class="tab"><button type="button" data-href="#improve-4">最小化</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="improve-1"><p>  登录 TIM 之后，我首先发现的问题是 ubuntu 中使用的 fcitx-rime 输入法无法在 TIM 的聊天窗口切出，也就导致了了不能输入中文，对于一个 IM 软件来说这简直就是致命打击😰，好在之前也有人于到过此问题，并提了一个 <a href="https://github.com/Fmstrat/winapps/issues/152">issue</a>，根据其中说法，首先执行：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfreerdp /u:&lt;User_Name&gt; /p:&lt;password&gt; /v:&lt;IP number&gt; /kbd-list</span><br></pre></td></tr></tbody></table></figure><p>  查看你的 <ruby> <strong>键盘布局</strong> <rt>Keyboard Layouts</rt></ruby>，然后编辑 <code>~/.config/winapps/winapps.conf</code> 添加如下字段：</p><figure class="highlight profile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RDP_FLAGS=<span class="string">"/kbd:&lt;键盘布局代码&gt;"</span></span><br></pre></td></tr></tbody></table></figure><p>  将虚拟机重启后，便可以使用<strong>虚拟机中的输入法</strong>了：</p><p><img src="configure-input-method.png" alt=""></p><div class="note warning simple"><p>已知问题：将窗口切到后台时，屏幕上输入法的位置会出现黑框/白框，启动任意其它 WinApps 后消失</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="improve-2"><p>  WinApps 默认将 home 目录作为一个网络位置挂载到 Windows 虚拟机上，已经非常方便了，但我更希望将 TIM 的数据文件夹直重定向到 <code>~/Documents</code> 下，这样就能在 ubuntu 中直接访问到 TIM 下载的文件，从而减少一次复制。</p><p>  首先在 ubuntu 的主目录下创建 Tencent Files 文件夹，然后进入虚拟机将原来的 Tencent Files 文件夹删除，以<strong>管理员</strong>权限打开终端，执行：</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklink /d "C:\Users\&lt;username&gt;\Documents\Tencent Files" "\\tsclient\home\Documents\Tencent Files"</span><br></pre></td></tr></tbody></table></figure><p>  再次启动 TIM 并登录，便可以在 Dolphin 中看到 TIM 的数据了</p><p><img src="redirect-files.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="improve-3"><p>  在关闭 TIM 窗口后，由于 TIM 实际上是被最小化到了 Windows 的托盘，此时如果再次从应用中启动 TIM，则会提示不能重复登录，十分的反人类。</p><p>  这里提供一个思路，可以通过编辑注册表项：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options</span><br></pre></td></tr></tbody></table></figure><p>  来劫持 TIM 的启动，控制逻辑也很简单，当远程发起启动请求时，首先检查是否有运行中的 TIM，如果有则直接显示窗口，否则重新启动 TIM。</p><p>  可以参考这篇文章（英文）：<a href="https://blog.malwarebytes.com/101/2015/12/an-introduction-to-image-file-execution-options/">An Introduction to Image File Execution Options</a></p><hr><p>  或者采用一种更为摆烂的方式，直接修改 TIM.exe 为 TIM_real.exe，然后编译一个假的 TIM.exe 作为代理，下面是我的实现代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">launchTIM</span><span class="params">()</span> </span>{</span><br><span class="line">    STARTUPINFO si;</span><br><span class="line">    PROCESS_INFORMATION pi;</span><br><span class="line">    LPTSTR szCmdLine = _tcsdup(<span class="built_in">TEXT</span>(<span class="string">"C:\\Program Files (x86)\\Tencent\\TIM\\Bin\\TIM_real.exe"</span>));</span><br><span class="line">    LPTSTR szWorkDir = _tcsdup(<span class="built_in">TEXT</span>(<span class="string">"C:\\Program Files (x86)\\Tencent\\TIM\\Bin"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ZeroMemory</span>(&amp;si, <span class="built_in"><span class="keyword">sizeof</span></span>(si));</span><br><span class="line">    si.cb = <span class="built_in"><span class="keyword">sizeof</span></span>(si);</span><br><span class="line">    <span class="built_in">ZeroMemory</span>(&amp;pi, <span class="built_in"><span class="keyword">sizeof</span></span>(pi));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动子进程</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">CreateProcess</span>(</span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpApplicationName</span></span><br><span class="line">        szCmdLine,  <span class="comment">// lpCommandLine</span></span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpProcessAttributes</span></span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpThreadAttributes</span></span><br><span class="line">        FALSE,      <span class="comment">// bInheritHandles</span></span><br><span class="line">        <span class="number">0</span>,          <span class="comment">// dwCreationFlags</span></span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpEnvironment</span></span><br><span class="line">        szWorkDir,  <span class="comment">// lpCurrentDirectory</span></span><br><span class="line">        &amp;si,        <span class="comment">// lpStartupInfo</span></span><br><span class="line">        &amp;pi         <span class="comment">// lpProcessInformation</span></span><br><span class="line">    )) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"CreateProcess failed (%d)./n"</span>, <span class="built_in">GetLastError</span>());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭进程和线程句柄</span></span><br><span class="line">    <span class="built_in">CloseHandle</span>(pi.hProcess);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(pi.hThread);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    HWND hwTIM = <span class="built_in">FindWindowA</span>(<span class="string">"TXGuiFoundation"</span>, <span class="string">"TIM"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!hwTIM) {</span><br><span class="line">        <span class="comment">// 如果找不到窗口则直接启动 TIM</span></span><br><span class="line">        <span class="built_in">launchTIM</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">IsWindowVisible</span>(hwTIM)) {</span><br><span class="line">        <span class="comment">// 否则显示窗口</span></span><br><span class="line">        <span class="built_in">ShowWindow</span>(hwTIM, SW_NORMAL);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  当然这种方式也可能造成一些奇怪的问题，毕竟 TIM 的 <code>argv[0]</code> 被修改了，在使用时还得留个心眼。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="improve-4"><p>  在 ubuntu 中最小化 TIM 窗口时会造成窗口鬼畜，暂时没想到什么好的解决办法。这段就留着以后再来补充，如果你有什么好的思路，也欢迎评论交流</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h2 id="参考-4">参考</h2><ul><li><a href="https://www.mond.top/ubuntu/ubuntu-winapps/">Winapps：在 Ubuntu 上使用 MSOffice</a></li><li><a href="https://www.anquanke.com/post/id/151425">隐蔽后门——Image File Execution Options新玩法 - 安全客</a></li><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa">CreateProcessA function (processthreadsapi.h) - Win32 apps | Microsoft Docs</a></li><li><a href="http://www.jtianling.com/windows%E4%B8%8B%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%88%9B%E5%BB%BAapi-createprocess%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E6%BC%AB%E8%B0%88.html">Windows下的进程创建API–CreateProcess使用经验漫谈</a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 环境运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次 Trojan 搭建 &amp; 配置实战</title>
      <link href="/posts/1428613111/"/>
      <url>/posts/1428613111/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="325a8bd6ffcbfc36622f3f59b5fe2b90e4311e2736b9b2a2bd719e424240d552"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码，查看文章。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免 Root 注入乐跑 APP</title>
      <link href="/posts/26085/"/>
      <url>/posts/26085/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><div class="note warning simple"><p>这篇博客已摆烂，可能对您的参考价值不大</p></div><p>  运动本为一件快乐的事，但当运动变为一项强制性的任务之后，难免会引起人的反感。步道乐跑，一款主打校园运动健康的跑步锻炼 APP，成为了不少大学生手机中的「必备应用」，强制跑步、在限速的同时还要边看地图边寻找打卡点，有何 “乐跑” 可言？</p><p>  身为一名大学生的我，同样深受其害。作为一名玩机爱好者，自然要尝试一下破解这款软件，做到足不出户，就能完美完成每天的跑步任务。</p><span id="more"></span><hr><h2 id="背景-2">背景</h2><p><img src="Fake_Location.png" alt=""></p><p>  在 Root 或 Xposed 的环境下，早有人实现了通过修改 GPS 定位信息模拟移动的模块，比如 <a href="http://apps.lerist.cc:81/fakelocation">Fake Location</a> 就是一款非常经典的位置模拟应用。</p><p>  奈何这些软件或模块大多闭源，有的甚至还收费（比如刚刚提到的 Fake Location），让他们运行在高权限之下多少有些不放心。现如今想要获得一台 Root 的 Android 手机也变得越来越难，于是产生了重新打包乐跑 APP 实现注入的想法。</p><h2 id="初步测试">初步测试</h2><p>  首先初步检查 APK，发现是加固的，导致重新打包 dex 添加 Xposed Hook 变得比较困难，遂采用另一种不需要修改 <code>classes.dex</code> 和 <code>AndroidManifest.xml</code> 的注入方式</p><p><img src="%E7%BB%91%E7%BB%91%E5%8A%A0%E5%9B%BA.png" alt=""></p><p>  下面隆重介绍今天的主角：<a href="https://frida.re/docs/gadget/">Frida Gadget</a>。Frida Gadget 是著名轻量级 Hook 框架在无 Root 设备上的一种实现，通过 ELF 注入的方式，将自己的库打包到目标应用的链接库中，从而绕过没有高权限的限制。</p><p>  首先启动步道乐跑 APP，在终端中查看进程：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> root@localhost:~</span><br><span class="line"># ps -ef | grep com.lptiyu.tanke</span><br><span class="line">u0_a259   2634   791  0 16:08 ?        00:00:02 com.lptiyu.tanke:mult</span><br><span class="line">u0_a259  26966   791  8 16:02 ?        00:03:50 com.lptiyu.tanke</span><br><span class="line">root     29796 29108  2 16:46 pts/4    00:00:00 grep --color com.lptiyu.tanke</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [3, 4], 'red');"></script><p>  发现只有两个进程，传闻绑绑加固使用的是父子进程互相附加的方式防止被 ptrace，于是继续查看两个进程的附加信息：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> root@localhost:~</span><br><span class="line"># cat /proc/$(pidof com.lptiyu.tanke)/status</span><br><span class="line">Name:   om.lptiyu.tanke</span><br><span class="line">Umask:  0077</span><br><span class="line">State:  R (running)</span><br><span class="line">Tgid:   26966</span><br><span class="line">Ngid:   0</span><br><span class="line">Pid:    26966</span><br><span class="line">PPid:   791</span><br><span class="line">TracerPid:      0</span><br><span class="line">Uid:    10259   10259   10259   10259</span><br><span class="line">Gid:    10259   10259   10259   10259</span><br><span class="line">........</span><br><span class="line"></span><br><span class="line"> root@localhost:~</span><br><span class="line"># cat /proc/$(pidof com.lptiyu.tanke:mult)/status</span><br><span class="line">Name:   tiyu.tanke:mult</span><br><span class="line">Umask:  0077</span><br><span class="line">State:  S (sleeping)</span><br><span class="line">Tgid:   2634</span><br><span class="line">Ngid:   0</span><br><span class="line">Pid:    2634</span><br><span class="line">PPid:   791</span><br><span class="line">TracerPid:      0</span><br><span class="line">Uid:    10259   10259   10259   10259</span><br><span class="line">Gid:    10259   10259   10259   10259</span><br><span class="line">........</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [10, 24], 'red');"></script><p>  <code>TracePid</code> 值都为 0，似乎并不像传说中的那样通过父子进程相互附加俩防止被 ptrace，这样一来瞬间就变得开朗了许多。接着使用 strace 命令追踪 APP 启动时对各个 so 库的加载情况，执行下面的命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跟踪          进程 ID      追踪 fork             重定向输出到文件</span></span><br><span class="line">strace    -p $(pidof zygote)    -f     2&gt; /sdcard/com.lptiyu.tanke.strace.txt</span><br></pre></td></tr></tbody></table></figure><p>  为了避免多余的输出（执行命令后所有由 zygote 进程 fork 出的进程都会被追踪），最好通过 ssh 或在 adb shell 中远程执行此命令，接着启动乐跑 APP，<strong>等待 Activity 加载完毕</strong>后结束跟踪，然后执行下面的命令获取其 <strong>pid</strong>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出进程      查找乐跑 APP</span></span><br><span class="line">  ps -ef | grep com.lptiyu.tanke</span><br></pre></td></tr></tbody></table></figure><p><img src="%E8%8E%B7%E5%8F%96pid.png" alt=""></p><p>  分析刚刚追踪到的输出文件，虽然文件很长，我们只需要关注其中乐跑 APP 的进程（通过刚刚获取到的 pid）加载链接库的部分就可以了，下面是提取出来的关键记录：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libSecShell.so", O_RDONLY|O_LARGEFILE &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 45</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libSecShell.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 45</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libmmkv.so", O_RDONLY|O_LARGEFILE &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 56</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libmmkv.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 56</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libjni_utils.so", O_RDONLY|O_LARGEFILE) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libjni_utils.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libtrace_utils.so", O_RDONLY|O_LARGEFILE) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libtrace_utils.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libsqlcipher.so", O_RDONLY|O_LARGEFILE) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libsqlcipher.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 49</span><br></pre></td></tr></tbody></table></figure><h2 id="尝试注入">尝试注入</h2><p>  既然是要注入，我们肯定希望自己的代码能够尽快执行，可以看到乐跑 APP 首先会加载 <code>libSecShell.so</code>，然后依次是 <code>libmmkv.so</code>、<code>libjni_utils.so</code>、<code>libtrace_utils.so</code> 和 <code>libsqlcipher.so</code>。首先尝试对 <code>libSecShell.so</code> 进行注入，这里使用我封装的工具：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> lief</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重打包 so 文件</span></span><br><span class="line">os.system(<span class="string">f'readelf -d <span class="subst">{argv[<span class="number">1</span>]}</span> | grep NEEDED'</span>)</span><br><span class="line">elf_type = re.search(</span><br><span class="line"><span class="string">'file format elf(32|64)'</span>,</span><br><span class="line">sp.Popen(</span><br><span class="line"><span class="string">f'objdump -a <span class="subst">{argv[<span class="number">1</span>]}</span>'</span>, stdout=sp.PIPE, shell=<span class="literal">True</span></span><br><span class="line">).stdout.read().decode()</span><br><span class="line">).group(<span class="number">1</span>)</span><br><span class="line">shutil.copyfile(<span class="string">f'arm<span class="subst">{elf_type}</span>/libgadget.so'</span>, <span class="string">'./libgadget.so'</span>)</span><br><span class="line">libso = lief.parse(argv[<span class="number">1</span>])</span><br><span class="line">libso.add_library(<span class="string">'libgadget.so'</span>)</span><br><span class="line">libso.write(argv[<span class="number">1</span>])</span><br><span class="line">os.system(<span class="string">f'readelf -d <span class="subst">{argv[<span class="number">1</span>]}</span> | grep NEEDED'</span>)</span><br></pre></td></tr></tbody></table></figure><p>  执行 <code>python repack.py libSecShell.so</code>，出现报错信息，似乎是因为 <code>libSecShell.so</code> 没有任何依赖所导致（或许这么说不太准确？），接下来尝试下一个库，将 <code>libmmkv.so</code> 提取到电脑，<a href="https://github.com/frida/frida/releases">下载</a> Frida Gadget，然后使用 <a href="https://github.com/lief-project/LIEF">LIEF</a> 工具进行重新打包（用上面封装好的也可以，这里为了展示细节在 Terminal 中分步完成）：</p><p><img src="ELF%E6%B3%A8%E5%85%A5.png" alt=""></p><p>  此时刚刚下载的 <code>libgadget.so</code> 已经被添加到 <code>libmmkv.so</code> 的依赖中了，应用启动时会将其一同加载，我们也就能在它的构造方法里面搞点事情。</p><p>  接下来编写配置文件，新建一个 <code>libgadget.config.so</code> 注意一定要和刚刚添加的依赖库同名，编辑内容如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="string">"interaction"</span>: {</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"script"</span>,  <span class="comment">// 脚本模式</span></span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/data/local/tmp/script.js"</span>,  <span class="comment">// 脚本文件路径，注意一定要放在有读权限的地方</span></span><br><span class="line">    <span class="string">"on_change"</span>: <span class="string">"ignore"</span>  <span class="comment">// 脚本被修改时的行为，若为 "reload" 则会重新加载</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  附 script.js 代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line">-</span><br><span class="line">Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">   <span class="keyword">let</span> Log = Java.use(<span class="string">"android.util.Log"</span>);</span><br><span class="line">   Log.i(<span class="string">"frida-lief"</span>, <span class="string">"OHHHHHHHHHHHHHHHHHHHHHHH"</span>);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>  将 <code>libgadget.so</code>、<code>libgadget.config.so</code> 和重新打包的 <code>libmmkv.so</code> 一同添加/覆盖到安装包中，重新签名后安装，同时观察到 Logcat 中成功输出：</p><p><img src="Logcat%E8%BE%93%E5%87%BA.png" alt=""></p><p>  再看屏幕，却发现 APP 迟迟没有启动，继续查看 Logcat，发现循环输出报错信息，原因尚不明：</p><p><img src="%E5%BE%AA%E7%8E%AF%E6%8A%A5%E9%94%99.png" alt=""></p><h2 id="参考-5">参考</h2><p>  <a href="https://bbs.pediy.com/thread-229970.htm">[翻译]在未root的设备上使用frida-外文翻译-看雪论坛-安全社区</a></p><p>  <a href="https://frida.re/docs/gadget/">Gadget | Frida • A world-class dynamic instrumentation framework</a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 工程实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单神经网络之验证码识别</title>
      <link href="/posts/69006241/"/>
      <url>/posts/69006241/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  此前虽也做过不少验证码识别的项目（比如微班安全教育和 iSmart 以及智学网的登录），但这些东西图形都比较简单，只用简单的模板匹配就能达到很高的识别率，所以一直也就这么用着，直到有一天碰到了硬点子……</p><p><img src="%E7%96%AB%E6%83%85%E9%98%B2%E6%8E%A7-%E7%99%BB%E5%BD%95%E9%A1%B5.png" alt=""></p><p>  这网站的验证码长这样：</p><p><img src="%E9%AA%8C%E8%AF%81%E7%A0%81-%E6%A0%B7%E4%BE%8B.png" alt=""></p><p>  随机的颜色、随机的位置、随机的扭曲度、随机的字号……让传统匹配算法有些力不从心，之前虽然有过用 Tesseract 成功识别的案例，不过一是识别率不够高，二是移植脚本时还要额外安装 Tesseract（不同平台的安装方法还不同），感觉怪麻烦的，思来想去……感觉核心技术还是要掌握在自己手中，如果能打造一款针对这个网站设计的验证码识别脚本，应该可大大提升识别的效率和准确度。</p><hr><h2 id="准备工作">准备工作</h2><p>  说干就干，首先设计好框架，神经网络应该只具备单个字符识别的功能，这样会更有利于训练，所以需要先用一些简单的预处理算法将 4 字符的验证码切分为 4 张等大的图片，再分别交给网络进行识别，最后将结果整合起来，作为识别的结果。</p><h3 id="将验证码切分为字符">将验证码切分为字符</h3><p>  那么先从最简单的切分部分开始，下载 1000 张验证码图片作为模板和测试用例：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_uuid</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f'<span class="subst">{time()*<span class="number">1000</span>:<span class="number">.0</span>f}</span><span class="subst">{randint(<span class="number">100</span>, <span class="number">999</span>)}</span>'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download_image</span>(<span class="params">count</span>):</span></span><br><span class="line">    client = httpx.AsyncClient()</span><br><span class="line">    limit = asyncio.Semaphore(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">internal</span>():</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> limit:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                token = (</span><br><span class="line">                    <span class="keyword">await</span> client.get(<span class="string">'https://fangkong.hnu.edu.cn/api/v1/account/getimgvcode'</span>)</span><br><span class="line">                ).json()[<span class="string">'data'</span>][<span class="string">'Token'</span>]</span><br><span class="line">                image = <span class="keyword">await</span> client.get(<span class="string">f'https://fangkong.hnu.edu.cn/imagevcode?token=<span class="subst">{token}</span>'</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        path = <span class="string">f'../data/raw_image/<span class="subst">{get_uuid()}</span>.jpg'</span></span><br><span class="line">        logger.info(<span class="string">f'File saved to: <span class="subst">{path}</span>'</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(image.content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*[internal() <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(count)])</span><br><span class="line">    <span class="keyword">await</span> client.aclose()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">await</span> download_image(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    loop = asyncio.new_event_loop()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        loop.run_until_complete(main())</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        loop.close()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%A8%A1%E6%9D%BF.png" alt="迁移博客时代码改过了，和上图的文件名对不上"></p><p>  从模板的内容来看，大部分的文字都位于验证码图片的左上角，自然而然的会想到先对验证码进行裁剪预处理，但究竟需要裁多大一块区域呢？我用一个脚本对所有图片进行了灰度化和叠加处理：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">overlay = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'../data/raw_image'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    image = cv2.imread(<span class="string">f'../data/raw_image/<span class="subst">{file}</span>'</span>)</span><br><span class="line">    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    <span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        overlay = np.zeros(image.shape)</span><br><span class="line">    overlay += image</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    overlay = overlay * <span class="number">255</span> / np.<span class="built_in">max</span>(overlay)</span><br><span class="line">    plt.imshow(overlay)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最终结果显示：99% 的数字都出现在左上角 67*27 的区域中，所以我们提前裁剪这块区域，以减少后期的计算量</p><p><img src="%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8F%A0%E5%8A%A0.png" alt=""></p><p>  难点来了！如何让程序将不同的字符区分出来，成为一个值得研究的问题。传统的方法是统计每一竖排上黑色像素的数量（想象一张柱状图），然后采用一根扫描线自下而上不断扫描，直到扫描线上方的「柱状图」连通块数量第一次为 4（即字符数量），但在字符随机倾斜的情况下，继续沿用这样的方法非常容易产生切割错误的问题，我们需要一种更有效的算法来进行字符切分</p><hr><p><img src="%E4%BA%8C%E5%80%BC%E5%8C%96-4378.png" alt=""></p><p>  观察二值化后的验证码，发现每个字符的各个像素之间的关联性并不强，甚至有些字符简直可以用「支离破碎」来形容，这意味着如果直接进行搜索，将很容易出现错误。所以考虑首先使用 3×5 的算子对图片进行高斯模糊处理，然后再进行一次二值化，从而将每个字符「粘连」起来，处理之后的图片长这样：</p><p><img src="%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A-%E4%BA%8C%E5%80%BC%E5%8C%96.png" alt=""></p><p>  差不多就要开始切分了，首先对上一步得到的图像进行深度优先搜索，找出所有连通量在 20～150 的黑色像素连通块并进行标记，最后进行一次判断，如果找到符合条件的像素块（即字符）数量为 4，则按照记录进行切分，将每个字符缩放到 10×15px 的区域并置中，最后做一次 3×3px 的高斯模糊：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">DIGITS = <span class="number">4</span>  <span class="comment"># 验证码的字符数</span></span><br><span class="line">WIDTH, HEIGHT = <span class="number">67</span>, <span class="number">27</span>  <span class="comment"># 从左上角裁剪的长宽</span></span><br><span class="line">BINARY_THRESHOLD = <span class="number">180</span>  <span class="comment"># 二值化的阈值</span></span><br><span class="line">BLUR_CORE_SIZE = (<span class="number">3</span>, <span class="number">5</span>)  <span class="comment"># 高斯模糊核心大小</span></span><br><span class="line">BLUR_BINARY_THRESHOLD = <span class="number">210</span>  <span class="comment"># 高斯模糊后再次二值化的阈值</span></span><br><span class="line">MIN_BLOCK_SIZE, MAX_BLOCK_SIZE = <span class="number">20</span>, <span class="number">150</span>  <span class="comment"># 像素块大小范围</span></span><br><span class="line">DIGIT_WIDTH, DIGIT_HEIGHT = <span class="number">10</span>, <span class="number">15</span>  <span class="comment"># 验证码数字尺寸</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mark</span>(<span class="params">image, mask</span>):</span></span><br><span class="line">    shape = image.shape</span><br><span class="line">    flag = np.zeros(image.shape, dtype=np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">x, y, depth, flow</span>):</span></span><br><span class="line">        <span class="comment"># noinspection PyChainedComparisons</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; shape[<span class="number">0</span>] <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; shape[<span class="number">1</span>] <span class="keyword">and</span> mask[x, y] == <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> flag[x, y]:</span><br><span class="line">            flow.append((x, y))</span><br><span class="line">            flag[x, y] = <span class="number">1</span></span><br><span class="line">            count = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> way <span class="keyword">in</span> ((-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, -<span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>)):</span><br><span class="line">                count += dfs(x + way[<span class="number">0</span>], y + way[<span class="number">1</span>], depth + <span class="number">1</span>, flow)</span><br><span class="line">            <span class="keyword">return</span> count</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    results = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(image.shape[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(image.shape[<span class="number">1</span>]):</span><br><span class="line">            <span class="keyword">if</span> flag[i, j]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> mask[i, j] == <span class="number">0</span>:</span><br><span class="line">                pixels = []</span><br><span class="line">                <span class="keyword">if</span> MIN_BLOCK_SIZE &lt;= dfs(i, j, <span class="number">0</span>, pixels) &lt;= MAX_BLOCK_SIZE:</span><br><span class="line">                    results.append((</span><br><span class="line">                        image[</span><br><span class="line">                            <span class="built_in">min</span>(x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels):<span class="built_in">max</span>(x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels),</span><br><span class="line">                            <span class="built_in">min</span>(x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels):<span class="built_in">max</span>(x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels)</span><br><span class="line">                        ],</span><br><span class="line">                        <span class="built_in">sum</span>(x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels) / <span class="built_in">len</span>(pixels)</span><br><span class="line">                    ))</span><br><span class="line">            flag[i, j] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(results) != <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    results.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> results]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split</span>(<span class="params">image</span>):</span></span><br><span class="line">    image = cv2.cvtColor(image[:HEIGHT, :WIDTH], cv2.COLOR_RGB2GRAY)</span><br><span class="line">    binary = cv2.threshold(image, BINARY_THRESHOLD, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    mask = cv2.threshold(</span><br><span class="line">        cv2.GaussianBlur(binary, BLUR_CORE_SIZE, <span class="number">0</span>),</span><br><span class="line">        BLUR_BINARY_THRESHOLD, <span class="number">255</span>, cv2.THRESH_BINARY</span><br><span class="line">    )[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    digits = mark(image, mask)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> digits <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, digit <span class="keyword">in</span> <span class="built_in">enumerate</span>(digits):</span><br><span class="line">        scale = <span class="built_in">max</span>(digit.shape[<span class="number">0</span>] / DIGIT_HEIGHT, digit.shape[<span class="number">1</span>] / DIGIT_WIDTH)</span><br><span class="line">        digit = cv2.resize(</span><br><span class="line">            digit, (<span class="built_in">int</span>(digit.shape[<span class="number">1</span>] / scale), <span class="built_in">int</span>(digit.shape[<span class="number">0</span>] / scale)),</span><br><span class="line">            interpolation=cv2.INTER_LANCZOS4</span><br><span class="line">        )</span><br><span class="line">        height, width = digit.shape</span><br><span class="line">        background = np.full((DIGIT_HEIGHT, DIGIT_WIDTH), <span class="number">255</span>)</span><br><span class="line">        left, top = (DIGIT_WIDTH - width) // <span class="number">2</span>, (DIGIT_HEIGHT - height) // <span class="number">2</span></span><br><span class="line">        background[top:top+height, left:left+width] = digit</span><br><span class="line"></span><br><span class="line">        digits[i] = background</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    path = <span class="string">'../data/raw_image'</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">        image = cv2.imread(os.path.join(path, file))</span><br><span class="line">        <span class="keyword">if</span> (digits := split(image)) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            plt.imshow(image[:HEIGHT, :WIDTH])</span><br><span class="line">            <span class="keyword">for</span> i, digit <span class="keyword">in</span> <span class="built_in">enumerate</span>(digits):</span><br><span class="line">                plt.subplot(<span class="number">2</span>, <span class="number">4</span>, i+<span class="number">5</span>)</span><br><span class="line">                plt.imshow(digit)</span><br><span class="line">            plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最终得到的效果如下：</p><p><img src="%E5%AD%97%E7%AC%A6%E5%88%87%E5%88%86-4378.png" alt=""></p><h3 id="获取训练数据集">获取训练数据集</h3><p>  接下来开始获取训练用的数据集，首先使用旧的 Tesseract 识别引擎，通过反复识别验证码模拟登陆，同时记录下登录成功时的识别结果，即能得到验证码和数字的对应组合：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> binarize <span class="keyword">import</span> split, DIGITS</span><br><span class="line"><span class="keyword">from</span> spider <span class="keyword">import</span> get_uuid</span><br><span class="line"></span><br><span class="line">DATASIZE = <span class="number">3000</span></span><br><span class="line">USERNAME, PASSWORD = <span class="string">'# 学号 #'</span>, <span class="string">'# 登录密码 #'</span></span><br><span class="line">MESSAGE_LOGIN_SUCCESS = <span class="string">'成功'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, username, password</span>):</span></span><br><span class="line">        self.client = httpx.Client()</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = password</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ocr</span>(<span class="params">image</span>):</span></span><br><span class="line">        proc = sp.Popen([<span class="string">'tesseract'</span>, <span class="string">'-'</span>, <span class="string">'-'</span>], stdin=sp.PIPE, stdout=sp.PIPE)</span><br><span class="line">        proc.stdin.write(image)</span><br><span class="line">        proc.stdin.close()</span><br><span class="line">        result = re.sub(<span class="string">'[^0-9]'</span>, <span class="string">''</span>, proc.stdout.read().decode())</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result) != <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fetch_captcha</span>(<span class="params">self</span>):</span>  <span class="comment"># 获取一张验证码</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            token = (</span><br><span class="line">                self.client.get(<span class="string">'https://fangkong.hnu.edu.cn/api/v1/account/getimgvcode'</span>)</span><br><span class="line">            ).json()[<span class="string">'data'</span>][<span class="string">'Token'</span>]</span><br><span class="line">            image = self.client.get(<span class="string">f'https://fangkong.hnu.edu.cn/imagevcode?token=<span class="subst">{token}</span>'</span>)</span><br><span class="line">            captcha = cv2.imdecode(np.frombuffer(image.content, np.uint8), cv2.IMREAD_COLOR)</span><br><span class="line">            <span class="keyword">return</span> image.content, captcha, token</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">verify</span>(<span class="params">self, code, token</span>):</span>  <span class="comment"># 验证 Tesseract 的识别结果</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = self.client.post(</span><br><span class="line">                <span class="string">'https://fangkong.hnu.edu.cn/api/v1/account/login'</span>,</span><br><span class="line">                data={</span><br><span class="line">                    <span class="string">'Code'</span>: self.username,</span><br><span class="line">                    <span class="string">'Password'</span>: self.password,</span><br><span class="line">                    <span class="string">'WechatUserInfoCode'</span>: <span class="literal">None</span>,</span><br><span class="line">                    <span class="string">'VerCode'</span>: code,</span><br><span class="line">                    <span class="string">'Token'</span>: token</span><br><span class="line">                }</span><br><span class="line">            ).json()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'msg'</span>] == MESSAGE_LOGIN_SUCCESS:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">f'Login failed: <span class="subst">{result[<span class="string">"msg"</span>]}</span>'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self, count</span>):</span></span><br><span class="line">        success = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> success &lt; count:</span><br><span class="line">            raw_captcha, captcha, token = self.fetch_captcha()</span><br><span class="line">            <span class="keyword">while</span> captcha <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> (code := self.ocr(raw_captcha)) <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> (digits := split(captcha)) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                raw_captcha, captcha, token = self.fetch_captcha()</span><br><span class="line">            <span class="comment"># noinspection PyUnboundLocalVariable</span></span><br><span class="line">            <span class="keyword">if</span> self.verify(code, token):</span><br><span class="line">                success += <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> i, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(code):</span><br><span class="line">                    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f'../data/marked/<span class="subst">{ch}</span>/<span class="subst">{get_uuid()}</span>'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                        fp.write(pickle.dumps(digits[i]))</span><br><span class="line">                logger.info(<span class="string">f'[<span class="subst">{code}</span>] Success.'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    spider = Spider(USERNAME, PASSWORD)</span><br><span class="line">    average = <span class="built_in">sum</span>(<span class="built_in">len</span>(os.listdir(<span class="string">f'../data/marked/<span class="subst">{n}</span>'</span>)) <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)) / DIGITS</span><br><span class="line">    logger.debug(<span class="string">f'Image count: <span class="subst">{average}</span> / <span class="subst">{DATASIZE}</span>'</span>)</span><br><span class="line">    spider.run(<span class="built_in">max</span>(DATASIZE - average, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  挂机请求几个小时 <s>（辅导员摇了我吧，我可是专门挑打卡低峰期来发请求的 qwq）</s>，下载到了不少验证码：</p><p><img src="%E6%A8%A1%E6%9D%BF-raw.png" alt="旧博客的图，上面代码是直接将正确验证码切分并存储到各个子文件夹的"></p><p>  简单检查一下结果，切分的准确程度超乎我的意料，绝大部分的字符都被准确的分类了，只有极少数出现残缺。接下来，也是整个项目最难的部分，编写神经网络……</p><h2 id="原理分析">原理分析</h2><p>  我设计了一个四层的神经网络，除输入输出层外还包含两个隐含层</p><p><img src="%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84-%E7%99%BD.png" alt=""></p><p>  输入层有 150 个神经元，两个隐含层分别有16个神经元，输出层的10个神经元分别代表 0~9 的数字，每个神经元的激活值都在 [0, 1) 区间内</p><p>  假设第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个神经元第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个神经元的激活值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>i</mi><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">a_i^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2194em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span>，则第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个神经元的激活值为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></munderover><msubsup><mi>a</mi><mi>i</mi><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">a_{i+1}^k = \sum_{j=1}^{N_i}a_i^j\cdot\omega_{i+1}^{kj} + b_{i+1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2044em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2532em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3111em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2044em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>  其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi><mi>j</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\omega_{i+1}^{kj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span></span> 表示从第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个神经元到第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个神经元的激活权重（weight），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">b_{i+1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1661em;vertical-align:-0.317em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个神经元的激活偏置值（bias），<br>这样网络的「向下传递」过程就能用矩阵运算来定义：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi mathvariant="normal">Ω</mi><mover accent="true"><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>+</mo><mover accent="true"><msub><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>11</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>12</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mn>1</mn><mi>n</mi></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>21</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>22</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mn>2</mn><mi>n</mi></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mn>1</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mn>2</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mi>n</mi></mrow></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>i</mi><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>i</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>i</mi><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>+</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}a_{i+1}^1 \\a_{i+1}^2 \\\vdots \\a_{i+1}^m \\\end{bmatrix}= \Omega \overrightarrow{a_i} + \overrightarrow{b_{i+1}}= Sigmoid(\begin{bmatrix}\omega_{i+1}^{11} &amp; \omega_{i+1}^{12} &amp; \cdots &amp; \omega_{i+1}^{1n} \\\omega_{i+1}^{21} &amp; \omega_{i+1}^{22} &amp; \cdots &amp; \omega_{i+1}^{2n} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\\omega_{i+1}^{m1} &amp; \omega_{i+1}^{m2} &amp; \cdots &amp; \omega_{i+1}^{mn} \\\end{bmatrix}\begin{bmatrix}a_i^1 \\a_i^2 \\\vdots \\a_i^n \\\end{bmatrix}+\begin{bmatrix}b_{i+1}^1 \\b_{i+1}^2 \\\vdots \\b_{i+1}^m \\\end{bmatrix})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1026em;vertical-align:-0.15em;"></span><span class="mord">Ω</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4248em;vertical-align:-0.2083em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2164em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6944em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.58em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.38em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>  Sigmoid 为挤压函数，用于将数轴上的数压缩到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 范围内：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">Sigmoid(x) = \frac{1}{1+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>  定义一个代价函数，其值为每个输出激活值与期望值的差的平方和：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></munderover><mo stretchy="false">(</mo><msubsup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mo>−</mo><msub><mi>E</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">C=\sum_{i=1}^{N_{-1}}(a_{-1}^i-E_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1588em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>  其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为输出层每个神经元的期望输出值，则我们的目标就是调整这三个矩阵中的数，使得这个代价函数取得一个局部（也有可能是全局）最小的值；这里使用一种称之为「梯度下降法」的方法，每次计算出代价函数的负梯度，然后将所有权重和偏置组成的向量沿负梯度方向调整一小步</p><p>  考虑第 i 层的第 k 个神经元，并用它的「代价」对上一层（神经元的下标用 j 表示）的权重和偏置分别求偏导数，即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></munderover><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">C_i^k = (a_i^k-E_i^k)^2 = (Sigmoid(\sum_{j=1}^{N_{i-1}}a_{i-1}^j\cdot\omega_{i}^{kj}+b_i^k)-E_i^k)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2949em;vertical-align:-1.4138em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>  不妨设：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></munderover><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">z_i^k=\sum_{j=1}^{N_{i-1}}a_{i-1}^j\cdot\omega_{i}^{kj}+b_i^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2949em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>  则：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup></mrow></mfrac><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">\frac{\partial C_i^k}{\partial \omega_{i}^{kj}} = 2(a_i^k-E_i^k) \cdot Sigmoid'(z_i^k) \cdota_{i-1}^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.66em;vertical-align:-1.1339em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.143em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1339em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup></mrow></mfrac><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial C_i^k}{\partial b_i^k} = 2(a_i^k-E_i^k) \cdot Sigmoid'(z_i^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5239em;vertical-align:-0.9978em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.2791em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8309em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9978em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup></mrow></mfrac><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\frac{\partial C_i^k}{\partial a_{i-1}^j} = 2(a_i^k-E_i^k) \cdot Sigmoid'(z_i^k) \cdot\omega_{i}^{kj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.6939em;vertical-align:-1.1678em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.1674em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1678em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>  这样我们就得到了输出层的一个神经元关于调整权重和偏置的「想法」以及对上一层激活值的「期望」，现在把整个过程写成矩阵运算。设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>D</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_i^k = 2(a_i^k-E_i^k)\cdot Sigmoid(z_i^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>11</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>12</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>1</mn><mi>n</mi></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>21</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>22</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>2</mn><mi>n</mi></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>m</mi><mn>1</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>m</mi><mn>2</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>m</mi><mi>n</mi></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla C(\Omega) = \begin{bmatrix}\frac{\partial C_i^1}{\partial \omega_{i}^{11}} &amp;\frac{\partial C_i^1}{\partial \omega_{i}^{12}} &amp;\cdots &amp;\frac{\partial C_i^1}{\partial \omega_{i}^{1n}} \\\frac{\partial C_i^2}{\partial \omega_{i}^{21}} &amp;\frac{\partial C_i^2}{\partial \omega_{i}^{22}} &amp;\cdots &amp;\frac{\partial C_i^2}{\partial \omega_{i}^{2n}} \\\vdots &amp; &amp; \ddots &amp; \vdots \\\frac{\partial C_i^m}{\partial \omega_{i}^{m1}} &amp;\frac{\partial C_i^m}{\partial \omega_{i}^{m2}} &amp;\cdots &amp;\frac{\partial C_i^m}{\partial \omega_{i}^{mn}}\end{bmatrix} = \begin{bmatrix}D_i^1 \\D_i^2 \\\vdots \\D_i^m\end{bmatrix}\begin{bmatrix}a_{i-1}^1 &amp; a_{i-1}^2 &amp; \cdots &amp;&amp; a_{i-1}^n\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord">Ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.953em;vertical-align:-3.2265em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3016 H319z M319 0 H403 V3016 H319z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.2799em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5466em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4474em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0602em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.0924em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.3591em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2599em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"></span></span><span style="top:-0.8727em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.0924em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.3591em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.2599em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-0.8727em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.2799em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5466em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4474em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0602em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5706em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3016 H263z M263 0 H347 V3016 H263z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>C</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mn>1</mn></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mi>m</mi></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla C(B) = \begin{bmatrix}\frac{\partial C_i^1}{\partial b_i^1} \\\frac{\partial C_i^2}{\partial b_i^2} \\\vdots \\\frac{\partial C_i^m}{\partial b_i^m}\end{bmatrix} =\begin{bmatrix}D_i^1 \\D_i^2 \\\vdots \\D_i^m\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.9244em;vertical-align:-3.2122em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3016 H319z M319 0 H403 V3016 H319z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7122em;"><span style="top:-6.2656em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5323em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4331em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0459em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5706em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2122em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3016 H263z M263 0 H347 V3016 H263z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>  对整个网络的训练过程，实质上就是为所有神经元选取合适的权重和偏置，使得对于所有训练数据，代价函数的平均值尽可能小<br>  这里如果使用传统<strong>近似求导</strong>的办法计算代价函数对于每一个权重和偏置的偏导数，将会产生大量重复计算，极大降低了算法的效率<br>  <strong>但是我们学过线性代数啊</strong>，将求偏导的思想和复合函数的链式法则结合起来，以层为单位「反向传播」，就能在较优的时间复杂度内计算出梯度向量</p><div style="display:flex;flex-direction:column;align-items:flex-start;width:50%;margin:auto;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mspace width="2em"></mspace><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></munderover><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\qquad \partial z_i^k = \partial b_i^k = \sum_{j=1}^{N_{i-1}}(\omega_i^{kj}\cdot Sigmoid'(z_{i-1}^j)\cdot\partial{z_{i-1}^j})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2949em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup></mrow></mfrac><mo>=</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow \frac{\partial z_i^k}{\partial z_{i-1}^j} = \omega_i^{kj}\cdot Sigmoid'(z_{i-1}^j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6939em;vertical-align:-1.1678em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.1674em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1678em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></div><p>  不妨设：</p><div style="display:flex;flex-direction:column;align-items:flex-start;width:100%;margin:auto;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mspace width="2em"></mspace><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>=</mo><msup><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mn>1</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><msub><mi>N</mi><mi>i</mi></msub></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\qquad \overrightarrow{\Delta_i} = \begin{pmatrix}\frac{\partial \overline{C}}{\partial z_i^1} &amp;\frac{\partial \overline{C}}{\partial z_i^2} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial z_i^{N_i}}\end{pmatrix}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3553em;vertical-align:-0.15em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.051em;vertical-align:-0.6599em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.4496em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0577em;"><span style="top:-2.1777em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0696em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.776em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3911em;"><span style="top:-3.6128em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mi>j</mi></msub><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></munderover><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow \overrightarrow{\Delta_{i-1}}_j = Sigmoid'(z_{i-1}^j)\cdot\sum_{k=1}^{N_i}(\omega_i^{kj}\cdot\overrightarrow{\Delta_i}_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5995em;vertical-align:-0.3941em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2036em;"><span style="top:-2.442em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3941em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.1415em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3111em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></msubsup><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mn>1</mn></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></msubsup><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mn>2</mn></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></msubsup><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo stretchy="false">)</mo><mo>∘</mo><mo stretchy="false">(</mo><msubsup><mi mathvariant="normal">Ω</mi><mi>i</mi><mi>T</mi></msubsup><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow \overrightarrow{\Delta_{i-1}} = \begin{bmatrix}Sigmoid'(z_{i-1}^1)\cdot\sum_{k=1}^{N_i}(\omega_i^{k1}\cdot\overrightarrow{\Delta_i}_k) \\Sigmoid'(z_{i-1}^2)\cdot\sum_{k=1}^{N_i}(\omega_i^{k2}\cdot\overrightarrow{\Delta_i}_k) \\\vdots \\Sigmoid'(z_{i-1}^{N_{i-1}})\cdot\sum_{k=1}^{N_i}(\omega_i^{kN_{i-1}}\cdot\overrightarrow{\Delta_i}_k)\end{bmatrix} = Sigmoid'(\begin{bmatrix}z_{i-1}^1 \\z_{i-1}^2 \\\vdots \\z_{i-1}^{N_{i-1}}\end{bmatrix}) \circ (\Omega_i^T\overrightarrow{\Delta_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4137em;vertical-align:-0.2083em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.6001em;vertical-align:-3.05em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3016 H319z M319 0 H403 V3016 H319z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.528em;"><span style="top:-6.0102em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.4448em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.5848em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0195em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9649em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1866em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9727em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1866em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.028em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3016 H263z M263 0 H347 V3016 H263z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.5849em;vertical-align:-2.5424em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0424em;"><span style="top:-5.8899em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6899em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8299em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5051em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9649em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1866em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5424em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></div><p>  这样一来就得到了各层偏导数之间的转化关系，通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="normal">Δ</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{\Delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2053em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord">Δ</span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span></span></span></span></span></span></span> 向量，也可以轻松求出各层权重对代价函数的平均偏导（之前只求了偏置的偏导）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>11</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>12</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>2</mn><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>21</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>22</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>2</mn><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><mn>1</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><mn>2</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><msup><mover accent="true"><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\begin{bmatrix}\frac{\partial \overline{C}}{\partial \omega_i^{11}} &amp;\frac{\partial \overline{C}}{\partial \omega_i^{12}} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial \omega_i^{2N_{i-1}}} \\\frac{\partial \overline{C}}{\partial \omega_i^{21}} &amp;\frac{\partial \overline{C}}{\partial \omega_i^{22}} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial \omega_i^{2N_{i-1}}} \\\vdots &amp; &amp; \ddots &amp; \vdots \\\frac{\partial \overline{C}}{\partial \omega_i^{N_i1}} &amp;\frac{\partial \overline{C}}{\partial \omega_i^{N_i2}} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial \omega_i^{N_iN_{i-1}}}\end{bmatrix} = \overrightarrow{\Delta_i}\begin{bmatrix}a_{i-1}^1 &amp; a_{i-1}^2 &amp; \cdots &amp;&amp; a_{i-1}^n\end{bmatrix} = \overrightarrow{\Delta_i}\overrightarrow{a_{i-1}}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.4444em;vertical-align:-3.4722em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewBox="0 0 666.67 3616" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3616 H319z M319 0 H403 V3616 H319z"></path></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.6159em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.7544em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4368em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0329em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.4496em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0577em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0696em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.776em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.4284em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5669em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2493em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"></span></span><span style="top:-0.8454em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.4496em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0577em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0696em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.776em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.4284em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.5669em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.2493em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-0.8454em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.6159em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.408em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1172em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1291em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3981em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8176em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.7544em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.408em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1172em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1291em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3981em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8176em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4368em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0329em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.408em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1172em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1291em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3981em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8176em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewBox="0 0 666.67 3616" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3616 H263z M263 0 H347 V3616 H263z"></path></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5553em;vertical-align:-0.35em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4137em;vertical-align:-0.2083em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1838em;"><span style="top:-3.4055em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p>  至此，数学推导过程已全部完成，现在只需将数学过程转换为 Python 代码即可。</p><h2 id="代码实现">代码实现</h2><p>  首先声明一个类作为神经网络的基本模型：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, structure=<span class="literal">None</span></span>):</span></span><br><span class="line">        self.iterates = <span class="number">0</span>  <span class="comment"># 记录迭代次数</span></span><br><span class="line">        self.weights = []  <span class="comment"># 各层权重</span></span><br><span class="line">        self.biases = []  <span class="comment"># 各层偏置</span></span><br><span class="line">        self.structure = structure  <span class="comment"># 网络结构</span></span><br><span class="line">        self.num_layers = <span class="built_in">len</span>(structure) <span class="keyword">if</span> structure <span class="keyword">else</span> <span class="number">0</span>  <span class="comment"># 网络层数</span></span><br><span class="line">        self.weights_buffer = []  <span class="comment"># 权重梯度缓存</span></span><br><span class="line">        self.biases_buffer = []  <span class="comment"># 偏置梯度缓存</span></span><br><span class="line">        self.loss_buffer = <span class="number">0</span>  <span class="comment"># 损失量缓冲</span></span><br><span class="line">        self.buffer_size = <span class="number">1</span>  <span class="comment"># 记录缓冲大小（次数）</span></span><br></pre></td></tr></tbody></table></figure><p>  接下来定义一个成员方法以初始化神经网络，当模型文件不存在时，将根据网络结构分配随机的权重与偏置值，否则从磁盘中加载模型文件作为权重与偏置；同时注册一个 <code>onexit()</code> 函数，程序结束时自动将本次训练的结果保存到文件中。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span>(<span class="params">self, filename=<span class="string">'model.pck'</span></span>):</span></span><br><span class="line"><span class="meta">    @atexit.register</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onexit</span>():</span></span><br><span class="line">        self.structure <span class="keyword">and</span> pickle.dump([self.weights, self.biases], <span class="built_in">open</span>(filename, <span class="string">'wb'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        data = pickle.load(<span class="built_in">open</span>(filename, <span class="string">'rb'</span>))</span><br><span class="line">        self.weights = data[<span class="number">0</span>]</span><br><span class="line">        self.biases = data[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line">        np.random.seed(<span class="built_in">int</span>(time()))</span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.structure:</span><br><span class="line">            self.weights.append(np.random.random(layer)*<span class="number">2</span>-<span class="number">1</span>)</span><br><span class="line">            self.biases.append(np.random.random((layer[<span class="number">0</span>], <span class="number">1</span>))*<span class="number">2</span>-<span class="number">1</span>)</span><br><span class="line">    self.init_buffer()</span><br></pre></td></tr></tbody></table></figure><p>  通过传入 <code>(img, num)</code> 组进行训练，由于 OpenCV 图片格式和我们所需要的输入数据类型不一致，首先对数据进行处理；取灰度图红色通道进行归一化、取反后化为线性，再提供给反向传播函数</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span>(<span class="params">self, img, num</span>):</span></span><br><span class="line">    x, y = (<span class="number">1</span>-img[:, :, <span class="number">0</span>]/<span class="number">255</span>).reshape((<span class="number">150</span>, <span class="number">1</span>)), np.zeros((<span class="number">10</span>, <span class="number">1</span>))</span><br><span class="line">    y[num] = <span class="number">1</span></span><br><span class="line">    nabla_b, nabla_w, loss = self.backprop(x, y)</span><br><span class="line">    <span class="keyword">for</span> i, b <span class="keyword">in</span> <span class="built_in">enumerate</span>(nabla_b):</span><br><span class="line">        self.biases_buffer[i] += b</span><br><span class="line">    <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(nabla_w):</span><br><span class="line">        self.weights_buffer[i] += w</span><br><span class="line">    self.loss_buffer += loss</span><br><span class="line">    self.buffer_size += <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p>  重头戏来了，接下来开始实现神经网络的核心部分——反向传播函数，首先实现 Sigmoid 函数、它的导数以及代价函数的导数，接下来开始正向和反向传播过程，用 <code>nabla_w</code> 和 <code>nabla_b</code> 数组记录由本组数据计算出的梯度，最后返回两个梯度和本次计算出的代价：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>/(<span class="number">1</span>+np.exp(-x))</span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d_sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">    tmp = np.exp(x)</span><br><span class="line">    <span class="keyword">return</span> tmp/(tmp+<span class="number">1</span>)**<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d_loss</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*(x-y)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backprop</span>(<span class="params">self, x, y</span>):</span></span><br><span class="line">    <span class="comment"># x: 输入值  y: 期望</span></span><br><span class="line">    nabla_b = [np.zeros(b.shape) <span class="keyword">for</span> b <span class="keyword">in</span> self.biases]</span><br><span class="line">    nabla_w = [np.zeros(w.shape) <span class="keyword">for</span> w <span class="keyword">in</span> self.weights]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 正向传递</span></span><br><span class="line">    activation = x</span><br><span class="line">    activations = [x]</span><br><span class="line">    zs = []</span><br><span class="line">    <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">        z = (w @ activation) + b</span><br><span class="line">        zs.append(z)</span><br><span class="line">        activation = self.sigmoid(z)</span><br><span class="line">        activations.append(activation)</span><br><span class="line">    <span class="comment"># 反向传播</span></span><br><span class="line">    delta = self.d_loss(activations[-<span class="number">1</span>], y) * self.d_sigmoid(zs[-<span class="number">1</span>])</span><br><span class="line">    nabla_b[-<span class="number">1</span>] = delta</span><br><span class="line">    nabla_w[-<span class="number">1</span>] = delta @ activations[-<span class="number">2</span>].T</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, self.num_layers):</span><br><span class="line">        sp = self.d_sigmoid(zs[-i])</span><br><span class="line">        delta = (self.weights[-i+<span class="number">1</span>].T @ delta) * sp</span><br><span class="line">        nabla_b[-i] = delta</span><br><span class="line">        nabla_w[-i] = delta @ activations[-i-<span class="number">1</span>].T</span><br><span class="line">    <span class="keyword">return</span> nabla_b, nabla_w, np.<span class="built_in">sum</span>((activations[-<span class="number">1</span>]-y)**<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><p>  还需要一个「释放函数」用于数据集的释放和参数的更新，每个 batch 训练完成之后，调用  <code>release()</code> 函数即以指定训练速度向负梯度方向前进一小步：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_buffer</span>(<span class="params">self</span>):</span></span><br><span class="line">    self.biases_buffer = [np.zeros(b.shape) <span class="keyword">for</span> b <span class="keyword">in</span> self.biases]</span><br><span class="line">    self.weights_buffer = [np.zeros(w.shape) <span class="keyword">for</span> w <span class="keyword">in</span> self.weights]</span><br><span class="line">    self.loss_buffer = <span class="number">0</span></span><br><span class="line">    self.buffer_size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">release</span>(<span class="params">self, rate=<span class="number">0.001</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> i, b <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.biases_buffer):</span><br><span class="line">        self.biases[i] -= b * rate</span><br><span class="line">    <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.weights_buffer):</span><br><span class="line">        self.weights[i] -= w * rate</span><br><span class="line">    self.iterates += <span class="number">1</span></span><br><span class="line">    loss = self.loss_buffer / self.buffer_size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'[*] <span class="subst">{self.iterates}</span> iterations, loss: <span class="subst">{loss}</span>'</span>, end=<span class="string">'\r'</span>)</span><br><span class="line">    self.init_buffer()</span><br></pre></td></tr></tbody></table></figure><p>  所有的训练都是为了识别而准备的，所以我这里实现了一个 <code>guess()</code> 方法，神经网络将根据当前训练的成果给出对图片中数字的猜测：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span>(<span class="params">self, img</span>):</span></span><br><span class="line">    x = (<span class="number">1</span>-img[:, :, <span class="number">0</span>]/<span class="number">255</span>).reshape((<span class="number">150</span>, <span class="number">1</span>))</span><br><span class="line">    activation = x</span><br><span class="line">    <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">        activation = self.sigmoid((w @ activation) + b)</span><br><span class="line">    guess = [activation[i][<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">    <span class="keyword">return</span> guess.index(<span class="built_in">max</span>(guess))</span><br></pre></td></tr></tbody></table></figure><p>  在 <code>main()</code> 函数中，进行模板的读取和训练：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    network = NeuralNetwork([(<span class="number">16</span>, <span class="number">150</span>), (<span class="number">16</span>, <span class="number">16</span>), (<span class="number">10</span>, <span class="number">16</span>)])</span><br><span class="line">    network.init()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(<span class="string">'models'</span>):</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(<span class="string">f'models/<span class="subst">{folder}</span>'</span>):</span><br><span class="line">                img = cv2.imread(<span class="string">f'models/<span class="subst">{folder}</span>/<span class="subst">{file}</span>'</span>)</span><br><span class="line">                network.train(img, <span class="built_in">int</span>(file[<span class="number">0</span>]))</span><br><span class="line">            network.release()</span><br></pre></td></tr></tbody></table></figure><p>  在实际应用过程中，非常不推荐使用 CPU 来进行训练，12 核的 CPU 在不做其他优化的情况下只能单核跑满，即使把所有核都利用上，其效率也远不如使用 GPU 训练高；不过好在识别十个数字的网络结构很简单，样本大小也不大，跑了挂着十几分钟之后已经能够基本达到使用需求</p><p><img src="CPU%E8%AE%AD%E7%BB%83.png" alt=""></p><p>  最后随机抽取了一些字符进行测试，发现识别效果还是很不错的（至少比原来用 Tesseract 好多了），24 个字符中仅有一个 7 被识别为 1，其余结果均正确：</p><p><img src="%E8%AE%AD%E7%BB%83%E7%BB%93%E6%9E%9C.png" alt=""></p><p>  将之前的内容整合一下，得到最终的验证码识别模块，简单部署一下，就可以投入使用叻：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        data = pickle.load(<span class="built_in">open</span>(<span class="string">'model.pck'</span>, <span class="string">'rb'</span>))</span><br><span class="line">        self.weights = data[<span class="number">0</span>]</span><br><span class="line">        self.biases = data[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + np.exp(-x))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">guess</span>(<span class="params">self, img</span>):</span></span><br><span class="line">        x = (<span class="number">1</span>-img/<span class="number">255</span>).reshape((<span class="number">150</span>, <span class="number">1</span>))</span><br><span class="line">        activation = x</span><br><span class="line">        <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">            activation = self.sigmoid((w @ activation) + b)</span><br><span class="line">        result = [activation[i][<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">        <span class="keyword">return</span> result.index(<span class="built_in">max</span>(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">mask, x, y, task</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; mask.shape[<span class="number">0</span>] <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; mask.shape[<span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> mask[x][y]:</span><br><span class="line">        mask[x, y] = <span class="number">1</span></span><br><span class="line">        task.put((x, y))</span><br><span class="line">        <span class="keyword">for</span> way <span class="keyword">in</span> ((-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, -<span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>)):</span><br><span class="line">            dfs(mask, x+way[<span class="number">0</span>], y+way[<span class="number">1</span>], task)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span>(<span class="params">img</span>):</span></span><br><span class="line">    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)[:<span class="number">27</span>, :<span class="number">67</span>]</span><br><span class="line">    img = cv2.threshold(img, <span class="number">180</span>, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    mask = np.array(np.where(cv2.GaussianBlur(img, (<span class="number">3</span>, <span class="number">5</span>), <span class="number">0</span>) &gt; <span class="number">210</span>, <span class="number">255</span>, <span class="number">0</span>), dtype=np.uint8)</span><br><span class="line">    count, cuts = <span class="number">0</span>, []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(mask.shape[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(mask.shape[<span class="number">1</span>]):</span><br><span class="line">            area = Queue()</span><br><span class="line">            minx, maxx, miny, maxy = <span class="number">1</span> &lt;&lt; <span class="number">20</span>, -<span class="number">1</span>, <span class="number">1</span> &lt;&lt; <span class="number">20</span>, -<span class="number">1</span></span><br><span class="line">            dfs(mask, i, j, area)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">20</span> &lt; area.qsize() &lt; <span class="number">150</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">not</span> area.empty():</span><br><span class="line">                    tmp = area.get()</span><br><span class="line">                    minx = <span class="built_in">min</span>(minx, tmp[<span class="number">0</span>])</span><br><span class="line">                    maxx = <span class="built_in">max</span>(maxx, tmp[<span class="number">0</span>])</span><br><span class="line">                    miny = <span class="built_in">min</span>(miny, tmp[<span class="number">1</span>])</span><br><span class="line">                    maxy = <span class="built_in">max</span>(maxy, tmp[<span class="number">1</span>])</span><br><span class="line">                cuts.append((minx, maxx+<span class="number">1</span>, miny, maxy+<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">not</span> area.empty():</span><br><span class="line">                    mask[area.get()] = <span class="number">255</span></span><br><span class="line">    img[np.where(mask != <span class="number">1</span>)] = <span class="number">255</span></span><br><span class="line">    cuts.sort(key=<span class="keyword">lambda</span> s: s[<span class="number">2</span>])</span><br><span class="line">    network = NeuralNetwork()</span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">for</span> i, ss <span class="keyword">in</span> <span class="built_in">enumerate</span>(cuts):</span><br><span class="line">            digit = cv2.resize(img[ss[<span class="number">0</span>]:ss[<span class="number">1</span>], ss[<span class="number">2</span>]:ss[<span class="number">3</span>]], (<span class="number">2</span>*(ss[<span class="number">3</span>]-ss[<span class="number">2</span>]), <span class="number">2</span>*(ss[<span class="number">1</span>]-ss[<span class="number">0</span>])))</span><br><span class="line">            digit = cv2.resize(digit, (ss[<span class="number">3</span>]-ss[<span class="number">2</span>], ss[<span class="number">1</span>]-ss[<span class="number">0</span>]))</span><br><span class="line">            template = np.full((<span class="number">15</span>, <span class="number">10</span>), <span class="number">255</span>, dtype=np.uint8)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">3</span>*digit.shape[<span class="number">1</span>] &gt; <span class="number">2</span>*digit.shape[<span class="number">0</span>]:</span><br><span class="line">                digit = cv2.resize(</span><br><span class="line">                    digit,</span><br><span class="line">                    (<span class="number">10</span>, <span class="built_in">int</span>(<span class="number">10</span>*digit.shape[<span class="number">0</span>]/digit.shape[<span class="number">1</span>])),</span><br><span class="line">                    interpolation=cv2.INTER_LINEAR_EXACT</span><br><span class="line">                )</span><br><span class="line">                dy = <span class="built_in">int</span>((<span class="number">15</span>-digit.shape[<span class="number">0</span>])/<span class="number">2</span>)</span><br><span class="line">                template[dy:dy+digit.shape[<span class="number">0</span>], :] = digit</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                digit = cv2.resize(</span><br><span class="line">                    digit,</span><br><span class="line">                    (<span class="built_in">int</span>(<span class="number">15</span>*digit.shape[<span class="number">1</span>]/digit.shape[<span class="number">0</span>]), <span class="number">15</span>),</span><br><span class="line">                    interpolation=cv2.INTER_LINEAR_EXACT</span><br><span class="line">                )</span><br><span class="line">                dx = <span class="built_in">int</span>((<span class="number">10</span>-digit.shape[<span class="number">1</span>])/<span class="number">2</span>)</span><br><span class="line">                template[:, dx:dx+digit.shape[<span class="number">1</span>]] = digit</span><br><span class="line">            result += <span class="built_in">str</span>(network.guess(template))</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure><p>  最后挂一下自己的仓库地址：</p><div class="tag link"><a class="link-card" title="GitHub" href="https://github.com/Mufanc/HNU-AutoCheckin"><div class="left"><img src="https://github.com/favicon.ico"></div><div class="right"><p class="text">GitHub</p><p class="url">https://github.com/Mufanc/HNU-AutoCheckin</p></div></a></div><h2 id="参考-2">参考</h2><ul><li><p><a href="https://blog.csdn.net/TeFuirnever/article/details/88955455">深度学习100问之深入理解Back Propagation（反向传播）</a></p></li><li><p><a href="https://blog.csdn.net/TeFuirnever/article/details/100136800">深度学习之手撕神经网络代码（基于numpy）</a></p></li></ul><div class="bilibili">    <iframe src="//player.bilibili.com/player.html?aid=16577449&amp;bvid=BV16x411V7Qg&amp;cid=27038097&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 工程实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 验证码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qlivoid 与网课挂机</title>
      <link href="/posts/25707/"/>
      <url>/posts/25707/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><div class="note info simple"><p>  高中的中二作品 <s>（开发流水帐）</s>，放到这边权当留档纪念，当时技术有限，代码实现难免有不优雅之处，还请各位看官一笑了之 ੭ ᐕ)੭*⁾⁾   <s>新一代自动化工具 <a href="http://Auto.py">Auto.py</a> 也在加紧开发中，应该马上就能在我的 GitHub 仓库中看到啦</s></p></div><p>  新冠疫情的降临，直接将高三的寒假从一周延长到了三个月，天天听网课确实是过于枯燥，不如研发个自动挂机脚本出来玩玩……脚本挂机下的网课，直接趴桌子睡觉不再是梦</p><p>  这其实是个早就完成了的项目，开发记录全都丢在石墨文档，如今既然搭建了自己的博客，就索性把石墨那边的文档陆续往这搬，顺便搞一下排版优化</p><p>  整理过程中，看到自己曾经的笔调写下的文档，想起了那段紧张又快乐的时光，果然还是会有些怀念啊……</p><h2 id="写在前面">写在前面</h2><p><strong>2020 年 3 月 9 日，周一</strong></p><p>  首先说一下关于 Qlivoid 名字的由来:</p><p><img src="Qlivoid%E7%94%B1%E6%9D%A5.png" alt=""></p><p>  由于 Qlivoid 项目在我开始使用石墨文档之前就已经在做了，所以整个开发过程将以文档创建日期为分界做两种形式的记录。文档创建之前的内容记录主要以 QQ 空间的记录+回忆为依据编写，可能不能详细地还原出每个bug的出现时间和具体情况，文档创建之后的记录将用各种形式更加详细地记录出现的问题以及出现时间以及解决方案。</p><p>  根据年级的安排来看，可能在 Qlivoid 尚未完善到最终版之前就已经正式开学，无法将一个项目完美的完成还是有些遗憾哈，不过姑且也是一次很有意义的练习和提升机会，就算明知道无法完成，也还是把它做好吧<font size="2">（其实最后还是做完了）</font></p><hr><h2 id="回忆部分">回忆部分</h2><h3 id="2-月-16-日-开端">2 月 16 日 开端</h3><p><img src="%E8%AF%BE%E7%A8%8B%E8%A1%A8.png" alt=""></p><p>  智学网挂机脚本刚刚推出稳定版不到一周，就给我整这种幺蛾子，没办法，课依然不想听，挂机依然要挂，只能开始 QQ 挂机脚本项目（当时还不叫 Qlivoid）</p><h3 id="2-月-20-日-雏形">2 月 20 日 雏形</h3><p>  脚本已经基本完成了，引用了 Jsp 模块，支持上课自动跳转，进入课堂发送消息打卡，复读机，检测问卷星链接并启动悬浮窗进行打卡，代码体量也已经达到了 472 行，能够满足一定程度的挂机需求，但依然不放心让它自己在那挂着，还有很多地方需要改进。</p><h3 id="2-月-28-日-更新">2 月 28 日 更新</h3><p>  在研究每日健康汇报 WPS 表单自动填写的时候，偶然发现能够通过对问卷星的打卡网页进行 JavaScript 注入来完成打卡，可以免去使用无障碍服务，同时有效避免了签到时悬浮窗遮挡聊天界面的问题，在一定程度上提升了脚本的稳定性，但同时也带来了新的问题，Auto.js Pro v7.0.4 中无法正常使用 JavaAdapter 实现类的实例化，所以临时赶工了一个 Socket 脚本来实现 Pro 版与免费版 Auto.js 之间的的通信，具体的流程是使用 Auto.js 免费版创建一个 Socket Server 等待挂机脚本发送的包含问卷星链接的连接请求（这个 Server 依然不稳定，即使使用 <code>try...catch...</code> 进行异常处理，依然有时候在重启 Qlivoid 时会因为不明原因自动停止，不过貌似在 Qlivoid 运行期间表现正常？注释于 3 月 9 日)</p><p>  修复了下课后不能正常退出的问题（这个指的是模拟点击下课按钮失败，因判断下课逻辑错误而不能正常退出通话的问题在 3 月 7 日得到修复）</p><p>  修复了有时候已经上课却找不到课程的问题（怎么修复的忘了）；修复了下课之后不能正常退出的问题（指点击「挂断」按钮失败的问题，判断是否下课的逻辑并无错误）通过重写 GetName 函数，修复了找不到聊天记录的问题。脚本体量扩展到 642 行，整体的稳定性有了较大提升。</p><h3 id="2-月-29-日-更新">2 月 29 日 更新</h3><p>  新增 检测聊天内容决定是否退出通话，逻辑为下课时间到后等待「谢谢老师」出现时退出通话，且最多等待 10 分钟。</p><p>  将 Jsp 模块中的部分代码移植到脚本中，取消对 Jsp 模块的引用，使脚本整体集成到单文件（除了免费版那边的 Server，这个没办法搞<font color="gray" size="2">貌似可以用Intent?</font>）</p><p>  项目正式更名为 Qlivoid，新增日志输出到文件，且日志内容包括输出该条日志代码的行号，方便后续调试。</p><h3 id="3-月-3-日-更新">3 月 3 日 更新</h3><p>  新增 检测到以 <code>|;</code> 或 <code>#;</code>（分号中英文无所谓），结尾的聊天记录时长震动并发出语音警报提醒<br>  新增 英语课群签到打卡功能，同样为检测聊天记录决定行为，这里为了偷懒不想判断签到的 View，用了 QNotified 模块中的签到文本化功能将所有打卡消息转变为 <code>[群签到]群签到</code>（这样就能嵌入到聊天消息记录模块中🌶️）</p><p>  修复有时候自动退出课堂失败的问题（具体问题不记得了，跟 2.28 修复的退课失败原因不同）</p><h3 id="3-月-5-日-大更新">3 月 5 日 大更新</h3><p>  现在复读时会调用 TTS 语音引擎（小米系统内置一个小爱 TTS 引擎，挺好的）朗读复读内容，进群随机发送消息改为随机发送消息或进行群签到，消息内容简单化</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可选消息列表，#Sign# 表示群签到</span></span><br><span class="line">[<span class="string">'1'</span>, <span class="string">'#Sign#'</span>, <span class="string">'#Sign#'</span>, <span class="string">':1'</span>, <span class="string">'#Sign#'</span>, <span class="string">'1'</span>, <span class="string">'壹'</span>, <span class="string">'1'</span>]</span><br></pre></td></tr></tbody></table></figure><p>  Qlivoid 会自动通过群名称判断当前在上的课程，并自动修复所在群与应在群不同的情况（找不到所在群时跳转到应在群，所在群和应在群不同时将应在群设置为所在群）</p><p>  新增对于群签到打卡是否成功的检测，若失败则再次尝试打卡，尝试次数上限定为 3</p><p>  修复由于之前写代码的时候脑抽，忘了判断消息是否为自己发送，以及没有给群签到打卡设定冷却时间，导致的无限打卡的问题</p><p>  修复了由于正则表达式少写一个 <code>:</code> 导致的日志显示行数错误的问题。</p><p>  新增对聊天界面系统通知气泡的检测，在 QQ 抽风或因网络故障进不去直播时发出警告并自动重启 QQ</p><p>  由于发现将日志输出到文件会拖慢脚本循环的速度，去除了这一功能。</p><h3 id="3-月-7-日-更新">3 月 7 日 更新</h3><p><img src="%E5%8D%B11.png" alt="翻车现场#1"></p><p><img src="%E5%8D%B12.png" alt="翻车现场#2"></p><p>  由于 3 月 6 日（你们怎么不发「谢谢老师」啊喂）和 3 月 7 日（奶奶滴，谁知道写作文还要退出语音的？？）语文课上翻车，现将下课后对“谢谢老师”的最长等待时间改为 5 分钟，且若下课前 5 min 内出现“谢谢老师”，则认为提前下课，脚本退出课堂</p><p>  将语文课列为重点关注课堂，所有获取到的聊天记录将以语音形式播出，同时如果消息内容中出现预设的“重点关注”词汇，会进一步触发震动提醒</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重点关注词汇: ['退', '重新', '重进', '语音', '全体']</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="正式记录">正式记录</h2><h3 id="需要注意的几点">需要注意的几点</h3><p>  网课情况复杂多变，需要考虑一些极端情况（比如在任何时刻通话都有可能被迫关闭，脚本应该有能够处理这些异常的能力），同时为了适应错综复杂的情况，脚本不能仅凭设备本地的设定做出行动，一定要能够从集体的行为中获取信息。</p><p>  关闭权限后，会出现某些特殊 Dialog，需要在脚本中实现处理</p><h4 id="悬浮窗权限未能获取">悬浮窗权限未能获取</h4><center><font size="3">出现在刚刚从<b>语音通话/屏幕分享</b>界面退出时:</font></center><p><img src="%E5%B1%8F%E5%B9%95%E5%88%86%E4%BA%AB-%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90.png" alt=""></p><center><font size="3">出现在即将进入<b>群视频</b>时:</font></center><p><img src="%E7%BE%A4%E8%A7%86%E9%A2%91-%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90.png" alt=""></p><center>为了避免偶然状况，<b>任何时候</b>都应具备处理此类 Dialog 的能力</center><h4 id="提示加入通话">提示加入通话</h4><center><font size="3">出现在未设置消息免打扰的群发起通话时:</font></center><p><img src="%E9%80%9A%E8%AF%9D%E6%8F%90%E9%86%92.png" alt=""></p><center>解决方案：暂时设置班群消息免打扰</center><h4 id="提示添加快捷方式">提示添加快捷方式</h4><center><font size="3">出现在进入群视频之前:</font></center><p><img src="%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E6%B7%BB%E5%8A%A0%E6%8F%90%E9%86%92.png" alt=""></p><center>解决方案：点击确定后似乎没有再提示过这个</center><h4 id="提示通话冲突">提示通话冲突</h4><center><font size="3">出现在已在通话但即将加入另一通话时:</font></center><p><img src="%E9%80%9A%E8%AF%9D%E5%86%B2%E7%AA%81.png" alt=""></p><center>解决方法：将点击「<b>继续</b>」的优先级设置在选择「<b>取消</b>」或「<b>忽略</b>」之上</center><h4 id="提示悬浮窗打开失败">提示悬浮窗打开失败</h4><center><font size="3">出现在提示打开悬浮窗权限后切换页面而仍没有悬浮窗权限:</font></center><p><img src="%E6%82%AC%E6%B5%AE%E7%AA%97%E6%89%93%E5%BC%80%E5%A4%B1%E8%B4%A5%E6%8F%90%E9%86%92.png" alt=""></p><h4 id="群公告">群公告</h4><center>解决方法：模拟点击「<b>我知道了</b>」</center><br><p>  于是创建一个<code>cancel</code>函数，用于处理各种dialog事件：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cancel</span>(<span class="params"></span>) </span>{  <span class="comment">// 处理偶然弹出的dialog</span></span><br><span class="line">    click(<span class="string">'继续'</span>) || click(<span class="string">'取消'</span>) || click(<span class="string">'忽略'</span>) || click(<span class="string">'稍后处理'</span>) || click(<span class="string">'我知道了'</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="一些奇技淫巧">一些奇技淫巧</h3><ul><li>使 Auto.js 的日志输出内容包括打印日志的行：</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> methods = [<span class="string">'verbose'</span>, <span class="string">'log'</span>, <span class="string">'info'</span>, <span class="string">'warn'</span>, <span class="string">'error'</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; methods.length; i++) {</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">meth</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> origin = <span class="built_in">console</span>[meth];</span><br><span class="line">        <span class="built_in">console</span>[meth] = <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>{</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                $_$;  <span class="comment">// 故意制造一个错误，得到报错的行</span></span><br><span class="line">            } <span class="keyword">catch</span>(e) {</span><br><span class="line">                <span class="keyword">var</span> st = e.stack;</span><br><span class="line">                st = st.split(<span class="string">'\n'</span>)[<span class="number">1</span>].match(<span class="regexp">/\t.+:(\d+)/</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> out = <span class="string">'Line['</span> + st + <span class="string">']: '</span> + s;</span><br><span class="line">                origin(out);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    })(methods[i]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>在主循环中拦截错误并显示行数：</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {  <span class="comment">// 主循环</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="comment">// Do something...</span></span><br><span class="line">    } <span class="keyword">catch</span>(e) {</span><br><span class="line">        <span class="keyword">var</span> line = e.stack.split(<span class="string">'\n'</span>)[<span class="number">0</span>].match(<span class="regexp">/\t.+:(\d+)/</span>)[<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'错误拦截: At line:'</span> + line + <span class="string">' '</span> + e);</span><br><span class="line">    }</span><br><span class="line">    sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>脚本暂停函数（其实就是个死循环）</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pause</span>(<span class="params"></span>) </span>{  <span class="comment">// 暂停</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3-月-9-日">3 月 9 日</h3><p>  从今天起，语文课的直播换用<strong>群课堂</strong>进行，其实是件好事情（起码不聋了），对于群课堂的支持早在项目初期英语课使用群视频直播时便已完成，只需稍加优化即可投入使用，但再三考虑之后，还是决定将原来用于挂机的 Redmi 6A 更换为 LeEco Le X625，主要基于如下考虑：</p><ul><li><p>换用的新设备有 Root 权限，启动 Activity 或者模拟点击、调用 shell 命令都更加方便<font size="3" color="gray">(其实并不方便，注释于 3.10)</font></p></li><li><p>新设备安装有Xposed框架，某些功能能帮助节省代码量</p></li><li><p>新设备掉电快，拿着也要一直充电才能用，不如用来挂机</p></li><li><p>貌似新设备更流畅？</p></li></ul><p>  当然同时也带来了几个问题，其中之一便是换机之后大部分的代码都需要重构，因为两台机器的型号和 Android 版本不同，QQ 显示的界面也就会有所差异。重构之后的代码将彻底取消对于 Jsp 模块的引用以及与免费版的 Socket 通信，只为提升速度和稳定性。</p><p>  今天的物理课（TM 怎么连续几天出问题）上又发现了新的问题，当在非下课时间，使用「屏幕分享」的其它成员退出后，自己不能检测到并退出。现发现当通话成员只剩一人时，悬浮通话按钮上的文字会变为“<strong>等待中</strong>”，可以通过检测改按钮的状态来判断人数情况，然鹅这并不是一个很好的办法（老师不退出或者还有别的大聪明在的时候容易翻车），希望能够找到一种既能记录聊天内容，又能实时统计通话人数的方案（轮询感觉不太好，容易错过聊天记录）。</p><p>  几小时后…</p><p>  忽然发现了一种较好的解决方案：将 QQ 的悬浮窗权限禁止之后加入通话，标题栏中就会出现人数显示。</p><h4 id="QQ电话、屏幕分享">QQ电话、屏幕分享</h4><p>  自己未加入时：</p><p><img src="%E8%87%AA%E5%B7%B1%E6%9C%AA%E5%8A%A0%E5%85%A5%E6%97%B6.png" alt=""></p><p>  自己加入后：</p><p><img src="%E8%87%AA%E5%B7%B1%E5%8A%A0%E5%85%A5%E5%90%8E.png" alt=""></p><p>  只剩自己一人时：</p><p><img src="%E5%8F%AA%E5%89%A9%E8%87%AA%E5%B7%B1%E4%B8%80%E4%BA%BA%E6%97%B6.png" alt=""></p><h4 id="群视频、群课堂">群视频、群课堂</h4><p>  自己未加入时：</p><p><img src="%E8%87%AA%E5%B7%B1%E6%9C%AA%E5%8A%A0%E5%85%A5%E6%97%B62.png" alt=""></p><p>  自己加入后（Intent跳转回聊天页面卡出「僵尸状态」）：</p><p><img src="%E8%87%AA%E5%B7%B1%E5%8A%A0%E5%85%A5%E5%90%8E2.png" alt=""></p><center>无论自己是否加入，都是显示人数</center><p>  群视频不能没有主持人，所以不会出现只剩自己一人的情况</p><h4 id="特殊情况">特殊情况</h4><p>  当群视频和语音通话同时存在时</p><p><img src="%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5.png" alt=""></p><center>无论自己是否加入，都是显示人数</center><p>  可以根据这些信息整理出一个获取课堂在线人数的函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回课堂成员数量 &amp; 修正课程类型 &amp; 修正在看课程</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMemberCount</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> title = textMatches(<span class="regexp">/语音通话中 \(\d+人\)/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    title = textMatches(<span class="regexp">/\d+人正在语音通话/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    title = text(<span class="string">'等待其他成员加入...'</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    title = textMatches(<span class="regexp">/\d+人正在视频聊天/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'live'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    title = textMatches(<span class="regexp">/\d+人正在通话/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'live'</span>;  <span class="comment">// 两种方式同时存在时，优先相信群视频</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  接下来分析脚本的运行逻辑，先简单整理一下大框架：</p><p><img src="%E9%80%BB%E8%BE%91%E6%A1%86%E6%9E%B6.png" alt=""></p><p>  由于脚本使用的基本时间单位为<strong>分钟</strong>，所以先写一个获取时间的函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>) </span>{  <span class="comment">// 获取一天中已过的分钟数</span></span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">return</span> date.getHours()*<span class="number">60</span> + date.getMinutes();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  框架逻辑采用时间驱动行为，在不同的时间决定做不同的事情，所以首先需要制作一张课程时刻表：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上下课时间，整数部分为小时，小数部分为分</span></span><br><span class="line"><span class="keyword">var</span> stime = [<span class="number">7.55</span>, <span class="number">9.05</span>, <span class="number">10.15</span>, <span class="number">14.25</span>, <span class="number">15.35</span>, <span class="number">16.45</span>];</span><br><span class="line"><span class="keyword">var</span> etime = [<span class="number">8.45</span>, <span class="number">9.55</span>, <span class="number">11.05</span>, <span class="number">15.15</span>, <span class="number">16.25</span>, <span class="number">17.35</span>];</span><br><span class="line"><span class="keyword">var</span> schedule = [];</span><br><span class="line"><span class="comment">// 把时间格式转换为脚本的通用表示方法</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stime.length; i++) {  </span><br><span class="line">    schedule.push([</span><br><span class="line">        stime[i]*<span class="number">60</span>+(stime[i]-(stime[i]|<span class="number">0</span>))*<span class="number">40</span>,</span><br><span class="line">        etime[i]*<span class="number">60</span>+(etime[i]-(etime[i]|<span class="number">0</span>))*<span class="number">40</span></span><br><span class="line">    ]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  然后需要一张课程表：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 各个科目上课的群，按照课程顺序(数语英自化物生)排列群号</span></span><br><span class="line"><span class="keyword">var</span> classes = [</span><br><span class="line">  <span class="string">'103026***9'</span>, <span class="string">'105673***1'</span>, <span class="string">'98150***2'</span>, <span class="string">'82286***7'</span>, <span class="string">'82286***7'</span>,  <span class="string">'105367***6'</span></span><br><span class="line">];</span><br></pre></td></tr></tbody></table></figure><p>  再定义一个函数来获取当前应上的课程序号，不在上课时间则返回-1：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shouldInWhat</span>(<span class="params">time</span>) </span>{</span><br><span class="line">    should = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; schedule.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (schedule[i][<span class="number">0</span>] &lt;= time &amp;&amp; time &lt; schedule[i][<span class="number">1</span>]) {</span><br><span class="line">            should = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> should;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>然后处理复杂的课内逻辑：</strong></p><p>  也许是因为<strong>屏幕分享</strong>使用的是通话音量的缘故，禁用 QQ 麦克风权限后上课会成为聋子，<s>都已经是盲人了，聋不聋还有意义吗？</s> 听不到老师的声音就容易翻车，所以需要通过 TTS 朗读聊天内容来作为辅助。</p><p>  看来今天是写不完了，以后再补充吧…</p><h3 id="3-月-10-日">3 月 10 日</h3><p>  发现乐视手机的 RootAutomator 存在模拟手势失败的情况，从安全角度考虑，今晚先去找找有没有 Android 7.0 以上的 ROM 刷入，是在不行就只能换回红米来挂机了。</p><p>  先到 ROM乐园<font size="3" color="gray">（无法想象当时我怎么敢用这么恐怖的东西😰，2022.2.22 注）</font> 去找了个号称 Android 7.1 的 ROM（上次刷机说是 9.0 实际上只有 6.0），由于不记得怎么用 TWRP 了就再去找了一遍，希望这次能够刷机顺利吧……</p><p>  附：<a href="http://www.romleyuan.com/lec/read?id=111">TWRP使用教程</a></p><p>  刷入并安装 Flyme：</p><p><img src="%E5%88%B7%E5%85%A5Flyme.jpg" alt=""></p><p>  有过之前刷机的经验，刷入 Flyme 的过程还是很顺利地就完成了，稍等一会就进入到了系统的启动界面:</p><p><img src="%E5%90%AF%E5%8A%A8Flyme.png" alt="开机中...... 话说没开好机居然也能用scrcpy?"></p><p>  成功上车 Android 7.1.2 Flyme，测试看看效果怎么样，希望换 Flyme 之后 WebView 和 RootAutomator 能够不要再出问题</p><p><img src="%E5%85%B3%E4%BA%8E%E6%89%8B%E6%9C%BA.png" alt=""></p><p>  跟之前一样的操作，先把 Auto.js、MT 管理器 和 Xposed 框架装上：</p><p><img src="%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.png" alt="下载安装文件"></p><p><img src="%E8%BF%9B%E5%BA%A6%E6%9D%A1.png" alt=""></p><p><img src="%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9D%97.png" alt="下载所需模块 &amp; 城通网盘限我速"></p><p>  在启用模块的时候 Xposed Installer 报错，提示找不到文件，进入 MT 管理器查找对应目录，发现 conf 文件夹不存在，手动创建后报 <code>Permission denied</code>，卧槽？？？？</p><p><img src="Permission.png" alt=""></p><p>  淦，似乎在没有原官方 ROM 的情况下将 SuperSu 换成 Magisk 极其麻烦，白折腾几个小时，我还是换用太极吧（Root 用户用太极也太憋屈了吧）</p><p><img src="%E5%A4%AA%E6%9E%81.png" alt=""></p><p>  不过姑且还是把太极装上了，希望太极和 Root 不会冲突吧，装了 3 个模块，主要还是为了使用防撤回和签到文本化，打开 QQ 检查一下模块是否能用</p><p><img src="Module-1.png" alt=""></p><p><img src="Module-2.png" alt=""></p><p><img src="Module-3.png" alt=""></p><p><img src="Module-4.png" alt=""></p><p>  成功辣！！所有模块都能正常生效，换机的小插曲应该也能告一段落了吧，回头想想今天还是做了不少事情的，心里也是大大的舒畅，明天就可以开始正式编写脚本啦</p><h3 id="3-月-11-日">3 月 11 日</h3><p>  终于又可以继续写代码叻，尽管现在已经是半夜两点多钟，但还是完全没有困意，先把基本功能函数做好吧</p><ul><li>对 getMemberCount( ) 的修改</li></ul><p>  为提高效率，把获取通话人数、修正课程类型、修正课程标记、获取入口控件全部集成进去处理</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMemberCount</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>, view = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="literal">true</span>; i; i = <span class="literal">false</span>) {</span><br><span class="line">        <span class="keyword">var</span> title = textMatches(<span class="regexp">/语音通话中 \(\d+人\)/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = textMatches(<span class="regexp">/\d+人正在语音通话/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = text(<span class="string">'等待其他成员加入...'</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = textMatches(<span class="regexp">/\d+人正在视频聊天/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live'</span>;</span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = textMatches(<span class="regexp">/\d+人正在通话/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live'</span>;  <span class="comment">// 两种方式同时存在时，优先选择群视频</span></span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> [count, view];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这里用了一种非常规写法：创建一个只跑一次的 for 循环，并在判断语句内使用 break，可以有效避免使用过多 <code>if...else...</code> 结构，优化代码的执行效率和可读性</p><ul><li>rClick(view) &amp; pClick(view)</li></ul><p>  rClick 为递归点击，从 view 向上寻找到第一个可点击的父控件进行点击，pClick 为坐标点击，直接调用 Android 7.0+ 无障碍手势点击控件的坐标中心。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rClick</span>(<span class="params">view</span>) </span>{  <span class="comment">// 递归点击控件</span></span><br><span class="line">    <span class="keyword">return</span> view.clickable() ? view.click() : rClick(view.parent());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pClick</span>(<span class="params">view</span>) </span>{  <span class="comment">// 以坐标点击控件</span></span><br><span class="line">    <span class="keyword">var</span> bounds = view.bounds();</span><br><span class="line">    click(bounds.centerX(), bounds.centerY());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>jumpTo( ) 函数</li></ul><p>  通过 Intent（没错又是它）跳转到指定QQ群的资料卡，再用无障碍模拟点击「发消息」进入该群聊天界面</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jumpTo</span>(<span class="params">qid</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(</span><br><span class="line">        <span class="string">'mqqapi://card/show_pslcard?src_type=internal&amp;version=1&amp;card_type=group&amp;uin='</span> + qid</span><br><span class="line">    ));</span><br><span class="line">    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">    context.startActivity(intent);</span><br><span class="line">    text(<span class="string">'发消息'</span>).findOne(<span class="number">3000</span>).click();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  忽然意思到一个较为棘手的问题，对于<strong>群课堂</strong>，无论自己是否在内，标题栏提示语都为同一格式，那么应该如何判断自己是否在内呢？</p><p>  想到的第一个方法是用 shell 命令动态更改 QQ 的悬浮窗权限，进入群课堂时打开悬浮窗权限，进入屏幕分享时禁用悬浮窗权限，结果查了查发现并不好操作。另一种可能可行的方案是通过 Root 权限直接启动系统设置的 Activity，再使用无障碍服务控制 QQ 的悬浮窗权限（不过这样搞真的稳定吗）</p><p><img src="%E5%83%B5%E5%B0%B8%E9%80%9A%E7%9F%A5.png" alt=""></p><p>  还想试试看能不能通过检测通知栏消息来判断课程状态，结果发现不管自己是否在课堂内，此通知都会显示在通知栏（而且不强制停止 QQ 还清不掉），看来这方法不可行。</p><p>  那有没有可能通过判断 QQ 媒体音量大小来判断自己是否位于直播间内呢？</p><p>  …貌似不行。</p><p>  不过在查找文档的过程中想到如果有类似网易云音乐的方式能够判断应用是否正在占用音频通道，不就能判断出自己是否位于直播间内了吗。</p><p>  emmmmmmm，这个方法即使可行，也违背了从简的初衷，我还是通过无障碍定时打开 QQ 悬浮窗权限吧：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置QQ悬浮窗权限，返回是否成功</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setFloatyPermission</span>(<span class="params">flag</span>) </span>{</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">        intent = <span class="keyword">new</span> Intent(<span class="string">"com.meizu.safe.security.SHOW_APPSEC"</span>);</span><br><span class="line">        intent.addCategory(Intent.CATEGORY_DEFAULT);</span><br><span class="line">        intent.putExtra(<span class="string">"packageName"</span>, <span class="string">'com.tencent.mobileqq'</span>);</span><br><span class="line">        context.startActivity(intent);</span><br><span class="line">        <span class="keyword">var</span> button = desc(<span class="string">'悬浮窗,'</span>).findOne(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">if</span> (button) {</span><br><span class="line">            <span class="keyword">if</span> (flag) {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'关闭'</span> &amp;&amp; button.click();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'开启'</span> &amp;&amp; button.click();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    $ = $();</span><br><span class="line">    sleep(<span class="number">1000</span>), back();</span><br><span class="line">    <span class="keyword">return</span> $;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  测试结果还是十分令人满意的，能够在两秒钟之内吧权限切换好，当然还需要导入两个类作为支持（群跳转、群签到、权限控制都要用到这两个类）：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">importClass(android.net.Uri);</span><br><span class="line">importClass(android.content.Intent);</span><br></pre></td></tr></tbody></table></figure><p><strong>下面插一些题外话</strong></p><p>  唔，看来还是不能啥都不挂直接睡啊，今天下午的这波生物课有点惊险了呢，明天上课的时候一定要记得把录音权限给了，不然听不到声音容易翻车啊。。。</p><div><a name="生物课-危"></a><img src="危3.png" style="margin-left:0;"><img src="危4.png" style="margin-left:0;"></div><p>  又是一波有惊无险……</p><h3 id="3-月-12-日">3 月 12 日</h3><p>  又拖了一天，真不知道在开学前能不能完成，加油继续写吧。。上次做了悬浮窗权限的控制，还差个能够检测悬浮窗是否存在的函数 <s>（有必要吗？直接关权限不行？不行，会陷入后台僵尸状态）</s></p><p>  忽然发现好像还能再做点优化：加入课堂之后不再使用无障碍 <code>back</code> 函数返回聊天界面，而是直接统一使用 <code>jumpTo</code> 函数直接跳转到聊天界面，相较原来的方法，便捷而且稳定。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (type) {</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'live+'</span>:</span><br><span class="line">        pClick(text(<span class="string">'加入视频'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'live'</span>:</span><br><span class="line">        pClick(text(<span class="string">'加入本群房间'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">        <span class="keyword">if</span> (id(<span class="string">'chief_anchor_txt'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>)) {</span><br><span class="line">            jumpTo(classes[should]);</span><br><span class="line">            viewing = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'share'</span>:</span><br><span class="line">        pClick(text(<span class="string">'立即加入'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">        desc(<span class="string">'挂断'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>) &amp;&amp; (jumpTo(classes[should]), viewing = <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  又发现了新的问题，有时候「<strong>加入本群房间</strong>」按钮明明就在那里，可无障碍服务就是获取不到控件，极其依妖</p><p><img src="TypeError.png" alt=""></p><p>  仔细测试了一番，发现原来是因为进行 pClick 之前没有加延时，导致控件尚未变为可点击的状态就已经出发坐标点击，修改 pClick 函数后成功进入课堂</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pClick</span>(<span class="params">view, dalay</span>) </span>{  <span class="comment">// 以坐标点击控件</span></span><br><span class="line">    dalay &amp;&amp; sleep(dalay);</span><br><span class="line">    <span class="keyword">var</span> bounds = view.bounds();</span><br><span class="line">    click(bounds.centerX(), bounds.centerY());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  使用时传递 <code>delay</code> 参数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pClick(text(<span class="string">'加入本群房间'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br></pre></td></tr></tbody></table></figure><p>  现在脚本已经具有最基本的上退课功能了(除了退出群课堂)，接下来将加入更为复杂的课内逻辑处理，包括入课冒泡、群签到打卡、问卷星打卡、复读机等高级功能的实现，同时也正在考虑加入定时截图的功能，以应对类似 <a href="#%E7%94%9F%E7%89%A9%E8%AF%BE-%E5%8D%B1">3 月 11 日生物课</a> 的情况。</p><p>  刚刚在真实课堂测试的过程中发现了一个新的问题，在自己进入通话之后，当有人**进入或退出语音通话时，标题栏的文本会发生改变（群课堂的还没测试，目测应该不会）</p><p><img src="%E6%9C%89%E4%BA%BA%E8%BF%9B%E5%85%A5%E6%88%96%E9%80%80%E5%87%BA%E6%97%B6%E6%A0%87%E9%A2%98%E7%9A%84%E5%8F%98%E5%8C%96.png" alt=""></p><p>  给跳转课堂加上一个判断条件后解决：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找不到入口、应在上课、但没在上课</span></span><br><span class="line"><span class="keyword">if</span> (!tView &amp;&amp; ~should &amp;&amp; !viewing) {</span><br><span class="line">    jumpTo(classes[should]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  话说貌似可以顺便把每个人的去留情况也记录下来，做个教师助手之类的东西？<s>(做是不可能做的)</s></p><p>  为了保险起见，将留在课堂的人数下限更改为 25，其实最初也有想过通过检测人数的变化趋势来判断上下课，后来感觉算法不太好写，容易出岔子就放弃了，讲道理要是能够把算法和逻辑设计好的话应该是比现在的朴素判断方法更好的。</p><h3 id="3-月-13-日">3 月 13 日</h3><p>  今天先主要攻克复读机及其旗下方法，（貌似）在这台乐视手机上不会出现获取不到 view 的情况 <s>（顶多也就是点不到而已）</s>，于是直接使用 UICollection 的 findOne 方法寻找聊天记录</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> listView = id(<span class="string">'listView1'</span>).findOne(<span class="number">1000</span>).children(), list = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; listView.length; i++) {</span><br><span class="line">    <span class="keyword">var</span> children = listView[i].children();</span><br><span class="line">    <span class="keyword">var</span> name = children.findOne(id(<span class="string">'chat_item_nick_name'</span>));</span><br><span class="line">    <span class="keyword">var</span> content = children.findOne(id(<span class="string">'chat_item_content_layout'</span>).className(<span class="string">'android.widget.TextView'</span>));</span><br><span class="line">    <span class="keyword">if</span> (name &amp;&amp; content) {</span><br><span class="line">        list.push([name, content]);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  能获取到聊天记录，不知道会不会隐藏着什么尚未出现的问题，而且当不在聊天界面时，findOne(1000) 就会返回 <code>null</code>，导致调用 children 方法时报错，添加限制条件后解决：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(<span class="string">'rlCommenTitle'</span>).exists() &amp;&amp; repeat();</span><br></pre></td></tr></tbody></table></figure><p>  最近正好在研究 via 浏览器的插件脚本，用来屏蔽百度和 CSDN 的网页自动折叠，我不禁灵光一闪，想到可能可以借助 via 的插件功能实现问卷星的自动打卡功能，免去了自己开多线程写悬浮窗的麻烦 <s>，反正已经用 Xposed 了，再多个 via 也无所谓（其实是因为懒）</s></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wjxSign</span>(<span class="params">url</span>) </span>{  <span class="comment">// 问卷星打卡</span></span><br><span class="line">    <span class="comment">// **必须**保证Via浏览器为手机默认浏览器</span></span><br><span class="line">    app.openUrl(url);</span><br><span class="line">    desc(<span class="string">'提交成功！'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>);</span><br><span class="line">    jumpTo(<span class="string">'105673***1'</span>);  <span class="comment">// 因为只有语文在问卷星打卡所以~</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  函数写起来还是很快的，简单三行就搞定了，不过要保证能用，就必须要保证 Via 为手机默认浏览器，且需要在 Via 中添加以下脚本：</p><p><img src="Via%E8%84%9A%E6%9C%AC.png" alt=""></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName(<span class="string">'jqradio'</span>)[<span class="number">0</span>].click();</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'q2'</span>).value = <span class="string">'49'</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'q3'</span>).value = <span class="string">'【君の名は】'</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'ctlNext'</span>).click();</span><br><span class="line">}, <span class="number">3000</span>);</span><br></pre></td></tr></tbody></table></figure><p>  接着在 getMemberCount 函数中增加了一段代码，用于判断是否存在群课堂的悬浮窗控件，从而判断自己是否在直播间内（其实这个两天前就应该做了，一直拖到现在才搞）</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (type == <span class="string">'live'</span>) {</span><br><span class="line">    <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (roots[i].packageName() == <span class="string">''</span> &amp;&amp; roots[i].clickable()) {</span><br><span class="line">            viewing = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    viewing = <span class="literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  继续测试，然后发现当悬浮窗存在时，只能点击悬浮窗右上角的 <code>x</code> 才能正常退出直播间，于是安排上了新的代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">auto.setWindowFilter(<span class="function">(<span class="params">win</span>) =&gt;</span> {<span class="keyword">return</span> <span class="literal">true</span>;});</span><br><span class="line"><span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">  <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">      pClick(roots[i].child(<span class="number">0</span>).child(<span class="number">1</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">auto.setWindowFilter(<span class="function">(<span class="params">win</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">return</span> win.type == <span class="string">'TYPE_APPLICATION'</span>;</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>  刚刚在读取消息记录的部分把问卷星打卡也加入了：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">url</span>) </span>{</span><br><span class="line">    url &amp;&amp; wjxSign(url);</span><br><span class="line">})(list[i][<span class="number">1</span>].match(<span class="regexp">/https?:\/\/www\.wjx\.cn\/[A-Za-z0-9/]+\.aspx?/</span>));</span><br></pre></td></tr></tbody></table></figure><p>  严格来说，现在已经是 3 月 14 日凌晨四点了，困得一批，可能写出来的东西会有点混乱，再写估计就要语无伦次了，今天就先到这里吧。</p><p>  待我把 Auto.js 的权限和 QQ 登录状况检查一遍，确保明天早上的两个自动脚本能够顺利运行，没发现什么问题就睡啦</p><h3 id="3-月-14-日">3 月 14 日</h3><p>  很难受，今天早上起来，直接挂机睡觉了，结果因为老脚本中的 now 变量没有替换成 getTime() 函数，导致进入下课逻辑的时候报找不到 now 变量（这波危），看来还是我对脚本太自信了</p><p><img src="%E6%89%BE%E4%B8%8D%E5%88%B0now.png" alt=""></p><p>  下午测试，发现下课逻辑处理不当，导致脚本发生鬼畜，其原因是对等待逻辑的处理有问题，原逻辑是「如果没有发现“谢谢老师”，且 15 分钟前不应该上课，则直接退出」，测试的时候发现这脚本会在上课的前 15 分钟发生鬼畜，反复进退，现将逻辑更改为「如果没有发现“谢谢老师”，且 15 分钟前和现在都不在上课时间，则直接退出」，问题得到解决</p><p>  现在的 Qlivoid++ 还没有像旧版一样的震动提醒功能，我打算在这一版中优化震动提醒的功能，使用频率的变化来体现不同的重要程度，并同时支持调节时间长短的功能：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">notify</span>(<span class="params">importance, time</span>) </span>{</span><br><span class="line">    time = time || <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">var</span> cycle = <span class="number">130</span> - importance*<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> msg = <span class="string">'- '</span>.repeat((time/cycle)|<span class="number">0</span>) + <span class="string">'-'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; msg.length; i++) {</span><br><span class="line">        msg[i] == <span class="string">'-'</span> &amp;&amp; device.vibrate(cycle);</span><br><span class="line">        sleep(cycle+<span class="number">5</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这就是新的消息通知函数，支持频率级别 0 ~ 9，震动时间可调，默认 500 ms</p><p>  下一步准备对 getMemberCount 函数再做一次优化，使用正则表达式匹配标题文字，减少搜索控件的次数，其实最终目的还是为了提高获取聊天记录的效率，全力辅助复读机（这复读机还真是麻烦，逻辑十分复杂）。以及进一步增加当直播出现故障时重启 QQ 的功能</p><h3 id="3-月-15-日">3 月 15 日</h3><p>  昨天有些事忙去了，就没写多少代码，今天打算先把比较简单的入课打卡功能先做了，然后再整理一波复读机的逻辑</p><p>  入课冒泡函数整理如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> signText = [<span class="string">'1'</span>, <span class="string">'#sign#'</span>, <span class="string">'.'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubble</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> time = getTime();</span><br><span class="line">    <span class="keyword">if</span> (~shouldInWhat(time+<span class="number">5</span>) &amp;&amp; !~shouldInWhat(time-<span class="number">7</span>)) {</span><br><span class="line">        <span class="keyword">var</span> msg = signText[(random()*signText.length)|<span class="number">0</span>];</span><br><span class="line">        msg == <span class="string">'#sign#'</span> ?  qciSign(shouldInWhat(getTime())) : sendMessage(msg);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其中涉及到的 sendMessage 函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params">msg</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> editText = id(<span class="string">'input'</span>).findOne(<span class="number">3000</span>);</span><br><span class="line">    <span class="keyword">if</span> (editText) {</span><br><span class="line">        editText.setText(msg);</span><br><span class="line">        id(<span class="string">'fun_btn'</span>).findOne(<span class="number">3000</span>).click();;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'自动发送了消息，注意安全。'</span>);</span><br><span class="line">        notify(<span class="number">3</span>, <span class="number">150</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  然后补上昨天的 GetMemberCount 函数升级版，使用字符串处理代替了多次寻找控件，使函数耗时从 1.2s 缩短到小于 400ms</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMemberCount</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>, view = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> title = textMatches(<span class="regexp">/(?:语音通话中 \()?\d+\+?人\)?(?:正在(?:(?:语音)?通话|视频聊天))?|等待其他成员加入\.\.\./</span>).findOne(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        <span class="keyword">var</span> tText = title.text();</span><br><span class="line">        <span class="keyword">var</span> population = tText.match(<span class="regexp">/(\d+)\+?人/</span>);</span><br><span class="line">        population &amp;&amp; (count = <span class="built_in">parseInt</span>(population[<span class="number">1</span>]));</span><br><span class="line">        <span class="keyword">if</span> (tText.match(<span class="regexp">/语音通话中 \(\d+\+?人\)/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在语音通话/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText == <span class="string">'等待其他成员加入...'</span>) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在视频聊天/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live'</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在通话/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live+'</span>;  <span class="comment">// 两种方式同时存在时，优先选择群视频</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 通过检测悬浮窗状态判断是否位于课堂内</span></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="string">'live'</span>) {</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">            auto.setWindowFilter(<span class="function">() =&gt;</span> {<span class="keyword">return</span> <span class="literal">true</span>;});</span><br><span class="line">            <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">                <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">                    viewing = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            viewing = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        $();</span><br><span class="line">        auto.setWindowFilter(<span class="function">(<span class="params">win</span>) =&gt;</span> {</span><br><span class="line">            <span class="keyword">return</span> win.type == <span class="string">'TYPE_APPLICATION'</span>;</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> [count, view];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  关于复读机的逻辑，首先必须保证，复读机不能瞎说话，也不能等待很久后才复读说话，必须具有及时性，其次又不能过于自闭，要有一定的活跃度，这样复读机才有其存在的意义</p><p>  首先为了安全考虑，长度大于 5 的消息不会被脚本复读，当屏幕上有自己的消息存在时也不会触发复读，上次复读过的消息也不会被复读（这里的「上次」应该有一个判定机制，如经过一段时间后就不再认为是「上次」），同时注意区分大小写，避免诸如「A」 和「a」被复读两次的情况发生，应有一个算法，对消息进行处理，保证复读内容的有效，准确。</p><h3 id="3-月-16-日">3 月 16 日</h3><p>  发现了一个恶性 bug，如果反复调用 <code>auto.setWindowFilter()</code> 函数，很容易出现获取不到控件的情况，于是为了稳定性考虑，不得已牺牲一些效率，将窗口过滤器设置成全局模式</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto.setWindowFilter(<span class="function">() =&gt;</span> {<span class="keyword">return</span> <span class="literal">true</span>;});</span><br></pre></td></tr></tbody></table></figure><p>  新问题，当群课堂结束以后，悬浮窗文字会变为「<strong>等待中</strong>」，此时标题栏消失，未能正常退出直播间，通过在 getMemberCount 函数末尾对悬浮窗的判定中增加一小段代码解决，当检测到悬浮窗显示的字样变为「等待中」时，启用坐标点击悬浮窗右上角的「<code>×</code>」关闭悬浮窗。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chFlag = type.startsWith(<span class="string">'live'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">            <span class="keyword">if</span> (roots[i].children().findOne(text(<span class="string">'等待中'</span>))) {</span><br><span class="line">                <span class="built_in">console</span>.log();</span><br><span class="line">                pClick(roots[i].child(<span class="number">0</span>).child(<span class="number">1</span>));</span><br><span class="line">            }</span><br><span class="line">            chFlag &amp;&amp; (viewing = <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    chFlag &amp;&amp; (viewing = <span class="literal">false</span>);</span><br><span class="line">}</span><br><span class="line">$();</span><br></pre></td></tr></tbody></table></figure><p>  改完顺手优化了下 reset 函数中对于 QQ 出现异常情况的判定，这样写或许会快一些吧。。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (id(<span class="string">'graybar'</span>).textMatches(<span class="regexp">/加入语音通话失败|网络异常.*/</span>).exists()) {</span><br><span class="line">    restartQQ();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  后续可能会考虑继续加入屏幕日志功能，毕竟没连接电脑的时候看日志很不方便。而且听说开学时间延后到 4 月初了？从现在的进度看来脚本应该能够在开学之前完成，这段时间为了写脚本确实有点太拼了，睡眠不够状态也不太好，今天就先睡个午觉吧（虽然不懂这一觉会睡到几点钟），话说明天就是 Qlivoid 正式开发一个月了呢，时间过得还真快啊。</p><p>  下午化学课继续测试，发现有时候 QQ 的权限会「耍流氓」，在已经禁用悬浮窗权限的情况下依然显示悬浮窗，在代码中加入了一行，使脚本子在每次修改权限的时候至少拨动一次按钮，不知道能否解决问题：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setFloatyPermission</span>(<span class="params">flag</span>) </span>{</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">        intent = <span class="keyword">new</span> Intent(<span class="string">"com.meizu.safe.security.SHOW_APPSEC"</span>);</span><br><span class="line">        intent.addCategory(Intent.CATEGORY_DEFAULT);</span><br><span class="line">        intent.putExtra(<span class="string">"packageName"</span>, qqpkg);</span><br><span class="line">        context.startActivity(intent);</span><br><span class="line">        <span class="keyword">var</span> button = desc(<span class="string">'悬浮窗,'</span>).findOne(<span class="number">2000</span>);</span><br><span class="line">        button.click();</span><br><span class="line">        sleep(<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">if</span> (button) {</span><br><span class="line">            <span class="keyword">if</span> (flag) {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'开启'</span> &amp;&amp; button.click();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'关闭'</span> &amp;&amp; button.click();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    $ = $();</span><br><span class="line">    sleep(<span class="number">800</span>), back();</span><br><span class="line">    <span class="keyword">return</span> $;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  一定要注意这里「开启」和「关闭」的判定要反过来（因为之前点过一次按钮），不然就会授权出错，该给的时候没给，不该给的时候却又给权限。</p><p>  接着直接从旧版 Qlivoid 中复制关于屏幕日志的部分（这部分没怎么问题，不改也能正常使用）：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">screenLog</span>(<span class="params"></span>) </span>{  <span class="comment">// 启动悬浮窗，将日志显示在屏幕上</span></span><br><span class="line">    <span class="keyword">var</span> w = floaty.rawWindow(</span><br><span class="line">        <span class="xml"><span class="tag">&lt;<span class="name">vertical</span> <span class="attr">bg</span>=<span class="string">'#10000000'</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">com.stardust.autojs.core.console.ConsoleView</span> <span class="attr">id</span>=<span class="string">'ConS'</span> <span class="attr">margin</span>=<span class="string">'30'</span>/&gt;</span>    </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">vertical</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">    w.setSize(-<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">    w.setTouchable(<span class="literal">false</span>);</span><br><span class="line">    ui.run(<span class="function">() =&gt;</span> {</span><br><span class="line">        w.ConS.setConsole(org.autojs.autojs.autojs.AutoJs.getInstance().getGlobalConsole());</span><br><span class="line">        w.ConS.findViewById(<span class="number">213129</span>***<span class="number">3</span>).setVisibility(android.view.View.GONE);</span><br><span class="line">    });    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  下一步准备加入类似旧版的每隔一定周期日志提醒的功能，还可以顺便将复读机的重置器也添加进去。</p><p>  ……出现了严重的 bug，这脚本到上课时间居然不会自己切换群聊，检查了一下发现是由于界面刷新导致之前获取的 View 无效的问题，无奈之下只能再次牺牲效率，增加一次对控件的搜索，下面是再次修改过的 getMemberCount 函数片段：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>, tType = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> title = textMatches(<span class="regexp">/(?:语音通话中 \()?\d+\+?人\)?(?:正在(?:(?:语音)?通话|视频聊天))?|等待其他成员加入\.\.\.|.+(加入|退出)了.+/</span>).findOne(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span> (title) {</span><br><span class="line">    <span class="keyword">var</span> tText = title.text();</span><br><span class="line">    <span class="keyword">var</span> population = tText.match(<span class="regexp">/(\d+)\+?人/</span>);</span><br><span class="line">    population &amp;&amp; (count = <span class="built_in">parseInt</span>(population[<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (tText.match(<span class="regexp">/语音通话中 \(\d+\+?人\)/</span>)) {</span><br><span class="line">        tType = <span class="string">'语音通话中'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在语音通话/</span>)) {</span><br><span class="line">        tType = <span class="string">'人正在语音通话'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText == <span class="string">'等待其他成员加入...'</span>) {</span><br><span class="line">        tType = <span class="string">'等待其他成员加入'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        count = <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在视频聊天/</span>)) {</span><br><span class="line">        tType = <span class="string">'人正在视频聊天'</span>;</span><br><span class="line">        type = <span class="string">'live'</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在通话/</span>)) {</span><br><span class="line">        tType = <span class="string">'人正在通话'</span>;</span><br><span class="line">        type = <span class="string">'live+'</span>;  <span class="comment">// 两种方式同时存在时，优先选择群视频</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (~tText.search(<span class="regexp">/(?:加入|退出)了/</span>)) {</span><br><span class="line">        tType = <span class="string">'#'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  将原来的获取控件改成了获取文本，界面切换后再通过文本获取控件，同时修改了正则表达式，使其能够匹配有人加入或退出时的提示，同样对主循环也做了一些修改，使其适应现在的 GerMemberCount 函数，修改后的主循环如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        reset();</span><br><span class="line">        <span class="keyword">var</span> should = shouldInWhat(getTime());</span><br><span class="line">        <span class="keyword">if</span> (id(<span class="string">'rlCommenTitle'</span>).exists()) {</span><br><span class="line">            repeat();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">var</span> pair = getMemberCount();  <span class="comment">// 同时获取人数和入口view</span></span><br><span class="line">        <span class="keyword">var</span> mCount = pair[<span class="number">0</span>], tType = pair[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> ((~should &amp;&amp; !viewing) || !tType) {  <span class="comment">// 应在上课、没在上课 或 找不到标题</span></span><br><span class="line">            jumpTo(classes[should]);</span><br><span class="line">            sleep(<span class="number">2000</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (mCount) {</span><br><span class="line">            <span class="keyword">if</span> (~should &amp;&amp; mCount &gt;= <span class="number">40</span> &amp;&amp; !viewing) {  <span class="comment">// 应在上课、没在上课、人数&gt;=40</span></span><br><span class="line">                notify(<span class="number">3</span>, <span class="number">150</span>), <span class="built_in">console</span>.log(<span class="string">'发现课程，即将加入'</span>);</span><br><span class="line">                setFloatyPermission(type.startsWith(<span class="string">'live'</span>)), sleep(<span class="number">2000</span>);</span><br><span class="line">                rClick(textContains(tType).findOne(<span class="number">100</span>));</span><br><span class="line">                <span class="keyword">switch</span> (type) {</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live+'</span>:</span><br><span class="line">                        pClick(text(<span class="string">'加入视频'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live'</span>:</span><br><span class="line">                        pClick(text(<span class="string">'加入本群房间'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">                        <span class="keyword">if</span> (id(<span class="string">'chief_anchor_txt'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>)) {</span><br><span class="line">                            jumpTo(classes[should]);</span><br><span class="line">                            viewing = <span class="literal">true</span>;</span><br><span class="line">                            sleep(<span class="number">2000</span>), bubble();</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'share'</span>:</span><br><span class="line">                        pClick(text(<span class="string">'立即加入'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">                        desc(<span class="string">'挂断'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>) &amp;&amp; (jumpTo(classes[should]), viewing = <span class="literal">true</span>);</span><br><span class="line">                        sleep(<span class="number">2000</span>), bubble();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">var</span> forcedExit = !~shouldInWhat(getTime()-<span class="number">15</span>) &amp;&amp; !~shouldInWhat(getTime());</span><br><span class="line">            <span class="keyword">if</span> (viewing &amp;&amp; (mCount &lt; <span class="number">25</span> || exitConfirm || forcedExit)) {</span><br><span class="line">                notify(<span class="number">3</span>, <span class="number">150</span>), <span class="built_in">console</span>.log(<span class="string">'进入下课逻辑'</span>);</span><br><span class="line">                <span class="keyword">switch</span> (type) {</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live+'</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live'</span>:</span><br><span class="line">                        <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">                            <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">                                pClick(roots[i].child(<span class="number">0</span>).child(<span class="number">1</span>));</span><br><span class="line">                                viewing = <span class="literal">false</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'share'</span>:</span><br><span class="line">                        rClick(textContains(tType).findOne(<span class="number">100</span>));</span><br><span class="line">                        desc(<span class="string">'挂断'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>).click();</span><br><span class="line">                        viewing = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">catch</span>(e) {</span><br><span class="line">        <span class="keyword">var</span> line = e.stack.split(<span class="string">'\n'</span>)[<span class="number">0</span>].match(<span class="regexp">/\t.+:(\d+)/</span>)[<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'错误拦截: At line:'</span> + line + <span class="string">' '</span> + e);</span><br><span class="line">        notify(<span class="number">6</span>, <span class="number">200</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  每隔 5 分钟脚本应把 viewing 设置为 <code>false</code>，避免获取不到 view 时不上课的情况，可以增加脚本的稳定性和安全性</p><h3 id="3-月-17-日">3 月 17 日</h3><p>  犹豫了下决定加入脚本暂停功能，使得脚本能够在运时可控地暂停，方便紧急时的处理和调试，暂停过程中每隔 5s 发送一次震动提醒，代码比较简单，就只有一个悬浮窗和一个死循环，这里就不放出来了。</p><p><img src="%E8%84%9A%E6%9C%AC%E6%9A%82%E5%81%9C.png" alt=""></p><p>  忽略掉乱七八糟的报错，屏幕中间那个写着「✔」的悬浮窗，就是脚本暂停的控制开关，脚本在执行完一个循环后，如果发现设置暂停的变量为 <code>true</code>，就会进入死循环，直到变量值变为 <code>false</code></p><p>  此外随着脚本逻辑越来越复杂，可能以后那些比较复杂的机制，都不太方便把代码直接放出来，可能会转为以图片为主的记录模式</p><p>  终于正式进入复读的开发了吗？先把逻辑整理清楚，接着上次的分析，长度过大的消息不会被复读，一定时间内复读过的消息不会被再次复读；每隔 40s 向前滚动一次「<strong>发送过的消息</strong>」列表，列表长度为 3，即三次内发送过的消息不会被再次复读；如果获取到的消息全部由数字和字母组成，且长度<strong>不为</strong> 1，则全部转为小写，若长度<strong>为</strong>  1，则转为大写，这样一来就能较好的适应各科的发言情况了。每次复读之后都会有 20s 的冷却时间，冷却时间内不会复读任何消息（但依然会记录，只是不读而已），因为有可能会出现复读完成后侧循环刚好完成的情况，复读的冷却要在主循环中进行。</p><p><img src="%E5%A4%8D%E8%AF%BB%E6%9C%BA.png" alt=""></p><p>  复读机完成，能够正常复读，明天继续测试看看还有没有 bug，至此四大金刚函数全部完成，准备将脚本正式投入使用。</p><h3 id="3-月-19-日">3 月 19 日</h3><p>  收到了确切的消息，开学时间是 4 月 7 日，这意味着 Qlivoid++ 还能使用很长的一段时间，在前两日的使用中，当然也发现了一些 bug，其中大部分都已修复，有一些比较棘手的 bug 和待优化的地方我将写在下面，然后一一修复。由于时间关系，修复的过程和具体细节我就不在此具体列出了，当前存在的问题如下：</p><ul><li>[x] 发送消息后没有自动关闭键盘</li><li>[x] 进入课堂时如果正在通话会进入失败</li><li>[ ] 重启QQ后scheme失效 <font size="2" color="gray">（这应该不是我能解决的问题吧）</font></li></ul><h2 id="写在最后">写在最后</h2><p>  随着第一条复读消息的发出，Qlivoid++ 的开发也算是告一段落，从 2 月 16 日到 3 月 17 日，历时一个月的开发，说长不长，说短也不短。但从中，我学到了很多新的语法，也更加深入地了解了 JavaScript 的运行机制，同时对自动化测试也有了一个更深的认识，在这一个月的时间里，我遇到过很多的问题，<strong>尝试-错误-Debug-再尝试</strong>，循环往复已不知几轮，但最终，当 Qlivoid++ 在我面前稳定地运行的那一刻，我终于露出了欣慰的笑容。</p><p>  最终便只剩下了一些收尾工作，比如更加合理地安排日志输出，使脚本更加易于使用，如果还有 bug，我也会继续修复，总之这次的项目，真的让我受益匪浅。</p><h2 id="Q-A（2022-新增）">Q &amp; A（2022 新增）</h2><ul><li>Q：大二的你，再回头看 Qlivoid 时，有什么感想：</li></ul><blockquote><p>  A：仅仅靠这些“破铜烂铁”，能花一个月时间将能用的脚本肝出来，还真是一个奇迹。现在的我，虽然技术上有所长进，但跟高中比起来，却少了那一份坚持，也许这就是我该改进的地方罢</p></blockquote><ul><li>Q：如果以你现在掌握的技术，穿越回到高中时代，会如何实现 Qlivoid？</li></ul><blockquote><p>  A：大概是 go-cqhttp 和 Xposed 模块的组合，模块仅用于处理进入/退出课堂，其它功能全部交由 Python 后端完成</p></blockquote></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown / Butterfly 渲染测试</title>
      <link href="/posts/4277378572/"/>
      <url>/posts/4277378572/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1>渲染测试</h1><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>图片</span></div>    <div class="hide-content"><p><img src="95579662_p0.jpg" alt=""></p><p><img src=".%5C%E6%B8%B2%E6%9F%93%E6%B5%8B%E8%AF%95%5C95579662_p0.jpg" alt=""></p></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>Emoji</span></div>    <div class="hide-content"><h2 id="🤔🙏😱🔥😨🐎😈😥😰👴🏻🐓🐂🔒🛡️">🤔🙏😱🔥😨🐎😈😥😰👴🏻🐓🐂🔒🛡️</h2></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>标题</span></div>    <div class="hide-content"><h1>这里是一级标题</h1><h2 id="这里是二级标题">这里是二级标题</h2><h3 id="这里是三级标题">这里是三级标题</h3><h4 id="这里是四级标题">这里是四级标题</h4><h5 id="这里是五级标题">这里是五级标题</h5><h6 id="这里是六级标题">这里是六级标题</h6><blockquote><h1>这里是一级标题</h1><h2 id="这里是二级标题-2">这里是二级标题</h2><h3 id="这里是三级标题-2">这里是三级标题</h3><h4 id="这里是四级标题-2">这里是四级标题</h4><h5 id="这里是五级标题-2">这里是五级标题</h5><h6 id="这里是六级标题-2">这里是六级标题</h6></blockquote></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>段落</span></div>    <div class="hide-content"><p>  <strong>测试</strong>因何而发生？可是，即使是这样，<strong>测试</strong>的出现仍然代表了一定的意义。在这种困难的抉择下，本人思来想去，寝食难安。<br>在这种困难的抉择下，本人思来想去，寝食难安。 <s>马云曾经说过，最大的挑战和突破在于用人，而用人最大的突破在于信任人。</s> 这似乎解答了我的疑惑。我们都知道，只要有意义，那么就必须慎重考虑。</p><p>  我们一般认为，抓住了问题的<strong>关键</strong>，其他一切则会迎刃而解。总结的来说，<strong>测试</strong>，发生了会如何，不发生又会如何。 <em>所谓<strong>测试</strong>，<strong>关键</strong>是<strong>测试</strong>需要如何写。问题的<strong>关键</strong>究竟为何？对我个人而言，<strong>测试</strong>不仅仅是一个重大的事件，还可能会改变我的人生。</em> 而这些并不是完全重要，更加重要的问题是，而这些并不是完全重要，更加重要的问题是，每个人都不得不面对这些问题。</p><p>  <s>从这个角度来看，总结的来说，经过 <a href=".">上述讨论</a>， <a href="."><strong>测试</strong></a> 因何而发生？从这个角度来看，带着这些问题，我们来审视一下<strong>测试</strong>。</s> <strong>测试</strong>，到底应该如何实现。问题的 <a href="."><strong>关键</strong></a> 究竟为何？对我个人而言，<strong>测试</strong>不仅仅是一个重大的事件，还可能会改变我的人生。</p><blockquote><p>  <strong>测试</strong>因何而发生？可是，即使是这样，<strong>测试</strong>的出现仍然代表了一定的意义。在这种困难的抉择下，本人思来想去，寝食难安。 <s>马云曾经说过，最大的挑战和突破在于用人，而用人最大的突破在于信任人。</s> 这似乎解答了我的疑惑。我们都知道，只要有意义，那么就必须慎重考虑。</p><blockquote><p>  我们一般认为，抓住了问题的<strong>关键</strong>，其他一切则会迎刃而解。总结的来说，<strong>测试</strong>，发生了会如何，不发生又会如何。 <em>所谓<strong>测试</strong>，<strong>关键</strong>是<strong>测试</strong>需要如何写。问题的<strong>关键</strong>究竟为何？对我个人而言，<strong>测试</strong>不仅仅是一个重大的事件，还可能会改变我的人生。</em> 而这些并不是完全重要，更加重要的问题是，而这些并不是完全重要，更加重要的问题是，每个人都不得不面对这些问题。</p></blockquote><p>  <s>从这个角度来看，总结的来说，经过上述讨论，<strong>测试</strong>因何而发生？从这个角度来看，带着这些问题，我们来审视一下<strong>测试</strong>。</s> <strong>测试</strong>，到底应该如何实现。问题的<strong>关键</strong>究竟为何？对我个人而言，<strong>测试</strong>不仅仅是一个重大的事件，还可能会改变我的人生。</p></blockquote></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>代码段</span></div>    <div class="hide-content"><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports.parse = <span class="function">(<span class="params">{ content, name, url }, { yaml, axios, notify }</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'proxies'</span> <span class="keyword">in</span> content &amp;&amp; <span class="string">'proxy-groups'</span> <span class="keyword">in</span> content) {</span><br><span class="line">        content[<span class="string">'proxies'</span>].push({</span><br><span class="line">            <span class="attr">name</span>: <span class="string">'Trojan 🛡️'</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">'trojan'</span>,</span><br><span class="line">            <span class="attr">server</span>: <span class="string">'your.server.com'</span>,</span><br><span class="line">            <span class="attr">port</span>: <span class="number">443</span>,</span><br><span class="line">            <span class="attr">password</span>: <span class="string">'your.password.here'</span>,</span><br><span class="line">            <span class="attr">alpn</span>: [ <span class="string">'h2'</span>, <span class="string">'http/1.1'</span> ]</span><br><span class="line">        })</span><br><span class="line">        content[<span class="string">'proxy-groups'</span>][<span class="number">0</span>][<span class="string">'proxies'</span>].unshift(<span class="string">'Trojan 🛡️'</span>)</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">return</span> content</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; <span class="string">"Hello World!"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></blockquote></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>Note (Bootstrap Callout)</span></div>    <div class="hide-content"><div class="note default flat"><p><strong>测试</strong>因何而发生？可是，即使是这样，<strong>测试</strong>的出现仍然代表了一定的意义。在这种困难的抉择下，本人思来想去，寝食难安。</p></div><div class="note default no-icon flat"><h2 id="【无图标】">【无图标】</h2><p><strong>测试</strong>因何而发生？可是，即使是这样，<strong>测试</strong>的出现仍然代表了一定的意义。在这种困难的抉择下，本人思来想去，寝食难安。</p></div><div class="note primary flat"><p><strong>测试</strong>因何而发生？可是，即使是这样，<strong>测试</strong>的出现仍然代表了一定的意义。</p></div><div class="note success flat"><ul><li><strong>测试</strong>因何而发生？</li></ul><p><img src="95579662_p0.jpg" alt=""></p></div><div class="note info flat"><blockquote><p><strong>测试</strong>因何而发生？可是，即使是这样，<strong>测试</strong>的出现仍然代表了一定的意义。在这种困难的抉择下，本人思来想去，寝食难安。</p></blockquote></div><div class="note warning flat"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; <span class="string">"Hello World!"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><div class="note danger flat"><blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; <span class="string">"Hello World!"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></blockquote></div><ul><li>图标采用 font-awesome v5 标准</li></ul><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>表格</span></div>    <div class="hide-content"><table><thead><tr><th style="text-align:center">表格</th><th style="text-align:center"><strong>表格测试</strong></th></tr></thead><tbody><tr><td style="text-align:center">name</td><td style="text-align:center">图库名字</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">图库描述</td></tr><tr><td style="text-align:center">link</td><td style="text-align:center">连接到对应相册的地址</td></tr><tr><td style="text-align:center">img-url</td><td style="text-align:center">图库封面的地址</td></tr></tbody></table></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>画廊</span></div>    <div class="hide-content"><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://github-readme-stats.vercel.app/api/wakatime?username=Mufanc&amp;layout=compact&amp;hide=Text" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">标题</div>  <p>这里是测试描述</p>  <a href="https://github.com/Mufanc"></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://avatars.githubusercontent.com/u/47652878" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">乾纱凪</div>  <p>纱凪她真的太太太太温柔了</p>  <a href="#"></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="http://www.favo-soft.jp/omega-star/biman5html/bg005.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">好东西</div>  <p>🤔🥵</p>  <a href="https://store.steampowered.com/app/1310990/_/?l=tchinese"></a>  </figcaption>  </figure></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: bg;color: color">display    </button><div class="hide-content"><div class="fj-gallery"><p><img src="95579662_p0.jpg" alt=""><br><img src="95579662_p0.jpg" alt=""><br><img src="95579662_p0.jpg" alt=""><br><img src="95579662_p0.jpg" alt=""></p>          </div></div></div></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>公式</span></div>    <div class="hide-content"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></munderover><msubsup><mi>a</mi><mi>i</mi><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">a_{i+1}^k = \sum_{j=1}^{N_i}a_i^j\cdot\omega_{i+1}^{kj} + b_{i+1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2044em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2532em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3111em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2044em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a_{i+1}^k = \sum_{j=1}^{N_i}a_i^j\cdot\omega_{i+1}^{kj} + b_{i+1}^k</span><br></pre></td></tr></tbody></table></figure></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>Tabs</span></div>    <div class="hide-content"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">{% tabs Unique name, [index] %}</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id's as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It's will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like 'fas fa-font')</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></tbody></table></figure><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">Tab 1</button></li><li class="tab"><button type="button" data-href="#tab-2">Tab 2</button></li><li class="tab"><button type="button" data-href="#tab-3">Tab 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><p><strong>This is Tab 1.</strong><br>Tabs <a href="https://butterfly.js.org/posts/4aa8abbe/#Tabs">官方文档</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div></div><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>Mermaid</span></div>    <div class="hide-content"><ul><li><a href="https://butterfly.js.org/posts/4aa8abbe/#mermaid">文档</a></li></ul><p>使用 mermaid 标签可以绘制 Flowchart（流程图）、Sequence diagram（時序图）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和 Pie Chart（饼图），具体可以查看 mermaid 文档</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5  </pre></div></div></div></body></html>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
