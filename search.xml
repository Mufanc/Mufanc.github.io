<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>参加 Hackergame 2022 是怎样一种体验？</title>
      <link href="/posts/3168593931/"/>
      <url>/posts/3168593931/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7b9d78dec51d8118518c1539721a3346623b7731b95565f21a2f6e467b707084"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码，查看文章。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 每日一题｜Hackergame 期间暂时停更</title>
      <link href="/posts/3111433537/"/>
      <url>/posts/3111433537/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  开新坑咯～</p><p>  作为一名 NOIP 退役选手，已经两年（？）没有好好研究算法了，就连 CCF CSP 也全靠吃着高中的老本。<s>然而做人如果没有梦想，那和一条咸鱼有什么分别呢？</s> 遂开此坑，有这时间去打原神每日，倒不如来 LeetCode 享受 A 题的快感（</p><p><img src="banner.png" alt=""></p><h2 id="2022-年-10-月-21-日">2022 年 10 月 21 日</h2><ul><li><a href="https://leetcode.cn/problems/online-stock-span/">901. 股票价格跨度</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路">解题思路</h3><p>  记录每个位置向前最大跨度的下标，这样后续搜索时就能够跳过这些位置，从而实现加速：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StockSpanner</span></span> {</span><br><span class="line">    price: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;,</span><br><span class="line">    prev: <span class="built_in">Vec</span>&lt;<span class="built_in">usize</span>&gt;,</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> StockSpanner {</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">new</span></span>() -&gt; <span class="keyword">Self</span> {</span><br><span class="line">        <span class="keyword">Self</span> {</span><br><span class="line">            price: <span class="built_in">vec!</span>[],</span><br><span class="line">            prev: <span class="built_in">vec!</span>[],</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">next</span></span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>, price: <span class="built_in">i32</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">self</span>.price.push(price);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> length = <span class="keyword">self</span>.prev.len();</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> index = length;</span><br><span class="line">        <span class="keyword">while</span> index &gt;= <span class="number">1</span> &amp;&amp; <span class="keyword">self</span>.price[length] &gt;= <span class="keyword">self</span>.price[index - <span class="number">1</span>] {</span><br><span class="line">            index = <span class="keyword">self</span>.prev[index - <span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">self</span>.prev.push(index);</span><br><span class="line"></span><br><span class="line">        (length - index + <span class="number">1</span>) <span class="keyword">as</span> _</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-21.png" alt=""></p><p>  复杂度似乎是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的，但是为什么这么慢🤔，可能是常数比官方题解的单调栈大（？</p><h2 id="2022-年-10-月-20-日">2022 年 10 月 20 日</h2><ul><li><a href="https://leetcode.cn/problems/k-th-symbol-in-grammar/">779. 第K个语法符号</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路-2">解题思路</h3><ul><li>解法一：递归</li></ul><p>  用数组 <code>F[i, j]</code> 表示第 <code>n - 1</code> 行，下标 <code>k - 1</code> 的元素，不难得到递推表达式为 <code>F[0, 0] = 0</code>、<code>F[i, j] = F[i - 1, j &gt;&gt; 1] ^ (j &amp; 1)</code>，将其表示为递归形式即可。时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>，但是递归会产生一定开销</p><ul><li>解法二：位运算</li></ul><p>  找规律（不会证😭），可知 <code>k - 1</code> 的二进制表示中 <code>1</code> 的数量就是答案：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">kth_grammar</span></span>(n: <span class="built_in">i32</span>, <span class="keyword">mut</span> k: <span class="built_in">i32</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line">        k -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> k != <span class="number">0</span> {</span><br><span class="line">            k ^= (k &amp; -k);</span><br><span class="line">            ans ^= <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        ans</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-20.png" alt=""></p><p>  最坏情况下，时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>，最好情况下，只需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 时间</p><h2 id="2022-年-10-月-19-日">2022 年 10 月 19 日</h2><ul><li><a href="https://leetcode.cn/problems/number-of-students-unable-to-eat-lunch/">1700. 无法吃午餐的学生数量</a>｜难度：<span class="p green">简单</span></li></ul><h3 id="解题思路-3">解题思路</h3><p>  统计出两种学生的数量，然后扫描三明治数组，当有三明治无法被消耗时退出循环，或完成遍历后返回 0（所有人都有得吃）</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">count_students</span></span>(students: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;, sandwiches: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> count = [<span class="number">0</span>; <span class="number">2</span>];</span><br><span class="line">        count[<span class="number">0</span>] = students.iter().filter(|it| **it == <span class="number">0</span>).count();</span><br><span class="line">        count[<span class="number">1</span>] = students.iter().filter(|it| **it == <span class="number">1</span>).count();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i, it) <span class="keyword">in</span> sandwiches.iter().enumerate() {</span><br><span class="line">            <span class="keyword">let</span> it = *it <span class="keyword">as</span> <span class="built_in">usize</span>;</span><br><span class="line">            <span class="keyword">if</span> count[it] &gt; <span class="number">0</span> {</span><br><span class="line">                count[it] -= <span class="number">1</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> (students.len() - i) <span class="keyword">as</span> _;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="number">0</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-19.png" alt=""></p><p>  昨天忘记更新博客了 qwq</p><h2 id="2022-年-10-月-18-日">2022 年 10 月 18 日</h2><ul><li><a href="https://leetcode.cn/problems/numbers-at-most-n-given-digit-set/">902. 最大为 N 的数字组合</a>｜难度：<span class="p red">困难</span></li></ul><h3 id="解题思路-4">解题思路</h3><p>  样例 2 已经在疯狂暗示，在一定范围内这个问题只是简单的等比求和，所以我们只需要特殊处理最后非等比的一小段即可。用数组 <code>dp[i][j]</code> 表示无 n 限制下，长度为 <code>i</code>，最高位小于等于 <code>j</code> 时解的数量，可以将问题分解为「比 <code>n</code> 位数少的」和「与 <code>n</code> 位数相同的」求解：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">at_most_n_given_digit_set</span></span>(digits: <span class="built_in">Vec</span>&lt;<span class="built_in">String</span>&gt;, <span class="keyword">mut</span> n: <span class="built_in">i32</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="comment">// 转换为 HashSet&lt;i32&gt;</span></span><br><span class="line">        <span class="keyword">let</span> digits: HashSet&lt;_&gt; = digits.iter().map(|it| it.as_bytes()[<span class="number">0</span>] <span class="keyword">as</span> <span class="built_in">usize</span> - <span class="number">0x30</span>).collect();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// n 拆分成 Vec&lt;i32&gt;</span></span><br><span class="line">        <span class="keyword">let</span> split = {</span><br><span class="line">            <span class="keyword">let</span> <span class="keyword">mut</span> tmp = <span class="built_in">vec!</span>[];</span><br><span class="line">            <span class="keyword">while</span> n != <span class="number">0</span> {</span><br><span class="line">                tmp.insert(<span class="number">0</span>, n <span class="keyword">as</span> <span class="built_in">usize</span> % <span class="number">10</span>);</span><br><span class="line">                n /= <span class="number">10</span>;</span><br><span class="line">            }</span><br><span class="line">            tmp</span><br><span class="line">        };</span><br><span class="line">        <span class="keyword">let</span> length = split.len();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成数组 dp</span></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> dp = [[<span class="number">0</span>; <span class="number">10</span>]; <span class="number">11</span>];</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> ..= length {</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span> ..= <span class="number">9</span> {</span><br><span class="line">                <span class="keyword">if</span> i == <span class="number">1</span> {</span><br><span class="line">                    dp[i][j] = dp[i][j - <span class="number">1</span>] + <span class="keyword">if</span> digits.contains(&amp;j) { <span class="number">1</span> } <span class="keyword">else</span> { <span class="number">0</span> };</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    dp[i][j] = dp[i - <span class="number">1</span>][j] * digits.len();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 比 n 位数少的</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> &amp;dp[<span class="number">1</span> .. length] {</span><br><span class="line">            ans += row[<span class="number">9</span>];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 与 n 位数相同的</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. length {</span><br><span class="line">            <span class="keyword">let</span> x = split[i];</span><br><span class="line">            ans += dp[length - i][x.saturating_sub(<span class="number">1</span>)];</span><br><span class="line">            <span class="keyword">if</span> i == length - <span class="number">1</span> &amp;&amp; digits.contains(&amp;x) {</span><br><span class="line">                ans += <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> !digits.contains(&amp;x) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans <span class="keyword">as</span> _</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-18.png" alt=""></p><h2 id="2022-年-10-月-17-日">2022 年 10 月 17 日</h2><ul><li><a href="https://leetcode.cn/problems/fruit-into-baskets/">904. 水果成篮</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路-5">解题思路</h3><p>  滑动窗口的思想，用一个双向队列实现，循环中每轮先摘水果 push 到队尾，然后检查种类数是否满足要求，如果不满足就一直从队头 pop，直到满足要求为止，循环过程中记录一下滑动窗口的最大长度：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::cmp;</span><br><span class="line"><span class="keyword">use</span> std::collections::VecDeque;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Basket</span></span>(<span class="built_in">Vec</span>&lt;(<span class="built_in">i32</span>, <span class="built_in">usize</span>)&gt;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Basket {</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">new</span></span>() -&gt; <span class="keyword">Self</span> {</span><br><span class="line">        <span class="keyword">Self</span>(<span class="built_in">vec!</span>[])</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">types</span></span>(&amp;<span class="keyword">self</span>) -&gt; <span class="built_in">usize</span> {</span><br><span class="line">        <span class="keyword">self</span>.<span class="number">0</span>.len()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">add</span></span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>, key: <span class="built_in">i32</span>) {</span><br><span class="line">        <span class="keyword">for</span> pair <span class="keyword">in</span> &amp;<span class="keyword">mut</span> <span class="keyword">self</span>.<span class="number">0</span> {</span><br><span class="line">            <span class="keyword">if</span> pair.<span class="number">0</span> == key {</span><br><span class="line">                pair.<span class="number">1</span> += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">self</span>.<span class="number">0</span>.push((key, <span class="number">0</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">remove</span></span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>, key: <span class="built_in">i32</span>) {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> index = <span class="built_in">usize</span>::MAX;</span><br><span class="line">        <span class="keyword">for</span> (i, pair) <span class="keyword">in</span> <span class="keyword">self</span>.<span class="number">0</span>.iter_mut().enumerate() {</span><br><span class="line">            <span class="keyword">if</span> pair.<span class="number">0</span> == key {</span><br><span class="line">                <span class="keyword">if</span> pair.<span class="number">1</span> &gt; <span class="number">0</span> {</span><br><span class="line">                    pair.<span class="number">1</span> -= <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    index = i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">self</span>.<span class="number">0</span>.remove(index);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">total_fruit</span></span>(fruits: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> window = VecDeque::new();</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> basket = Basket::new();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> color <span class="keyword">in</span> fruits {</span><br><span class="line">            window.push_back(color);</span><br><span class="line">            basket.add(color);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> basket.types() &gt; <span class="number">2</span> {  <span class="comment">// 种类数 &gt; 2</span></span><br><span class="line">                basket.remove(window.pop_front().unwrap());</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            ans = cmp::max(ans, window.len());</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans <span class="keyword">as</span> _</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-17.png" alt=""></p><h2 id="2022-年-10-月-16-日">2022 年 10 月 16 日</h2><ul><li><a href="https://leetcode.cn/problems/possible-bipartition/">886. 可能的二分法</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路-6">解题思路</h3><p>  将所有人分为 3 个集合：<code>S</code>、<code>T</code> 和 <code>None</code>，初始所有人均位于 <code>None</code> 集中。考虑广度优先搜索，我们将一号节点加入待处理队列和 <code>S</code> 集，每次从待处理队列中取出一个节点，检查他与仇敌是否在同一个集合，是则直接返回 <code>false</code>，否则将仇敌加入对立集合和处理队列</p><p>  注意考虑节点之间没有任何直接或间接联系时的处理方式：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::{BTreeMap, VecDeque};</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">possible_bipartition</span></span>(n: <span class="built_in">i32</span>, dislikes: <span class="built_in">Vec</span>&lt;<span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;&gt;) -&gt; <span class="built_in">bool</span> {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> group = <span class="built_in">vec!</span>[<span class="number">0</span>; n <span class="keyword">as</span> _];  <span class="comment">// 1:S, -1:T, 0:None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> dislikes = {  <span class="comment">// 预处理 dislikes 为 map 类型</span></span><br><span class="line">            <span class="keyword">let</span> <span class="keyword">mut</span> tmp: BTreeMap&lt;<span class="built_in">usize</span>, <span class="built_in">Vec</span>&lt;<span class="built_in">usize</span>&gt;&gt; = BTreeMap::new();</span><br><span class="line">            <span class="keyword">for</span> pair <span class="keyword">in</span> dislikes {</span><br><span class="line">                <span class="keyword">let</span> <span class="keyword">mut</span> pair: <span class="built_in">Vec</span>&lt;_&gt; = pair.iter().map(|it| *it <span class="keyword">as</span> <span class="built_in">usize</span> - <span class="number">1</span>).collect();</span><br><span class="line">                <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="number">0</span> .. <span class="number">2</span> {</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">let</span> <span class="literal">Some</span>(list) = tmp.get_mut(&amp;pair[<span class="number">0</span>]) {</span><br><span class="line">                        list.push(pair[<span class="number">1</span>]);</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        tmp.insert(pair[<span class="number">0</span>], <span class="built_in">vec!</span>[pair[<span class="number">1</span>]]);</span><br><span class="line">                    }</span><br><span class="line">                    pair.reverse();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            tmp</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n <span class="keyword">as</span> _ {</span><br><span class="line">            <span class="keyword">if</span> group[i] != <span class="number">0</span> { <span class="keyword">continue</span>; }  <span class="comment">// 已经处理过的跳过</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> <span class="keyword">mut</span> task = VecDeque::from([i]);</span><br><span class="line">            group[i] = <span class="number">1</span>;  <span class="comment">// 任意加入一组</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> <span class="literal">Some</span>(now) = task.pop_front() {</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> <span class="literal">Some</span>(opponents) = dislikes.get(&amp;now) {</span><br><span class="line">                    <span class="keyword">for</span> op <span class="keyword">in</span> opponents {</span><br><span class="line">                        <span class="keyword">if</span> group[*op] == group[now] { <span class="keyword">return</span> <span class="literal">false</span>; }  <span class="comment">// 发现仇人和自己在一组</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> group[*op] == <span class="number">0</span> {</span><br><span class="line">                            group[*op] = -group[now];  <span class="comment">// 把仇人放到另一组</span></span><br><span class="line">                            task.push_back(*op);  <span class="comment">// 仇人加入处理队列</span></span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>建图的时候直接 <code>BTreeMap</code> 摆烂了，用前向星存图可以更快</li></ul><p><img src="AC-2022-10-16.png" alt=""></p><h2 id="2022-年-10-月-15-日">2022 年 10 月 15 日</h2><ul><li><a href="https://leetcode.cn/problems/build-an-array-with-stack-operations/">1441. 用栈操作构建数组</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路-7">解题思路</h3><p>  基本思想：</p><ul><li><p>每轮先插入一个 <code>Push</code>，然后如果不需要这个数，就再插入一个 <code>Pop</code></p></li><li><p>如果已经达到要求，则退出循环</p></li></ul><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">build_array</span></span>(target: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;, n: <span class="built_in">i32</span>) -&gt; <span class="built_in">Vec</span>&lt;<span class="built_in">String</span>&gt; {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> size = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> output = <span class="built_in">Vec</span>::new();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> ..= n {</span><br><span class="line">            output.push(<span class="built_in">String</span>::from(<span class="string">"Push"</span>));</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> target[size] != i {</span><br><span class="line">                output.push(<span class="built_in">String</span>::from(<span class="string">"Pop"</span>));</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                size += <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> size == target.len() {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        output</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-15.png" alt=""></p><h2 id="2022-年-10-月-14-日">2022 年 10 月 14 日</h2><ul><li><a href="https://leetcode.cn/problems/distinct-subsequences-ii/">940. 不同的子序列 II</a>｜难度：<span class="p red">困难</span></li></ul><h3 id="解题思路-8">解题思路</h3><h4 id="朴素算法">朴素算法</h4><p>  看到取模 <code>1e9 + 7</code> 直接一眼定真：动态规划，然后来想想状态如何建立🤔。不妨用状态数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">dp_{ch,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 表示以字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">ch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span></span></span></span> 结尾、长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">j + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的字序列数量，那么有状态转移方程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>c</mi><mi>h</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><mi>d</mi><msub><mi>p</mi><mrow><mo>∗</mo><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">dp_{ch, j} = \begin{cases}1 &amp; j = 0 \\\sum dp_{*, j - 1} &amp; j &gt; 0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>  当长度为 1 时，字序列就是字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">ch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span></span></span></span> 本身；否则可从长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的字序列通过末尾添加字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">ch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span></span></span></span> 得到，所以是上一列的求和。转移方程十分简单，但是更新数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span> 的顺序很重要，为了避免新添加的字符被重复计算，需要从后往前依次更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span>。例如对于字符串 <code>abca</code>，有：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># 初始化所有元素为 0（未考虑到的部分用「-」标记）</span><br><span class="line"> dp | 0 1 2 3</span><br><span class="line">----+---------</span><br><span class="line">'a' | - - - -</span><br><span class="line">'b' | - - - -</span><br><span class="line">'c' | - - - -</span><br><span class="line"></span><br><span class="line">1. 处理字符 'a' 后</span><br><span class="line"> dp | 0 1 2 3</span><br><span class="line">----+---------</span><br><span class="line">'a' | 1 - - -</span><br><span class="line">'b' | 0 - - -</span><br><span class="line">'c' | 0 - - -</span><br><span class="line"></span><br><span class="line">2. 处理字符 'c' 后</span><br><span class="line"> dp | 0 1 2 3</span><br><span class="line">----+---------</span><br><span class="line">'a' | 1 0 - - </span><br><span class="line">'b' | 0 0 - -</span><br><span class="line">'c' | 1 1 - -</span><br><span class="line"></span><br><span class="line">3. 处理字符 'b' 后</span><br><span class="line"> dp | 0 1 2 3</span><br><span class="line">----+---------</span><br><span class="line">'a' | 1 0 0 -</span><br><span class="line">'b' | 1 2 1 -</span><br><span class="line">'c' | 1 1 0 -</span><br><span class="line"></span><br><span class="line">4. 处理字符 'c' 后</span><br><span class="line"> dp | 0 1 2 3</span><br><span class="line">----+---------</span><br><span class="line">'a' | 1 0 0 0</span><br><span class="line">'b' | 1 2 1 0</span><br><span class="line">'c' | 1 3 3 1</span><br></pre></td></tr></tbody></table></figure><p>  最后把数组元素全部加起来（注意取模），就是最终的答案，下面是 rust 代码实现：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">distinct_subseq_ii</span></span>(s: <span class="built_in">String</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">const</span> MOD: <span class="built_in">usize</span> = <span class="number">1_000_000_007</span>;</span><br><span class="line">        <span class="keyword">const</span> LETTERS: <span class="built_in">usize</span> = <span class="number">26</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> n = s.len();</span><br><span class="line">        <span class="keyword">let</span> s: <span class="built_in">Vec</span>&lt;_&gt; = s.chars().collect();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> dp = <span class="built_in">vec!</span>[<span class="built_in">vec!</span>[<span class="number">0</span>; n]; LETTERS];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            <span class="keyword">let</span> ch = s[i] <span class="keyword">as</span> <span class="built_in">usize</span> - <span class="string">'a'</span> <span class="keyword">as</span> <span class="built_in">usize</span>;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> (<span class="number">0</span> ..= i).rev() {</span><br><span class="line">                dp[ch][j] = <span class="keyword">if</span> j == <span class="number">0</span> {</span><br><span class="line">                    <span class="number">1</span></span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="keyword">let</span> <span class="keyword">mut</span> sum = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span> .. LETTERS {</span><br><span class="line">                        sum = (sum + dp[k][j - <span class="number">1</span>]) % MOD;</span><br><span class="line">                    }</span><br><span class="line">                    sum</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span> .. LETTERS {</span><br><span class="line">                ans = (ans + dp[j][i]) % MOD;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans <span class="keyword">as</span> <span class="built_in">i32</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  朴素算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 为字符集大小，会超时。</p><h4 id="性能调优">性能调优</h4><p>  再一看，似乎没有必要每次都重新计算每列的总和，考虑引入一个数组 <code>sum</code>，动态地维护每次变化的量，可以将时间复杂度优化到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">distinct_subseq_ii</span></span>(s: <span class="built_in">String</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">const</span> MOD: <span class="built_in">usize</span> = <span class="number">1_000_000_007</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> n = s.len();</span><br><span class="line">        <span class="keyword">let</span> s: <span class="built_in">Vec</span>&lt;_&gt; = s.chars().collect();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> dp = <span class="built_in">vec!</span>[<span class="built_in">vec!</span>[<span class="number">0</span>; n]; <span class="number">26</span>];</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> sum = <span class="built_in">vec!</span>[<span class="number">0</span>; n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            <span class="keyword">let</span> ch = s[i] <span class="keyword">as</span> <span class="built_in">usize</span> - <span class="string">'a'</span> <span class="keyword">as</span> <span class="built_in">usize</span>;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> (<span class="number">0</span> ..= i).rev() {</span><br><span class="line">                <span class="keyword">let</span> new = <span class="keyword">if</span> j == <span class="number">0</span> {</span><br><span class="line">                    <span class="number">1</span></span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    sum[j - <span class="number">1</span>]</span><br><span class="line">                };</span><br><span class="line">                sum[j] = (sum[j] + MOD + new - dp[ch][j]) % MOD;</span><br><span class="line">                dp[ch][j] = new;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            ans = (ans + sum[i]) % MOD;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans <span class="keyword">as</span> <span class="built_in">i32</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  能 AC 了，但总感觉还是不够优雅。</p><h4 id="极致优化">极致优化</h4><p>  这一次尝试再将数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span> 横向压缩，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>c</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">dp_{ch}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示当前已经考虑的部分，以字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">ch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span></span></span></span> 结尾的子序列数量，每当处理一个字符 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">ch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span></span></span></span>，我们就把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>c</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">dp_{ch}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 更新为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mi>d</mi><mi>p</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum dp + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。还是以字符串 <code>acbc</code> 举例：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 初始化为全 0</span><br><span class="line">dp = [0, 0, 0]</span><br><span class="line"></span><br><span class="line">1. 处理字符 'a' 后</span><br><span class="line">dp = [1, 0, 0]</span><br><span class="line"></span><br><span class="line">2. 处理字符 'c' 后</span><br><span class="line">dp = [1, 0, 2]</span><br><span class="line"></span><br><span class="line">3. 处理字符 'b' 后</span><br><span class="line">dp = [1, 4, 2]</span><br><span class="line"></span><br><span class="line">4. 处理字符 'c' 后</span><br><span class="line">dp = [1, 4, 8]</span><br></pre></td></tr></tbody></table></figure><p>  在遇到第二个字符 <code>c</code> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span> 中的三个元素分布代表 <code>*a</code>、<code>*b</code>、<code>*c</code> 的数量，将字符 <code>c</code> 加在各字序列末尾，得到 <code>*ac</code>、<code>*bc</code>、<code>*cc</code>，又由于它们 <code>*</code> 部分各不相同，所以不会产生重复，最后再加上一个字符 <code>c</code> 本身，就是新的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">dp_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值。据此编写代码：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">distinct_subseq_ii</span></span>(s: <span class="built_in">String</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">const</span> MOD: <span class="built_in">usize</span> = <span class="number">1_000_000_007</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> dp = <span class="built_in">vec!</span>[<span class="number">0</span>; <span class="number">26</span>];</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s.chars() {</span><br><span class="line">            <span class="keyword">let</span> ch = ch <span class="keyword">as</span> <span class="built_in">usize</span> - <span class="string">'a'</span> <span class="keyword">as</span> <span class="built_in">usize</span>;</span><br><span class="line">            <span class="keyword">let</span> old = dp[ch];</span><br><span class="line">            dp[ch] = sum + <span class="number">1</span>;</span><br><span class="line">            sum = (sum + MOD - old + dp[ch]) % MOD;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        sum <span class="keyword">as</span> <span class="built_in">i32</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  最终时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></p><p><img src="AC-2022-10-14.png" alt=""></p><h2 id="2022-年-10-月-13-日">2022 年 10 月 13 日</h2><ul><li><a href="https://leetcode.cn/problems/max-chunks-to-make-sorted/">769. 最多能完成排序的块</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路-9">解题思路</h3><h4 id="朴素算法-2">朴素算法</h4><p>  对于 <code>arr[i] = k</code>，若要满足题目要求，则至少区间 <code>[min(i, k), max(i, k)]</code> 会落在同一个分区中。那么只需遍历 <code>arr</code>，对每一个区间做并查集，统计最终的集合数量即可：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::cmp::{max, min};</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">max_chunks_to_sorted</span></span>(arr: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> n = arr.len();</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> dsu: <span class="built_in">Vec</span>&lt;_&gt; = (<span class="number">0</span> .. n).collect();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            <span class="keyword">let</span> (l, r) = (min(i, arr[i] <span class="keyword">as</span> <span class="built_in">usize</span>), max(i, arr[i] <span class="keyword">as</span> <span class="built_in">usize</span>));</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> l .. r {</span><br><span class="line">                dsu[j] = r;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            <span class="keyword">if</span> dsu[i] == i { ans += <span class="number">1</span>; }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="性能调优-2">性能调优</h4><p>  写完之后打眼一看，似乎并没有用到并查集「查」的功能；又由于 <code>arr</code> 中的元素有且仅有 <code>[1, n)</code> ，一个萝卜一个坑，错位的元素必然会组成循环，所以我们只需要统计 <code>k &gt; i</code> 的情况。那么可以将代码优化成下面这样：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::cmp::max;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">max_chunks_to_sorted</span></span>(arr: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> (n, <span class="keyword">mut</span> ans) = (arr.len(), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> sign = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. n {</span><br><span class="line">            sign = max(sign, arr[i] <span class="keyword">as</span> <span class="built_in">usize</span>);  <span class="comment">// 标记 [i, sign) 的元素皆为非根</span></span><br><span class="line">            <span class="keyword">if</span> sign == i { ans += <span class="number">1</span>; }  <span class="comment">// 并查集之后作为根节点</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-13.png" alt=""></p><p>  最终时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>（以及不是很理解为什么题目数据范围是 <code>n &lt;= 10</code></p><h2 id="2022-年-10-月-12-日">2022 年 10 月 12 日</h2><ul><li><p><a href="http://localhost:4000/posts/935157128/">817. 链表组件</a>｜难度：<span class="p blue">中等</span></p></li><li><p>不知道为什么会是中等题，就算不依赖标准库也完全可以排序 + 二分，算不上十分麻烦</p></li></ul><h3 id="解题思路-10">解题思路</h3><ul><li><p>将 <code>nums</code> 处理成 <code>BTreeSet&lt;i32&gt;</code> 类型，方便快速查找</p></li><li><p>遍历链表，找出属于 <code>nums</code> 的连续的段即可</p></li></ul><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::BTreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">num_components</span></span>(head: <span class="built_in">Option</span>&lt;<span class="built_in">Box</span>&lt;ListNode&gt;&gt;, nums: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="comment">// 参数预处理</span></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> head = &amp;head;</span><br><span class="line">        <span class="keyword">let</span> nums: BTreeSet&lt;_&gt; = nums.iter().collect();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> last = <span class="literal">false</span>;  <span class="comment">// 记录上一个节点值是否属于 nums</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> <span class="literal">Some</span>(node) = head {</span><br><span class="line">            <span class="keyword">let</span> now = nums.contains(&amp;node.val);</span><br><span class="line">            <span class="keyword">if</span> now &amp;&amp; !last {</span><br><span class="line">                ans += <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            last = now;</span><br><span class="line">            head = &amp;node.next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> last { ans += <span class="number">1</span>; }  <span class="comment">// 处理边界</span></span><br><span class="line"></span><br><span class="line">        ans</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-12.png" alt=""></p><p>  时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><h2 id="2022-年-10-月-11-日">2022 年 10 月 11 日</h2><ul><li><a href="https://leetcode.cn/problems/check-if-one-string-swap-can-make-strings-equal/">1790. 仅执行一次字符串交换能否使两个字符串相等</a>｜难度：<span class="p green">简单</span></li></ul><h3 id="解题思路-11">解题思路</h3><p>  <s>三个 if，让 OJ 为我通过 18 个测试点：</s></p><ul><li><p>若两字符串相等，直接返回 <code>true</code></p></li><li><p>遍历寻找不同之处，记录到数组 <code>diff</code> 中，<code>diff</code> 的长度应恰好为 2</p></li><li><p>交换之后应相等</p></li></ul><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">are_almost_equal</span></span>(s1: <span class="built_in">String</span>, s2: <span class="built_in">String</span>) -&gt; <span class="built_in">bool</span> {</span><br><span class="line">        <span class="keyword">if</span> s1 == s2 { <span class="keyword">return</span> <span class="literal">true</span>; }  <span class="comment">// 若相等直接返回</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> a1: <span class="built_in">Vec</span>&lt;_&gt; = s1.chars().collect();</span><br><span class="line">        <span class="keyword">let</span> a2: <span class="built_in">Vec</span>&lt;_&gt; = s2.chars().collect();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> diff = <span class="built_in">Vec</span>::new();</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> .. a1.len() {</span><br><span class="line">            <span class="keyword">if</span> a1[i] != a2[i] { diff.push(i); }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> diff.len() != <span class="number">2</span> { <span class="keyword">return</span> <span class="literal">false</span>; }  <span class="comment">// 有且仅有两处不同</span></span><br><span class="line"></span><br><span class="line">        a1[diff[<span class="number">0</span>]] == a2[diff[<span class="number">1</span>]] &amp;&amp; a2[diff[<span class="number">0</span>]] == a1[diff[<span class="number">1</span>]]  <span class="comment">// 交叉相等</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-11.png" alt=""></p><p>  时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><h2 id="2022-年-10-月-10-日">2022 年 10 月 10 日</h2><ul><li><a href="https://leetcode.cn/problems/minimum-swaps-to-make-sequences-increasing/">801. 使序列递增的最小交换次数</a>｜难度：<span class="p red">困难</span></li></ul><h3 id="解题思路-12">解题思路</h3><p>  拿到题目先贪它一把，从数组开头往后捋，一旦遇到违反递增规则的数就交换，记录交换的次数。同时不难注意到，交换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 次和交换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">N - k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 次是一样的（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 为数组长度），那么只需要在最后返回最小的那个……</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::cmp::min;</span><br><span class="line"><span class="keyword">use</span> std::mem::swap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">min_swap</span></span>(<span class="keyword">mut</span> nums1: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;, <span class="keyword">mut</span> nums2: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> n = nums1.len();</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans: <span class="built_in">usize</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> .. n {</span><br><span class="line">            <span class="keyword">if</span> nums1[i - <span class="number">1</span>] &gt;= nums1[i] || nums2[i - <span class="number">1</span>] &gt;= nums2[i] {</span><br><span class="line">                swap(&amp;<span class="keyword">mut</span> nums1[i], &amp;<span class="keyword">mut</span> nums2[i]);</span><br><span class="line">                ans += <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        min(ans, n - ans) <span class="keyword">as</span> <span class="built_in">i32</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  然后 …… 意料之中的 WA 了，来看看导致错误的这组输入：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [0 4 4 5 9]</span><br><span class="line">nums2 = [0 1 6 8 10]</span><br></pre></td></tr></tbody></table></figure><p>  按照我们的逻辑，将在 index 为 2 和 3 的时候对数组进行翻转，此时 <code>ans</code> 等于 2，返回的 <code>min(ans, n - ans)</code> 依然为 2 …… 问题出现了，翻转所有其它元素并不比翻转 <code>(4, 6)</code>、<code>(5, 8)</code> 两组的「开销」更低</p><p>  注意到，在上述情况中，「翻转所有其它元素」其实并没有必要包含 <code>(0, 0)</code> 和 <code>(9, 10)</code> 这两对，因为它们无论如何翻转，都不会影响最终「严格递增」这一要求。所以不妨考虑首先将 <code>nums1</code> 和 <code>nums2</code> 进行分段，如果 <code>max(nums1[i - 1], nums2[i - 1]) &lt; min(nums1[i], nums2[i])</code>，则进行一次切分。处理后的两个数组:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [0 | 4 4 5 | 9]</span><br><span class="line">nums2 = [0 | 1 6 8 | 10]</span><br></pre></td></tr></tbody></table></figure><p>  切分出来的三段相互独立、互不影响，只需要对每一段都跑一次上面的贪心方法，然后将最终结果累加起来即可：</p><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::cmp::{max, min};</span><br><span class="line"><span class="keyword">use</span> std::mem::swap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">min_swap</span></span>(<span class="keyword">mut</span> nums1: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;, <span class="keyword">mut</span> nums2: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="comment">// 在数组末尾制造一次切分，简化后续代码</span></span><br><span class="line">        nums1.push(<span class="built_in">i32</span>::MAX); nums2.push(<span class="built_in">i32</span>::MAX);</span><br><span class="line">        <span class="keyword">let</span> n = nums1.len();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> ans: <span class="built_in">usize</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> index = <span class="number">0</span>;  <span class="comment">// 区间左端点</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> .. n {</span><br><span class="line">            <span class="keyword">if</span> max(nums1[i - <span class="number">1</span>], nums2[i - <span class="number">1</span>]) &lt; min(nums1[i], nums2[i]) {</span><br><span class="line">                <span class="keyword">let</span> <span class="keyword">mut</span> result = <span class="number">0</span>;  <span class="comment">// 当前区间的开销</span></span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> index .. i - <span class="number">1</span> {  <span class="comment">// 对区间做贪心求解</span></span><br><span class="line">                    <span class="keyword">if</span> nums1[j] &gt;= nums1[j + <span class="number">1</span>] || nums2[j] &gt;= nums2[j + <span class="number">1</span>] {</span><br><span class="line">                        swap(&amp;<span class="keyword">mut</span> nums1[j + <span class="number">1</span>], &amp;<span class="keyword">mut</span> nums2[j + <span class="number">1</span>]);</span><br><span class="line">                        result += <span class="number">1</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                ans += min(result, i - index - result);  <span class="comment">// 结果累加到总开销</span></span><br><span class="line">                index = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ans <span class="keyword">as</span> <span class="built_in">i32</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="AC-2022-10-10.png" alt=""></p><p>  最终只对 <code>nums1</code> 和 <code>nums2</code> 做了两次遍历，时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><h2 id="2022-年-10-月-09-日">2022 年 10 月 09 日</h2><ul><li><a href="https://leetcode.cn/problems/score-of-parentheses/">856. 括号的分数</a>｜难度：<span class="p blue">中等</span></li></ul><h3 id="解题思路-13">解题思路</h3><ul><li><p>维护一个栈，初始元素为 0</p></li><li><p>当遇到 <code>(</code> 时，将 <code>0</code> 压栈</p></li><li><p>遇到 <code>)</code> 时，将栈顶元素 <code>top</code> 弹出，如果为 0，则把此时的栈顶加 1；否则，加上 <code>top * 2</code></p></li></ul><figure class="highlight rust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> Solution {</span><br><span class="line">    <span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">score_of_parentheses</span></span>(s: <span class="built_in">String</span>) -&gt; <span class="built_in">i32</span> {</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut</span> stack = <span class="built_in">vec!</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s.chars() {</span><br><span class="line">            <span class="keyword">match</span> ch {</span><br><span class="line">                <span class="string">'('</span> =&gt; stack.push(<span class="number">0</span>),</span><br><span class="line">                <span class="string">')'</span> =&gt; {</span><br><span class="line">                    <span class="keyword">let</span> top = stack.pop().unwrap();</span><br><span class="line">                    <span class="keyword">let</span> newtop = <span class="keyword">if</span> top == <span class="number">0</span> {</span><br><span class="line">                        stack.pop().unwrap() + <span class="number">1</span></span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        stack.pop().unwrap() + top * <span class="number">2</span></span><br><span class="line">                    };</span><br><span class="line">                    stack.push(newtop);</span><br><span class="line">                }</span><br><span class="line">                _ =&gt; <span class="built_in">panic!</span>()</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        stack[<span class="number">0</span>]</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  解释：<code>top</code> 为 0 时，意味着遇到了 <code>()</code>，计算结果为 1；不为 0 时，代表括号内包含其它内容，那么将其计算结果乘二后加到父级括号上。最终算法时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>：</p><p><img src="AC-2022-10-09.png" alt=""></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搬运｜理解 Linux 的信号（signal）机制</title>
      <link href="/posts/471800621/"/>
      <url>/posts/471800621/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><div class="note info simple"><p>文章转自：<a href="http://gityuan.com/2015/12/20/signal/">Linux 信号（signal）机制 - Gityuan博客</a>，排版经过重新整理。</p></div><blockquote><p>信号（signal）是一种软中断，信号机制是进程间通信的一种方式，采用异步通信方式</p></blockquote><h2 id="信号类型">信号类型</h2><p>  Linux 系统共定义了 64 种信号，分为两大类：可靠信号与不可靠信号，前 32 种信号为不可靠信号，后 32 种为可靠信号。</p><h3 id="概念">概念</h3><p>  不可靠信号： 也称为非实时信号，不支持排队，信号可能会丢失, 比如发送多次相同的信号, 进程只能收到一次. 信号值取值区间为 1 ~ 31；</p><p>  可靠信号： 也称为实时信号，支持排队, 信号不会丢失, 发多少次, 就可以收到多少次. 信号值取值区间为 32~64</p><h3 id="信号表">信号表</h3><p>  在终端，可通过 <code>kill -l</code> 查看所有的 signal 信号</p><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">名称</th><th style="text-align:left">解释</th><th style="text-align:left">默认动作</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><code>SIGHUP</code></td><td style="text-align:left">挂起</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><code>SIGINT</code></td><td style="text-align:left">中断</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><code>SIGQUIT</code></td><td style="text-align:left">退出</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><code>SIGILL</code></td><td style="text-align:left">非法指令</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><code>SIGTRAP</code></td><td style="text-align:left">断点或陷阱指令</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><code>SIGABRT</code></td><td style="text-align:left">abort 发出的信号</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><code>SIGBUS</code></td><td style="text-align:left">非法内存访问</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><code>SIGFPE</code></td><td style="text-align:left">浮点异常</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><code>SIGKILL</code></td><td style="text-align:left">kill 信号</td><td style="text-align:left">不能被忽略、处理和阻塞</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><code>SIGUSR1</code></td><td style="text-align:left">用户信号 1</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><code>SIGSEGV</code></td><td style="text-align:left">无效内存访问</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><code>SIGUSR2</code></td><td style="text-align:left">用户信号 2</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><code>SIGPIPE</code></td><td style="text-align:left">管道破损，没有读端的管道写数据</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><code>SIGALRM</code></td><td style="text-align:left">alarm 发出的信号</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><code>SIGTERM</code></td><td style="text-align:left">终止信号</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><code>SIGSTKFLT</code></td><td style="text-align:left">栈溢出</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><code>SIGCHLD</code></td><td style="text-align:left">子进程退出</td><td style="text-align:left">默认忽略</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><code>SIGCONT</code></td><td style="text-align:left">进程继续</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><code>SIGSTOP</code></td><td style="text-align:left">进程停止</td><td style="text-align:left">不能被忽略、处理和阻塞</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><code>SIGTSTP</code></td><td style="text-align:left">进程停止</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><code>SIGTTIN</code></td><td style="text-align:left">进程停止，后台进程从终端读数据时</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><code>SIGTTOU</code></td><td style="text-align:left">进程停止，后台进程想终端写数据时</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><code>SIGURG</code></td><td style="text-align:left">I/O 有紧急数据到达当前进程</td><td style="text-align:left">默认忽略</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><code>SIGXCPU</code></td><td style="text-align:left">进程的 CPU 时间片到期</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><code>SIGXFSZ</code></td><td style="text-align:left">文件大小的超出上限</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><code>SIGVTALRM</code></td><td style="text-align:left">虚拟时钟超时</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">27</td><td style="text-align:center"><code>SIGPROF</code></td><td style="text-align:left">profile 时钟超时</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">28</td><td style="text-align:center"><code>SIGWINCH</code></td><td style="text-align:left">窗口大小改变</td><td style="text-align:left">默认忽略</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center"><code>SIGIO</code></td><td style="text-align:left">I/O 相关</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">30</td><td style="text-align:center"><code>SIGPWR</code></td><td style="text-align:left">关机</td><td style="text-align:left">默认忽略</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center"><code>SIGSYS</code></td><td style="text-align:left">系统调用异常</td><td style="text-align:left"></td></tr></tbody></table><p>  对于 signal 信号，绝大部分的默认处理都是终止进程或停止进程，或 dump 内核映像转储。上述的 31 个信号为非实时信号，其他的信号 32-64 都是实时信号。</p><h2 id="信号产生">信号产生</h2><p>  信号来源分为硬件类和软件类：</p><h3 id="硬件方式">硬件方式</h3><ul><li><p>用户输入：比如在终端上按下组合键 <kbd>Ctrl</kbd>+<kbd>C</kbd>，产生 <code>SIGINT</code> 信号；</p></li><li><p>硬件异常：CPU 检测到内存非法访问等异常，通知内核生成相应信号，并发送给发生事件的进程；</p></li></ul><h3 id="软件方式">软件方式</h3><ul><li><p>通过系统调用，发送 signal 信号：<code>kill()</code>，<code>raise()</code>，<code>sigqueue()</code>，<code>alarm()</code>，<code>setitimer()</code>，<code>abort()</code></p></li><li><p>Kernel，使用 <code>kill_proc_info()</code> 等</p></li><li><p>Native，使用 <code>kill()</code> 或者 <code>raise()</code> 等</p></li><li><p>Java，使用 <code>Procees.sendSignal()</code> 等</p></li></ul><h2 id="信号注册和注销">信号注册和注销</h2><h3 id="注册">注册</h3><p>  在进程 <code>task_struct</code> 结构体中有一个未决信号的成员变量 <code>struct sigpending pending</code>。每个信号在进程中注册都会把信号值加入到进程的未决信号集。</p><ul><li><p>非实时信号发送给进程时，如果该信息已经在进程中注册过，不会再次注册，故信号会丢失；</p></li><li><p>实时信号发送给进程时，不管该信号是否在进程中注册过，都会再次注册。故信号不会丢失；</p></li></ul><h3 id="注销">注销</h3><ul><li><p>非实时信号：不可重复注册，最多只有一个 sigqueue 结构；当该结构被释放后，把该信号从进程未决信号集中删除，则信号注销完毕；</p></li><li><p>实时信号：可重复注册，可能存在多个 sigqueue 结构；当该信号的所有 sigqueue 处理完毕后，把该信号从进程未决信号集中删除，则信号注销完毕；</p></li></ul><h2 id="信号处理">信号处理</h2><p>  内核处理进程收到的 signal 是在当前进程的上下文，故进程必须是 Running 状态。当进程唤醒或者调度后获取 CPU，则会从内核态转到用户态时检测是否有 signal 等待处理，处理完，进程会把相应的未决信号从链表中去掉。</p><h3 id="处理时机">处理时机</h3><p>  signal 信号处理时机： 内核态 -&gt; signal 信号处理 -&gt; 用户态：</p><ul><li><p>在内核态，signal 信号不起作用；</p></li><li><p>在用户态，signal 所有未被屏蔽的信号都处理完毕；</p></li><li><p>当屏蔽信号，取消屏蔽时，会在下一次内核转用户态的过程中执行；</p></li></ul><h3 id="处理方式">处理方式</h3><p>  进程对信号的处理方式有 3 种：</p><ul><li><p>默认：接收到信号后按默认的行为处理该信号。 这是多数应用采取的处理方式</p></li><li><p>自定义：用自定义的信号处理函数来执行特定的动作</p></li><li><p>忽略：接收到信号后不做任何反应。</p></li></ul><h3 id="信号安装">信号安装</h3><p>  进程处理某个信号前，需要先在进程中安装此信号。安装过程主要是建立信号值和进程对相应信息值的动作。</p><p>  信号安装函数：</p><ul><li><code>signal()</code>：不支持信号传递信息，主要用于非实时信号安装；</li><li><code>sigaction()</code>：支持信号传递信息，可用于所有信号安装；</li></ul><p>  其中 sigaction 结构体：</p><ul><li><p><code>sa_handler</code>：信号处理函数</p></li><li><p><code>sa_mask</code>：指定信号处理程序执行过程中需要阻塞的信号；</p></li><li><p><code>sa_flags</code>：标示位</p><ul><li><p><code>SA_RESTART</code>：使被信号打断的 syscall 重新发起。</p></li><li><p><code>SA_NOCLDSTOP</code>：使父进程在它的子进程暂停或继续运行时不会收到 <code>SIGCHLD</code> 信号。</p></li><li><p><code>SA_NOCLDWAIT</code>：使父进程在它的子进程退出时不会收到 <code>SIGCHLD</code> 信号，这时子进程如果退出也不会成为僵 尸进程。</p></li><li><p><code>SA_NODEFER</code>：使对信号的屏蔽无效，即在信号处理函数执行期间仍能发出这个信号。</p></li><li><p><code>SA_RESETHAND</code>：信号处理之后重新设置为默认的处理方式。</p></li><li><p><code>SA_SIGINFO</code>：使用 <code>sa_sigaction</code> 成员而不是 <code>sa_handler</code> 作为信号处理函数。</p></li></ul></li></ul><p>  函数原型：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sigaction</span><span class="params">(<span class="keyword">int</span> signum, <span class="keyword">const</span> struct sigaction *<span class="keyword">restrict</span> act, struct sigaction *<span class="keyword">restrict</span> oldact)</span></span>;</span><br></pre></td></tr></tbody></table></figure><ul><li><p>signum：要操作的 signal 信号。</p></li><li><p>act：设置对 signal 信号的新处理方式。</p></li><li><p>oldact：保存原来对信号的处理方式。</p></li><li><p>返回值：<code>0</code> 表示成功，<code>-1</code> 表示有错误发生。</p></li></ul><h3 id="信号发送">信号发送</h3><ul><li><p><code>kill()</code>：用于向进程或进程组发送信号；</p></li><li><p><code>sigqueue()</code>：只能向一个进程发送信号，不能像进程组发送信号；主要针对实时信号提出，与 <code>sigaction()</code> 组合使用，当然也支持非实时信号的发送；</p></li><li><p><code>alarm()</code>：用于调用进程指定时间后发出 <code>SIGALRM</code> 信号；</p></li><li><p><code>setitimer()</code>：设置定时器，计时达到后给进程发送 <code>SIGALRM</code> 信号，功能比 alarm 更强大；</p></li><li><p><code>abort()</code>：向进程发送 <code>SIGABRT</code> 信号，默认进程会异常退出。</p></li><li><p><code>raise()</code>：用于向进程自身发送信号；</p></li></ul><h3 id="信号相关函数">信号相关函数</h3><p>  信号集操作函数：</p><ul><li><p><code>sigemptyset(sigset_t *set)</code>：信号集全部清 0；</p></li><li><p><code>sigfillset(sigset_t *set)</code>： 信号集全部置 1，则信号集包含 linux 支持的 64 种信号；</p></li><li><p><code>sigaddset(sigset_t *set, int signum)</code>：向信号集中加入 signum 信号；</p></li><li><p><code>sigdelset(sigset_t *set, int signum)</code>：向信号集中删除 signum 信号；</p></li><li><p><code>sigismember(const sigset_t *set, int signum)</code>：判定信号 signum 是否存在信号集中。</p></li></ul><p>  信号阻塞函数：</p><ul><li><p><code>sigprocmask(int how, const sigset_t *set, sigset_t *oldset))</code>； 不同 how 参数，实现不同功能</p><ul><li><p><code>SIG_BLOCK</code>：将 set 指向信号集中的信号，添加到进程阻塞信号集；</p></li><li><p><code>SIG_UNBLOCK</code>：将 set 指向信号集中的信号，从进程阻塞信号集删除；</p></li><li><p><code>SIG_SETMASK</code>：将 set 指向信号集中的信号，设置成进程阻塞信号集；</p></li><li><p><code>sigpending(sigset_t *set))</code>：获取已发送到进程，却被阻塞的所有信号；</p></li><li><p><code>sigsuspend(const sigset_t *mask))</code>：用 mask 代替进程的原有掩码，并暂停进程执行，直到收到信号再恢复原有掩码并继续执行进程。</p></li></ul></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> OS Lab </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android 应用启动流程分析（持续更新）</title>
      <link href="/posts/1577788855/"/>
      <url>/posts/1577788855/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="Zygote-机制与启动过程">Zygote 机制与启动过程</h2><h3 id="什么是-Zygote">什么是 Zygote</h3><p>  Zygote 直译过来是「受精卵」，放在计算机领域也可以称之为「孵化器」。Android 中的系统服务和几乎所有的应用进程都是由这个 Zygote 进程 <a href="https://man7.org/linux/man-pages/man2/fork.2.html">fork</a> 而来，相较于完全冷启动，这种方式节约了 ART 虚拟机初始化和部分资源加载的时间，大大提升了应用的启动速度</p><p>  值得一提的是，正因系统服务和应用进程都来自 Zygote 的副本，那么我们只要注入 zygote 进程，便同时拥有了注入它们的能力，Xposed 框架正是依赖这一原理修改系统服务和应用进程的</p><h3 id="Zygote-的启动过程">Zygote 的启动过程</h3><p>  系统启动，内核拉起 init 进程，解析 init.rc 脚本，文件中采用 import 语句来引入 zygote 启动脚本，根据 <code>ro.zygote</code> 属性的值，选择不同的启动脚本：</p><figure class="highlight bash"><figcaption><span>/system/etc/init/hw/init.rc</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright (C) 2012 The Android Open Source Project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># IMPORTANT: Do not create world writable files or directories.</span></span><br><span class="line"><span class="comment"># This is a common source of Android security bugs.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">import /system/etc/init/hw/init.<span class="variable">${ro.zygote}</span>.rc</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  现在市面上的手机大多都搭载 64 位 CPU，被各大厂商使用最为广泛的是 64 位为主，32 位为辅的 Zygote 模式，所以我们来看看 <code>init.zygote64_32.rc</code>：</p><figure class="highlight bash"><figcaption><span>/system/etc/init/hw/init.zygote64_32.rc</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server --socket-name=zygote</span><br><span class="line">    class main</span><br><span class="line">    priority -20</span><br><span class="line">    user root</span><br><span class="line">    group root readproc reserved_disk</span><br><span class="line">    socket zygote stream 660 root system</span><br><span class="line">    socket usap_pool_primary stream 660 root system</span><br><span class="line">    onrestart exec_background - system system -- /system/bin/vdc volume abort_fuse</span><br><span class="line">    onrestart write /sys/power/state on</span><br><span class="line">    onrestart restart audioserver</span><br><span class="line">    onrestart restart cameraserver</span><br><span class="line">    onrestart restart media</span><br><span class="line">    onrestart restart netd</span><br><span class="line">    onrestart restart wificond</span><br><span class="line">    task_profiles ProcessCapacityHigh MaxPerformance</span><br><span class="line">    critical window=<span class="variable">${zygote.critical_window.minute:-off}</span> target=zygote-fatal</span><br><span class="line"></span><br><span class="line">service zygote_secondary /system/bin/app_process32 -Xzygote /system/bin --zygote --socket-name=zygote_secondary --enable-lazy-preload</span><br><span class="line">    class main</span><br><span class="line">    priority -20</span><br><span class="line">    user root</span><br><span class="line">    group root readproc reserved_disk</span><br><span class="line">    socket zygote_secondary stream 660 root system</span><br><span class="line">    socket usap_pool_secondary stream 660 root system</span><br><span class="line">    onrestart restart zygote</span><br><span class="line">    task_profiles ProcessCapacityHigh MaxPerformance</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>这部分涉及的 init.rc 语法</span></div>    <div class="hide-content"><p>  service 表示服务，其命令格式为：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service <span class="tag">&lt;<span class="name">name</span>&gt;</span> <span class="tag">&lt;<span class="name">pathname</span>&gt;</span> [ <span class="tag">&lt;<span class="name">argument</span>&gt;</span> ]*</span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span></span><br><span class="line">    ...</span><br></pre></td></tr></tbody></table></figure><ul><li><p>name：服务名</p></li><li><p>pathname：可执行文件路径</p></li><li><p>argument：启动参数</p></li><li><p>option：对服务的约束选项，此处涉及的有：</p></li></ul><blockquote><ul><li><p><code>class &lt;name&gt;</code>：为该服务指定一个类别，同一类别的服务必须同时启动和停止</p></li><li><p><code>priority &lt;priority&gt;</code>：调度服务进程的优先级，范围 -20 到 19，数字越小优先级越高</p></li><li><p><code>user &lt;username&gt;</code>：执行此服务前切换到指定用户</p></li><li><p><code>group &lt;groupname&gt; [ &lt;groupname&gt; ]*</code>：执行此服务之前切指定换到指定组</p></li><li><p><code>socket &lt;name&gt; &lt;type&gt; &lt;perm&gt; [ &lt;user&gt; [ &lt;group&gt; [ &lt;seclabel&gt; ] ] ]</code>：</p></li></ul><p>  服务启动时，同步创建一个名为 <code>/dev/socket/&lt;name&gt;</code> 的 Unix 域套接字，并将其文件描述符以环境变量 <code>ANDROID_SOCKET_&lt;name&gt;=&lt;fd_int&gt;</code> 的方式传递给启动的进程</p><ul><li><p><code>onrestart</code>：服务重新启动时执行的命令</p></li><li><p><code>task_profiles &lt;profile&gt; [ &lt;profile&gt; ]*</code>：略</p></li><li><p><code>critical [window=&lt;fatal_crash_window_mins&gt;] [target=&lt;fatal_reboot_target&gt;]</code>：</p></li></ul><p>  表示这是一项关键服务，如果它在 <code>fatal_crash_window_mins</code> 内或启动完成前退出超过四次，则会重启到 <code>fatal_reboot_target</code>，默认为 <code>bootloaer</code></p></blockquote><p>  完整的 android init 文档：<a href="https://android.googlesource.com/platform/system/core/+/master/init/README.md">init/README.md</a></p></div></div><p>  执行了 <code>/system/bin/app_process64</code>，并且传入几个参数，注意这里的 <code>--socket-name</code> 参数，并不是给 Zygote 自己监听用的，而是后续传递给 system server 的时候用到的。我们这里先对应找到 app_process 源码文件 <code>app_main.cpp</code> 中的 main 函数</p><p>  在这里，首先做了参数处理：<code>--</code> 或「第一个非 <code>-</code> 开头参数」之前的所有参数都将被传递给虚拟机，之后的第一个参数为「父目录」，在当前版本的 Android 中并未使用，再之后，可以提供一些特殊参数：</p><ul><li><p><code>--zygote</code>：以 Zygote 模式启动</p></li><li><p><code>--start-system-server</code>：启动 system server</p></li><li><p><code>--application</code>：启动应用（非 fork 方式，用于 <a href="https://developer.android.com/ndk/guides/wrap-script">wrap.sh</a>）</p></li><li><p><code>--nice-name</code>：进程名，后续将调用 <code>setArgV0</code></p></li></ul><p>  若为 Zygote 模式，所有剩余参数都将传递到 <code>ZygoteInit#main(String[])</code> 中，否则先读取下一个参数作为主类名，然后再将剩余参数传递到这个类的 main 方法：</p><figure class="highlight c++"><figcaption><span>frameworks/base/cmds/app_process/app_main.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppRuntime</span> :</span> <span class="keyword">public</span> AndroidRuntime</span><br><span class="line">{</span><br><span class="line">    ...</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* <span class="keyword">const</span> argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="function">AppRuntime <span class="title">runtime</span><span class="params">(argv[<span class="number">0</span>], computeArgBlockSize(argc, argv))</span></span>;</span><br><span class="line">    <span class="comment">// Process command line arguments</span></span><br><span class="line">    <span class="comment">// ignore argv[0]</span></span><br><span class="line">    argc--;</span><br><span class="line">    argv++;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; argc; i++) {  <span class="comment">// 处理虚拟机参数</span></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 忽略不以 '-' 开头的命令</span></span><br><span class="line">        <span class="keyword">if</span> (argv[i][<span class="number">0</span>] != <span class="string">'-'</span>) {  </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 忽略 '--'</span></span><br><span class="line">        <span class="keyword">if</span> (argv[i][<span class="number">1</span>] == <span class="string">'-'</span> &amp;&amp; argv[i][<span class="number">2</span>] == <span class="number">0</span>) {</span><br><span class="line">            ++i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        runtime.<span class="built_in">addOption</span>(<span class="built_in">strdup</span>(argv[i]));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parse runtime arguments.  Stop at first unrecognized option.</span></span><br><span class="line">    <span class="keyword">bool</span> zygote = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> startSystemServer = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> application = <span class="literal">false</span>;</span><br><span class="line">    String8 niceName;</span><br><span class="line">    String8 className;</span><br><span class="line"></span><br><span class="line">    ++i;  <span class="comment">// Skip unused "parent dir" argument.</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; argc) {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span>* arg = argv[i++];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arg, <span class="string">"--zygote"</span>) == <span class="number">0</span>) {</span><br><span class="line">            zygote = <span class="literal">true</span>;</span><br><span class="line">            niceName = ZYGOTE_NICE_NAME;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arg, <span class="string">"--start-system-server"</span>) == <span class="number">0</span>) {</span><br><span class="line">            startSystemServer = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arg, <span class="string">"--application"</span>) == <span class="number">0</span>) {</span><br><span class="line">            application = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strncmp</span>(arg, <span class="string">"--nice-name="</span>, <span class="number">12</span>) == <span class="number">0</span>) {</span><br><span class="line">            niceName.<span class="built_in">setTo</span>(arg + <span class="number">12</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strncmp</span>(arg, <span class="string">"--"</span>, <span class="number">2</span>) != <span class="number">0</span>) {</span><br><span class="line">            className.<span class="built_in">setTo</span>(arg);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            --i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    Vector&lt;String8&gt; args;</span><br><span class="line">    <span class="keyword">if</span> (!className.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        ...</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// We're in zygote mode.</span></span><br><span class="line">        <span class="built_in">maybeCreateDalvikCache</span>();</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">// In zygote mode, pass all remaining arguments to the zygote</span></span><br><span class="line">        <span class="comment">// main() method.</span></span><br><span class="line">        <span class="keyword">for</span> (; i &lt; argc; ++i) {</span><br><span class="line">            args.<span class="built_in">add</span>(<span class="built_in">String8</span>(argv[i]));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!niceName.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        runtime.<span class="built_in">setArgv0</span>(niceName.<span class="built_in">string</span>(), <span class="literal">true</span> <span class="comment">/* setProcName */</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (zygote) {</span><br><span class="line">        runtime.<span class="built_in">start</span>(<span class="string">"com.android.internal.os.ZygoteInit"</span>, args, zygote);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (!className.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        runtime.<span class="built_in">start</span>(<span class="string">"com.android.internal.os.RuntimeInit"</span>, args, zygote);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">"Error: no class name or --zygote supplied.\n"</span>);</span><br><span class="line">        <span class="built_in">app_usage</span>();</span><br><span class="line">        <span class="built_in">LOG_ALWAYS_FATAL</span>(<span class="string">"app_process: no class name or --zygote supplied."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  在 Zygote 模式中，最终调用了 <code>runtime.start()</code> 来启动 Zygote 进程的 Java 虚拟机，这个 runtime 是 AppRuntime 的一个实例，AppRuntime 又继承于 AndroidRuntime，所以我们接着看看 AndroidRuntime 的 start 函数：</p><figure class="highlight c++"><figcaption><span>frameworks/base/core/jni/AndroidRuntime.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Start the Android runtime.  This involves starting the virtual machine</span></span><br><span class="line"><span class="comment"> * and calling the "static void main(String[] args)" method in the class</span></span><br><span class="line"><span class="comment"> * named by "className".</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Passes the main function two arguments, the class name and the specified</span></span><br><span class="line"><span class="comment"> * options string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AndroidRuntime::start</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* className, <span class="keyword">const</span> Vector&lt;String8&gt;&amp; options, <span class="keyword">bool</span> zygote)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Start VM.  This thread becomes the main thread of the VM, and will</span></span><br><span class="line"><span class="comment">     * not return until the VM exits.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">char</span>* slashClassName = <span class="built_in">toSlashClassName</span>(className != <span class="literal">NULL</span> ? className : <span class="string">""</span>);</span><br><span class="line">    jclass startClass = env-&gt;<span class="built_in">FindClass</span>(slashClassName);</span><br><span class="line">    <span class="keyword">if</span> (startClass == <span class="literal">NULL</span>) {</span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">"JavaVM unable to locate class '%s'\n"</span>, slashClassName);</span><br><span class="line">        <span class="comment">/* keep going */</span></span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        jmethodID startMeth = env-&gt;<span class="built_in">GetStaticMethodID</span>(startClass, <span class="string">"main"</span>,</span><br><span class="line">            <span class="string">"([Ljava/lang/String;)V"</span>);</span><br><span class="line">        <span class="keyword">if</span> (startMeth == <span class="literal">NULL</span>) {</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">"JavaVM unable to find main() in '%s'\n"</span>, className);</span><br><span class="line">            <span class="comment">/* keep going */</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            env-&gt;<span class="built_in">CallStaticVoidMethod</span>(startClass, startMeth, strArray);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  其中反射调用了主类的 main 函数，对于 Zygote 来说，就是 <code>com.android.internal.os.ZygoteInit</code>，至此，Zygote 启动正式进入 Java Framework 层。ZygoteInit 的 main 方法比复杂，我们一点一点来看：</p><figure class="highlight java"><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteInit.java</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> </span>{</span><br><span class="line">    ZygoteServer zygoteServer = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    Runnable caller;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        zygoteServer = <span class="keyword">new</span> ZygoteServer(isPrimaryZygote);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ^1</span></span><br><span class="line">        <span class="keyword">if</span> (startSystemServer) {</span><br><span class="line">            Runnable r = forkSystemServer(abiList, zygoteSocketName, zygoteServer);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果返回 null，则为 Zygote 进程，否则为 system_server 进程</span></span><br><span class="line">            <span class="keyword">if</span> (r != <span class="keyword">null</span>) {</span><br><span class="line">                r.run();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ^2</span></span><br><span class="line">        <span class="comment">// 该函数在 fork 出子进程后返回，在 zygote 中则永远循环等待</span></span><br><span class="line">        caller = zygoteServer.runSelectLoop(abiList);</span><br><span class="line">    } <span class="keyword">catch</span> (Throwable ex) {</span><br><span class="line">        Log.e(TAG, <span class="string">"System zygote died with fatal exception"</span>, ex);</span><br><span class="line">        <span class="keyword">throw</span> ex;</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">        <span class="keyword">if</span> (zygoteServer != <span class="keyword">null</span>) {</span><br><span class="line">            zygoteServer.closeServerSocket();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We're in the child process and have exited the select loop. Proceed to execute the</span></span><br><span class="line">    <span class="comment">// command.</span></span><br><span class="line">    <span class="keyword">if</span> (caller != <span class="keyword">null</span>) {</span><br><span class="line">        caller.run();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  首先看注释 <code>^1</code> 处，如果我们之前启动 app_process 的时候传入了 <code>--start-system-server</code>，那么此处的 <code>startSystemServer</code> 将为 true，进入 system_server 的启动，我们留到后面来分析</p><p>  注释 <code>^2</code> 处调用 <code>ZygoteServer#runSelectLoop(abiList)</code>，从函数签名上已经能够得到很多信息，这是一个循环等待 socket 连接的函数，fork 后在子进程返回，zygote 中则无限等待新的连接，如下所示：</p><figure class="highlight java"><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteServer.java</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ZygoteServer</span> </span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Runs the zygote process's select loop. Accepts new connections as</span></span><br><span class="line"><span class="comment">     * they happen, and reads commands from connections one spawn-request's</span></span><br><span class="line"><span class="comment">     * worth at a time.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> abiList list of ABIs supported by this zygote.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Runnable <span class="title">runSelectLoop</span><span class="params">(String abiList)</span> </span>{</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> pollReturnValue;</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                pollReturnValue = Os.poll(pollFDs, pollTimeoutMs);</span><br><span class="line">            } <span class="keyword">catch</span> (ErrnoException ex) {</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"poll failed"</span>, ex);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pollReturnValue == <span class="number">0</span>) {</span><br><span class="line">                ...</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                ...</span><br><span class="line"></span><br><span class="line">                ZygoteConnection connection = peers.get(pollIndex);</span><br><span class="line">                ...</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 在这里处理 AMS 发来的命令</span></span><br><span class="line">                <span class="keyword">final</span> Runnable command = connection.processCommand(<span class="keyword">this</span>, multipleForksOK);</span><br><span class="line"></span><br><span class="line">                ...</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">return</span> command;</span><br><span class="line">            }</span><br><span class="line">            ...</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其内部调用 <code>Os.poll()</code>，当有新的连接到来时，读取参数并调用 <code>ZygoteConnection#processCommand(...)</code> 处理命令，具体细节我们将留到应用启动部分再作分析。</p><p>  以上就是 Zygote 进程的完整启动过程，不知道各位看完之后有没有感觉到，其实并没有想象中的那么复杂</p><h2 id="System-Server-启动过程分析">System Server 启动过程分析</h2><p>  再来看看 system_server 是如何启动的，回到 ZygoteInit 的注释 <code>^1</code> 处，调用了本类的 <code>forkSystemServer()</code> 函数，共有三个入参：</p><ul><li>abiList</li></ul><p>  来自 <code>ro.product.cpu.abilist32/64</code>，后续将与 <code>ro.product.cpu.abilist</code> 进行比较，若二者相等，即代表当前 Zygote 支持的 ABI 已经是本设备支持的所有 ABI，则无需再等待 secondary zygote</p><ul><li>zygoteSocketName</li></ul><p>  参数 <code>--socket-name=</code> 指定的一个字符串，后续会根据此名字确定 secondary zygote 的 socket 名称，并等待其启动</p><ul><li>zygoteServer</li></ul><p>  仅为 fork 后关闭 socket 所用</p><p>  现在来看看 forkSystemserver 的方法体：</p><figure class="highlight java"><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteInit.java</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prepare the arguments and forks for the system server process.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A {<span class="doctag">@code</span> Runnable} that provides an entrypoint into system_server code in the child</span></span><br><span class="line"><span class="comment"> * process; {<span class="doctag">@code</span> null} in the parent.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Runnable <span class="title">forkSystemServer</span><span class="params">(String abiList, String socketName,</span></span></span><br><span class="line"><span class="params"><span class="function">        ZygoteServer zygoteServer)</span> </span>{</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Hardcoded command line to start the system server */</span></span><br><span class="line">    String[] args = {</span><br><span class="line">            <span class="string">"--setuid=1000"</span>,</span><br><span class="line">            <span class="string">"--setgid=1000"</span>,</span><br><span class="line">            <span class="string">"--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1021,1023,"</span></span><br><span class="line">                    + <span class="string">"1024,1032,1065,3001,3002,3003,3005,3006,3007,3009,3010,3011,3012"</span>,</span><br><span class="line">            <span class="string">"--capabilities="</span> + capabilities + <span class="string">","</span> + capabilities,</span><br><span class="line">            <span class="string">"--nice-name=system_server"</span>,</span><br><span class="line">            <span class="string">"--runtime-args"</span>,</span><br><span class="line">            <span class="string">"--target-sdk-version="</span> + VMRuntime.SDK_VERSION_CUR_DEVELOPMENT,</span><br><span class="line">            <span class="string">"com.android.server.SystemServer"</span>,</span><br><span class="line">    };</span><br><span class="line">    ZygoteArguments parsedArgs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        ZygoteCommandBuffer commandBuffer = <span class="keyword">new</span> ZygoteCommandBuffer(args);</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        Zygote.applyDebuggerSystemProperty(parsedArgs);</span><br><span class="line">        Zygote.applyInvokeWithSystemProperty(parsedArgs);</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Request to fork the system server process */</span></span><br><span class="line">        pid = Zygote.forkSystemServer(</span><br><span class="line">                parsedArgs.mUid, parsedArgs.mGid,</span><br><span class="line">                parsedArgs.mGids,</span><br><span class="line">                parsedArgs.mRuntimeFlags,</span><br><span class="line">                <span class="keyword">null</span>,</span><br><span class="line">                parsedArgs.mPermittedCapabilities,</span><br><span class="line">                parsedArgs.mEffectiveCapabilities);</span><br><span class="line">    } <span class="keyword">catch</span> (IllegalArgumentException ex) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* For child process */</span></span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span> (hasSecondZygote(abiList)) {</span><br><span class="line">            waitForSecondaryZygote(socketName);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        zygoteServer.closeServerSocket();</span><br><span class="line">        <span class="keyword">return</span> handleSystemServerProcess(parsedArgs);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  启动把硬编码的参数传递给 <code>Zygote.forkSystemServer(...)</code>，返回一个 pid，如果为 0，则表示处于 system_server 进程中，此时按需决定是否需要等待 secondary zygote 可用。最后，调用 <code>handleSystemServerProcess</code>，完成最后的处理工作：</p><figure class="highlight java"><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteInit.java</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Runnable <span class="title">handleSystemServerProcess</span><span class="params">(ZygoteArguments parsedArgs)</span> </span>{</span><br><span class="line">    <span class="comment">// set umask to 0077 so new files and directories will default to owner-only permissions.</span></span><br><span class="line">    Os.umask(S_IRWXG | S_IRWXO);  <span class="comment">// ^1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (parsedArgs.mNiceName != <span class="keyword">null</span>) {</span><br><span class="line">        Process.setArgV0(parsedArgs.mNiceName);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> String systemServerClasspath = Os.getenv(<span class="string">"SYSTEMSERVERCLASSPATH"</span>);</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (parsedArgs.mInvokeWith != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="comment">// 从 RuntimeInit 启动的特殊模式，后续再重点关注</span></span><br><span class="line">        ...</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        ClassLoader cl = getOrCreateSystemServerClassLoader();</span><br><span class="line">        <span class="keyword">if</span> (cl != <span class="keyword">null</span>) {</span><br><span class="line">            Thread.currentThread().setContextClassLoader(cl);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Pass the remaining arguments to SystemServer.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> ZygoteInit.zygoteInit(parsedArgs.mTargetSdkVersion,</span><br><span class="line">                parsedArgs.mDisabledCompatChanges,</span><br><span class="line">                parsedArgs.mRemainingArgs, cl);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* should never reach here */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>关于「umask」</span></div>    <div class="hide-content"><ul><li><a href="https://man7.org/linux/man-pages/man2/umask.2.html"><code>umask(2)</code></a> 为调用进程设置文件创建模式掩码，并返回之前的掩码值：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">mode_t</span> <span class="title">umask</span><span class="params">(<span class="keyword">mode_t</span> mask)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>  下面是一些常用的常量：</p><table><thead><tr><th style="text-align:center">屏蔽字</th><th style="text-align:center">值</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:center"><code>S_IRWXU</code></td><td style="text-align:center">0700</td><td style="text-align:left">所有者：读、写、执行</td></tr><tr><td style="text-align:center"><code>S_IRUSR</code></td><td style="text-align:center">0400</td><td style="text-align:left">所有者：读</td></tr><tr><td style="text-align:center"><code>S_IWUSR</code></td><td style="text-align:center">0200</td><td style="text-align:left">所有者：写</td></tr><tr><td style="text-align:center"><code>S_IXUSR</code></td><td style="text-align:center">0100</td><td style="text-align:left">所有者：执行</td></tr><tr><td style="text-align:center"><code>S_IRWXG</code></td><td style="text-align:center">0070</td><td style="text-align:left">组：读、写、执行</td></tr><tr><td style="text-align:center"><code>S_IRGRP</code></td><td style="text-align:center">0040</td><td style="text-align:left">组：读</td></tr><tr><td style="text-align:center"><code>S_IWGRP</code></td><td style="text-align:center">0020</td><td style="text-align:left">组：写</td></tr><tr><td style="text-align:center"><code>S_IXGRP</code></td><td style="text-align:center">0010</td><td style="text-align:left">组：执行</td></tr><tr><td style="text-align:center"><code>S_IRWXO</code></td><td style="text-align:center">0007</td><td style="text-align:left">其他（不在组内）：读、写、执行</td></tr><tr><td style="text-align:center"><code>S_IROTH</code></td><td style="text-align:center">0004</td><td style="text-align:left">其他：读</td></tr><tr><td style="text-align:center"><code>S_IWOTH</code></td><td style="text-align:center">0002</td><td style="text-align:left">其他：写</td></tr><tr><td style="text-align:center"><code>S_IXOTH</code></td><td style="text-align:center">0001</td><td style="text-align:left">其他：执行</td></tr></tbody></table><p>  在进程创建一个新文件或者目录的时候，会使用掩码对<strong>创建时</strong>指定的权限进行屏蔽，例如：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">umask</span>(<span class="number">0</span>);  <span class="comment">// 清除 umake</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 file-1</span></span><br><span class="line">    <span class="built_in">open</span>(<span class="string">"file-1"</span>, O_CREAT | O_WRONLY, <span class="number">0777</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 file-2</span></span><br><span class="line">    <span class="built_in">umask</span>(S_IXGRP | S_IWOTH | S_IXOTH);</span><br><span class="line">    <span class="built_in">open</span>(<span class="string">"file-2"</span>, O_CREAT | O_WRONLY, <span class="number">0777</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  分别查看 file-1 和 file-2 的权限，file-1 的权限为：<code>-rwxrwxrwx</code>，就是我们创建时指定的权限；file-2 的权限为：<code>-rwxrw-r--</code>。可以看到虽然我们指定的是 0777，实际上创建出来的却是 0764，就好像上一步 umask 指定的权限被从中「削除」，这就是 umask 的作用。</p><p>  回归正题，<code>ZygoteInit.java</code> 中调用了 <code>Os.umask(S_IRWXG | S_IRWXO);</code>，也就是说用户组和其它用户的权限被全部「削除」，默认新创建的文件只能被所有者访问</p></div></div><p>  剩余参数会被继续传递到 <code>zygoteInit</code>，之后的部分与应用启动走的流程比较相似，我们同样留到后面再分析</p><h2 id="应用启动过程">应用启动过程</h2><h3 id="应用-AMS">应用 -&gt; AMS</h3><h3 id="AMS-Zygote">AMS -&gt; Zygote</h3><h3 id="Zygote-fork-创建新进程">Zygote fork 创建新进程</h3><h2 id="RuntimeInit-机制探究">RuntimeInit 机制探究</h2><h2 id="总结">总结</h2><!-- <script>    ((onload) => {        window.onload = () => {            if (onload instanceof Function) {                onload();            }            mermaid.initialize({ sequence: { showSequenceNumbers: true }, });            runMermaid();        };    })(window.onload);</script> --><ul><li>Zygote</li></ul><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  sequenceDiagram    init.rc --&gt;&gt; init.zygote*.rc : import    init.zygote*.rc -&gt;&gt; + app_process : 启动「service」    Note over init.zygote*.rc,app_process: 环境变量 ANDROID_SOCKET_zygote    app_process -&gt;&gt; + ZygoteInit : 启动 ART Runtime    ZygoteInit -&gt;&gt; + ZygoteServer : 等待 socket 连接    loop fork 后在子进程返回        ZygoteServer --&gt;&gt; - ZygoteInit : caller        ZygoteInit -&gt;&gt; 应用进程 : caller.run()    end    deactivate app_process    deactivate ZygoteInit  </pre></div><ul><li>System Server</li></ul><div style="display: none;"><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  sequenceDiagram    ZygoteInit -&gt;&gt; + ZygoteInit : forkSystemServer()    ZygoteInit -&gt;&gt; + Zygote : forkSystemServer()    Zygote --&gt;&gt; - ZygoteInit : pid    alt pid == 0        ZygoteInit -&gt;&gt; + ZygoteInit : handleSystemServerProcess()        opt 如果存在次要 zygote            ZygoteInit -&gt;&gt; + ZygoteInit : waitForSecondaryZygote()            ZygoteInit -&gt;&gt; + ZygoteProcess : waitForConnectionToZygote(otherZygoteName)            ZygoteProcess --&gt;&gt; - ZygoteInit : #32;            deactivate ZygoteInit        end        ZygoteInit -&gt;&gt; + ZygoteInit : zygoteInit()        ZygoteInit --&gt;&gt; - ZygoteInit : Runnable        ZygoteInit --&gt;&gt; - ZygoteInit : Runnable    else        ZygoteInit --&gt;&gt; - ZygoteInit : 在 zygote 中返回空对象    end    ZygoteInit -&gt;&gt; SystemServer? : Runnable.run()  </pre></div></div><ul><li>App</li></ul><br><center><font size="5">- - 未完待续，本篇博客将持续更新 - -</font></center><script src="/assets/js/mermaid-linear-sequence-loop.js"></script><script src="/assets/js/code-language-mock.js" onload="mock('xml', 'rc file'); mock('bash', 'rc file');"></script></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在 Linux 上游玩原神（国服）</title>
      <link href="/posts/73251555/"/>
      <url>/posts/73251555/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4792f32e2960417d954b967f1c6801579d9b1b4b629bd69f205132441efb917d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码，查看文章。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 「梦中的桓那兰那」 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>绕过 Shamiko v0.5.2 检测 Zygisk</title>
      <link href="/posts/1719361358/"/>
      <url>/posts/1719361358/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="39bd19b234593140238d6be47638f03145b870728b0b0b8cf40f1ebbb5d3b8d4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码，查看文章。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Magisk </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>理解 Linux 的「挂载命名空间」机制</title>
      <link href="/posts/4104300991/"/>
      <url>/posts/4104300991/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="前言">前言</h2><p>  经常玩机的小伙伴应该都能注意到，Magisk 中有一项设置叫「挂载命名空间模式」，里面有三个不明觉厉的选项：「全局命名空间」、「继承命名空间」和「独立命名空间」。初看这些选项，你可能会感到一头雾水，但是相信读完本文之后，你就能够对这些选项的作用，以及挂载命名空间的机制拥有一个基本的认识</p><img src="magisk.jpg" style="width:60%;"><p>  在本文中，你将了解到：</p><ul><li>挂载、挂载点 和 虚拟文件系统（VFS）</li><li>什么是挂载命名空间？</li><li>挂载命名空间的共享子树机制</li><li>传播类型如何影响挂载？</li></ul><h2 id="关于「挂载」">关于「挂载」</h2><h3 id="何为「挂载」？">何为「挂载」？</h3><p>  <a href="https://man7.org/linux/man-pages/man8/mount.8.html#DESCRIPTION">手册</a>中对于挂载的描述是这样的：</p><blockquote><p>All files accessible in a Unix system are arranged in one big tree, the file hierarchy, rooted at /. These files can be spread out over several devices. The mount command serves to attach the filesystem found on some device to the big file tree. Conversely, the umount(8) command will detach it again. The filesystem is used to control how data is stored on the device or provided in a virtual way by network or other services.</p></blockquote><p>  大致意思是说，所有可被访问的文件都位于一棵以 <code>/</code> 为根的「文件树」上，而这些文件可能分布在不同的文件系统和设备，所谓「挂载」操作就是将设备上的文件系统附加到某个目录上，使得数据源可以在系统中使用。</p><p>  而这棵「文件树」就是 Linux 的 VFS 虚拟文件系统，它作为一个抽象层，使得其上的应用程序可以使用统一的接口访问不同的文件系统：</p><p><img src="vfs.jpg" alt=""></p><p>  下面这张图就十分形象地体现了挂载的本质：灰色和粉色的矩形表示了两个块设备（Block Device），箭头和标签组成了 VFS 的树状文件结构，而白色的圆圈就代表着挂载点。图中将粉色文件系统（可能是一块硬盘）中的根节点 <code>/</code> 挂载到了 VFS 的 <code>/home</code> 目录下，此后对 <code>/home</code> 的所有读写操作都将发生在被挂载的设备上（即图中的粉色文件系统）</p><p><img src="mount.jpg" alt=""></p><h3 id="挂载的一些特性">挂载的一些特性</h3><p>  当我们挂载文件系统到一个非空的目录上时，其中本来的文件就像被遮盖隐藏了一样，在将挂载卸除之前，任何对该目录的访问都只能访问到挂载的文件系统内文件；当挂载卸除之后，原来的内容又会显现出来</p><p>  挂载点之间是存在父子关系的，对于 VFS 上的一个目录，挂载点按挂载的先后顺序形成父子关系，即最后一个覆盖某一路径的挂载点将成为新挂载上来挂载点的父亲。通过一个简单的脚本，我们可以查看当前命名空间各个挂载点的关系：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line">root = <span class="literal">None</span></span><br><span class="line">children = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">record = {}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">root, depth=<span class="number">0</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'<span class="subst">{<span class="string">"+   "</span> * depth}</span><span class="subst">{record[root][<span class="number">0</span>]}</span> on <span class="subst">{record[root][<span class="number">1</span>]}</span>'</span>)</span><br><span class="line">    <span class="keyword">for</span> child <span class="keyword">in</span> children[root]:</span><br><span class="line">        dfs(child, depth + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'/proc/self/mountinfo'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fp.readlines():</span><br><span class="line">        mount_id, parent_id, mount_point, mount_src = re.findall(</span><br><span class="line">            <span class="string">r'(\d+) (\d+) \S+ \S+ (\S+) .* - \S+ (\S+) .*'</span>, line</span><br><span class="line">        )[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> mount_point == <span class="string">'/'</span>:</span><br><span class="line">            root = parent_id</span><br><span class="line"></span><br><span class="line">        record[mount_id] = (mount_src, mount_point)</span><br><span class="line">        children[parent_id].append(mount_id)</span><br><span class="line"></span><br><span class="line">dfs(children[root][<span class="number">0</span>])</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="绑定挂载">绑定挂载</h3><p>  绑定挂载（bind mount）是一种特殊的挂载操作，它可以将文件层次结构的一部分重新挂载到其它地方。简单做个实验，我们现在有这样的文件结构：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── A</span><br><span class="line">│&nbsp;&nbsp; └── a.txt</span><br><span class="line">├── B</span><br><span class="line">│&nbsp;&nbsp; └── b.txt</span><br><span class="line">└── C</span><br><span class="line">    └── c.txt</span><br></pre></td></tr></tbody></table></figure><p>  然后执行下面的命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount --<span class="built_in">bind</span> A C</span><br><span class="line">tree</span><br></pre></td></tr></tbody></table></figure><p>  此时文件树的结构变成了下图所示的样子：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── A</span><br><span class="line">│&nbsp;&nbsp; └── a.txt</span><br><span class="line">├── B</span><br><span class="line">│&nbsp;&nbsp; └── b.txt</span><br><span class="line">└── C</span><br><span class="line">    └── a.txt</span><br></pre></td></tr></tbody></table></figure><p>  可以看到文件夹 <code>C</code> 下的文件已经变成了 <code>a.txt</code>，而此时如果我们尝试在文件夹 <code>C</code> 下新增一个文件，然后再次打印目录树：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 233333 &gt; C/flag.txt</span><br><span class="line">tree</span><br><span class="line">cat A/flag.txt</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.      </span><br><span class="line">├── A</span><br><span class="line">│&nbsp;&nbsp; ├── a.txt</span><br><span class="line">│&nbsp;&nbsp; └── flag.txt</span><br><span class="line">├── B</span><br><span class="line">│&nbsp;&nbsp; └── b.txt</span><br><span class="line">└── C</span><br><span class="line">    ├── a.txt</span><br><span class="line">    └── flag.txt</span><br></pre></td></tr></tbody></table></figure><p>  可以发现对 <code>C</code> 的操作直接同步到了目录 <code>A</code> 下，此时对目录 <code>C</code> 的操作就好像是直接在操作目录 <code>A</code> 一样，这就是绑定挂载的神奇之处。此外，绑定挂载允许选择一个只读文件系统中的目录作为挂载点，Magisk 正是利用了这一特性来实现对系统文件的替换和修改。</p><h2 id="挂载命名空间">挂载命名空间</h2><h3 id="概述">概述</h3><p>  刚才我们介绍了一些挂载的规则和特性，但这依然无法解释为何在不同进程的视角下 VFS 文件树可以拥有不同的结构，所以下面正式引出挂载命名空间的概念：</p><p>   这里<a href="https://cloud.tencent.com/developer/article/1531989#%E5%BC%95%E8%A8%80">摘录</a>一段对挂载命名空间的介绍：</p><blockquote><p>  挂载命名空间是第一个添加到 Linux 的命名空间类型，出现在 2002 年的 Linux 2.4.19 中。它们可隔离命名空间中的进程所看到的挂载点列表。换言之，每个挂载命名空间都有自己的挂载点列表，这意味着不同命名空间中的进程可以看到并操作单个目录层次结构的不同视图。</p><p>  当系统首次启动时，有一个单一的挂载命名空间，即所谓的“初始命名空间”。带 CLONE_NEWNS 标志的 clone()（在新命名空间中创建新子进程）或 unshare()（将调用方移到新命名空间中）可创建新的挂载命名空间。当新的装挂载名空间被创建时，它将接收 clone() 或 unshare() 的调用者的命名空间的挂载点列表的拷贝。</p><p>  在 clone() 或 unshare() 之后，可以在每个命名空间中独立地添加和删除挂载点（通过 mount() 和 umount() ）。对挂载点列表的更改（默认情况下）仅对进程所在的挂载命名空间中的进程可见；这些更改在其他挂载命名空间中不可见。</p><p>  挂载命名空间有多种用途。例如，可以提供文件系统的每个用户视图。还有其它用途，可以为新的 PID 命名空间挂载 /proc 文件系统，而不会对其它进程造成副作用，还可通过 chroot() 将进程隔离到单个目录层次结构中。在某些用例中，挂载命名空间与绑定挂载一起使用。</p></blockquote><p>  简言之，挂载命名空间提供了一种机制，能够让不同进程「视角」下的文件系统呈现出不同的结构和内容，我们所熟知的 Docker 正是利用了这一技术来实现容器之间的隔离。</p><h3 id="API">API</h3><p>  有三个较为常见的系统调用与命名空间有关：<code>clone()</code>、<code>unshare()</code> 和 <code>setns()</code></p><ul><li><code>clone()</code></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clone</span><span class="params">(<span class="keyword">int</span> (*fn)(<span class="keyword">void</span> *), <span class="keyword">void</span> *stack, <span class="keyword">int</span> flags, <span class="keyword">void</span> *arg)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>  允许在新的命名空间中创建一个<strong>子进程</strong>，通过指定不同的 <code>CLONE_NEW*</code> 标志位，可以控制需要分离的命名空间类型。</p><ul><li><code>unshare()</code></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">unshare</span><span class="params">(<span class="keyword">int</span> flags)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>  与 <code>clone()</code> 类似，但 <code>unshare()</code> 用于分离<strong>调用者</strong>的命名空间。</p><ul><li><code>setns()</code></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setns</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> nstype)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>  将<strong>调用者</strong>移动到一个<strong>现有</strong>的命名空间，<code>fd</code> 为一个指向 <code>/proc/[pid]/ns</code> 下魔法链接的文件描述符，<code>nstype</code> 用于控制需要加入的命名空间类型，对于已知命名空间类型的 <code>fd</code>，将该标志位设置为 0 即可</p><h2 id="共享子树">共享子树</h2><h3 id="概述-2">概述&nbsp;</h3><p>  实现挂载命名空间之后，又带来了新的问题。假如已经有多个进程工作在不同的挂载命名空间之中，此时用户向电脑插入一块 U 盘（<code>/dev/sda</code>），如果要使所有进程都能访问这块 U 盘，则需要在它们各自的命名空间之中一一进行挂载，这显然不像是一款设计精良的操作系统上应该出现的事情。于是在 2006 年初，共享子树特性被添加到了 Linux 2.6.15 中，它允许自动、可控地在命名空间之间传播挂载和卸载事件</p><p>  一个典型的例子是：当我们在 Termux 中挂载磁盘镜像时，在 MT 管理器中看不到其内容，而当我们在 adb shell 环境下挂载同样的镜像时，任何地方都可以看到。</p><h3 id="传播类型">传播类型</h3><p>  在共享子树特性下，每个挂载点都由「传播类型」标记，「传播类型」控制着挂载点下的挂载和卸载事件是否会传播到「对等组」中的其它挂载点（关于对等组的概念，会在接下来介绍），一共有四种不同的传播类型：</p><ul><li><code>MS_SHARED</code></li></ul><p>  共享挂载。该挂载点与同一对等组中的其它挂载点同步传播挂载和卸载事件</p><ul><li><code>MS_PRIVATE</code></li></ul><p>  私有挂载。不属于任何对等组，所以也不会发生事件传播</p><ul><li><code>MS_SLAVE</code></li></ul><p>  从属挂载。介于共享挂载与私有挂载之间，它可以接收对等组中其它挂载点的挂载和卸载事件，但不会将自身的变化传播到其它挂载点</p><ul><li><code>MS_UNBINDABLE</code></li></ul><p>  不可绑定挂载。与私有挂载类似，不属于任何对等组，此外，此挂载点不可作为绑定挂载的源</p><h3 id="对等组">对等组</h3><div class="note info simple"><p>对于绑定挂载，其事件传播细节非常复杂，故以下所有讨论均未考虑绑定挂载</p></div><p>  对等组是一组挂载点，他们会互相传播挂载和卸载事件，当传播类型是共享的挂载点创建新的命名空间时，对等组会获得新成员。对等组和传播类型共同控制着事件在各个命名空间中的传播，考虑下面一种情况：</p><p>  <code>M1</code>、<code>M2</code>、<code>M3</code> 是一组共享挂载，子挂载 <code>A1</code>、<code>A2</code>、<code>A3</code> 分别挂载到 <code>M1</code>、<code>M2</code>、<code>M3</code> 的目录 <code>x</code> 上，接下来有 <code>C1</code>、<code>C2</code>、<code>C3</code> 再次分别挂载到 <code>M1</code>、<code>M2</code>、<code>M3</code> 的目录 <code>x</code>。</p><p>  如果此时卸载 <code>C1</code>，<code>M1</code> 会将此卸载事件传播到 <code>M2</code> 和 <code>M3</code>，通知其「卸载挂载点 <code>C</code>」，所以最终 <code>C1</code>、<code>C2</code>、<code>C3</code> 都将被卸载，但如果 <code>C2</code>、<code>C3</code> 下有子挂载点，则他们的卸载操作会静默失败。</p><p>  我们同样可以通过读取 <code>/proc/self/mountinfo</code> 来查看当前进程的对等组和传播类型信息：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">36 35 98:0 /mnt1 /mnt2 rw,noatime master:1 - ext3 /dev/root rw,errors=continue</span><br><span class="line">                                    ^ here!</span><br></pre></td></tr></tbody></table></figure><p>  一般而言只有 0 或 1 项，冒号前面的 shared/master 等信息表示其传播类型，后面的数字表示组号，若没有标记，则表示其为私有挂载</p><ul><li><p><code>shared:X</code>：对等组中的共享挂载，会将挂载事件传播到组中其它成员</p></li><li><p><code>master:X</code>：表示此挂载从属于对等组 <code>X</code></p></li><li><p><code>propagate_from:X</code>：接收从组 <code>X</code> 发出的共享挂载，这个标签总是与 <code>master:X</code> 一同出现</p></li></ul><h2 id="Android-中的挂载命名空间">Android 中的挂载命名空间</h2><p>  找一部 Android 手机，查看 init、adbd、zygote64、system_server 等进程的挂载情况，发现 adbd 进程与 init 一样，都属于初始命名空间；而 zygote64、system_server、应用进程则分别属于不同的挂载命名空间，且它们的根挂载点从属于 init 进程的根挂载点</p><p>  事实上，zygote 进程初始化时会从初始命名空间 unshare，并将所有挂载点递归改为从属挂载，并在之后的 <code>nativeForkAndSpecialize()</code> 中，再次调用 unshare，为每个应用分离命名空间</p><h2 id="总结-2">总结</h2><ol><li><p>命名空间服务于进程，即命名空间中可以存在许多进程，每个进程都属于一个挂载命名空间</p></li><li><p>挂载命名空间中有一个挂载点列表，记录着此命名空间下所有挂载点的信息</p></li><li><p>不同命名空间中的挂载点可以组成对等组，挂载和卸载事件遵循传播类型标记在各个成员之间传播</p></li></ol><h2 id="参考-7">参考</h2><ul><li><p><a href="https://zhuanlan.zhihu.com/p/67831794">https://zhuanlan.zhihu.com/p/67831794</a></p></li><li><p><a href="https://www.zhihu.com/question/266907637">https://www.zhihu.com/question/266907637</a></p></li><li><p><a href="https://xionchen.github.io/2016/08/25/linux-bind-mount/">https://xionchen.github.io/2016/08/25/linux-bind-mount/</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1529660">https://cloud.tencent.com/developer/article/1529660</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1531989">https://cloud.tencent.com/developer/article/1531989</a></p></li><li><p><a href="https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt">https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt</a></p></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> OS Lab </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于内存搜索的 Zygisk 注入检测方案</title>
      <link href="/posts/2752488453/"/>
      <url>/posts/2752488453/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  对我们开发者而言，在写一些安全性要求较高的项目时，自然不希望自己的代码被别人随意注入修改。比如在 Android 方面，现在已经有很多成熟的 Hook 框架比如 Xposed、xHook、ByteHook、Frida 等可供用户选择。本文将着重介绍一种基于内存搜索的检测方案，经实际测试，能在进程受到注入时绕过 Shamiko 正确检出 Zygisk 和 LSPosed 的存在</p><hr><h2 id="实验环境">实验环境</h2><ul><li><p>设备：Mi 10 Lite Zoom｜MIUI V12.5.4.0.RJVCNXM｜API 30</p></li><li><p>环境：Magisk v25.1 (25100)｜LSPosed v1.8.3 (6552)｜Shamiko v0.5.1 (115)</p></li></ul><h2 id="实现原理">实现原理</h2><p>  我们知道，一个进程所映射的各种资源（代码、堆栈、动态库等）都会被记录到 <code>/proc/[pid]/maps</code> 这个文件里，虽然 Zygisk / Shamiko 已经尽可能将注入的动态链接库映射成匿名的 memfd，但并没有很好地处理符号隐藏，这就给了我们可乘之机。</p><p>  通过读取映射表 maps 文件，我们能够得知各个映射在内存中的偏移量及其权限，从中过滤出所有可读可执行的映射，然后在对应的内存区域中搜索关键字，就能把异常的映射文件揪出来。核心代码非常短，只有寥寥 20 行：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">memory_scan</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">bool</span> result = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *prefix[] = {</span><br><span class="line">        <span class="string">"zygisk_module_entry"</span>_enc, <span class="string">"org.lsposed.lspd"</span>_enc</span><br><span class="line">    };</span><br><span class="line">    FILE *fp = <span class="built_in">fopen</span>(<span class="string">"/proc/self/maps"</span>_enc, <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">char</span> *left, *right; <span class="keyword">char</span> perm[<span class="number">8</span>], file[<span class="number">512</span>];</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fp, <span class="string">"%p-%p %s %*s %*s %*s %[^\n]s"</span>_enc, &amp;left, &amp;right, perm, file) != EOF) {</span><br><span class="line">        <span class="keyword">if</span> (perm[<span class="number">0</span>] == <span class="string">'r'</span> &amp;&amp; perm[<span class="number">2</span>] == <span class="string">'x'</span>) {</span><br><span class="line">            <span class="keyword">size_t</span> size = right - left;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;pattern : prefix) {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">memmem</span>(left, size, pattern, <span class="built_in">strlen</span>(pattern))) {</span><br><span class="line">                    <span class="keyword">char</span> *ptr = file;</span><br><span class="line">                    <span class="keyword">while</span> (<span class="built_in">isspace</span>(ptr[<span class="number">0</span>]) &amp;&amp; ptr &lt; file + <span class="built_in"><span class="keyword">sizeof</span></span>(file)) ptr++;</span><br><span class="line">                    <span class="built_in">LOGW</span>(<span class="string">"Found \"%s\" in %p-%p (%s)"</span>, pattern, left, right, file);</span><br><span class="line">                    <span class="built_in">LOGW</span>(</span><br><span class="line">                        <span class="string">"/proc/%d/map_files/%lx-%lx"</span>, <span class="built_in">getpid</span>(), </span><br><span class="line">                        <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uintptr_t</span>&gt;(left), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uintptr_t</span>&gt;(right)</span><br><span class="line">                    );</span><br><span class="line">                    result = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其中用户定义字面量 <code>""_enc</code> 用于在编译期混淆字符串，增加安全性，同时可以避免搜索到自己文件产生误报，下面是检测器的输出：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Found "zygisk_module_entry" in 0x6f67f0b000-0x6f67f17000 (/memfd:jit-cache (deleted))</span><br><span class="line">/proc/16608/map_files/6f67f0b000-6f67f17000</span><br><span class="line">Found "zygisk_module_entry" in 0x6f68001000-0x6f6802c000 (/memfd:jit-cache (deleted))</span><br><span class="line">/proc/16608/map_files/6f68001000-6f6802c000</span><br><span class="line">Found "org.lsposed.lspd" in 0x6f68001000-0x6f6802c000 (/memfd:jit-cache (deleted))</span><br><span class="line">/proc/16608/map_files/6f68001000-6f6802c000</span><br></pre></td></tr></tbody></table></figure><p>  其中两项属于 LSPosed，一项属于「Enhanced mode for Storage Isolation（以下简称 SR）」。值得一提的是，无论是否对目标应用启用存储隔离，SR 都会对其注入链接库，这使得在使用 SR 的设备上第三方应用可以相当容易地检出 Zygisk 😰</p><p>  另外，如果查看这几个被找到的 map_files 的前几个字节，可以发现 ELF 文件头的一些特征，如果针对这些特征改进搜索，应该能进一步提高查找的效率：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">~ # cat /proc/16608/map_files/6f67f0b000-6f67f17000 | head -c 128 | hexdump -C</span><br><span class="line">00000000  7f 45 4c 46 02 01 01 00  00 00 00 00 00 00 00 00  |.ELF............|</span><br><span class="line">00000010  03 00 b7 00 01 00 00 00  60 1f 00 00 00 00 00 00  |........`.......|</span><br><span class="line">00000020  40 00 00 00 00 00 00 00  08 c1 00 00 00 00 00 00  |@...............|</span><br><span class="line">00000030  00 00 00 00 40 00 38 00  08 00 40 00 17 00 16 00  |....@.8...@.....|</span><br><span class="line">00000040  01 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00  |................|</span><br><span class="line">00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</span><br><span class="line">00000060  60 b9 00 00 00 00 00 00  60 b9 00 00 00 00 00 00  |`.......`.......|</span><br><span class="line">00000070  00 10 00 00 00 00 00 00  01 00 00 00 06 00 00 00  |................|</span><br><span class="line">00000080</span><br></pre></td></tr></tbody></table></figure><h2 id="奇思妙想🤔">奇思妙想🤔</h2><p>  以下是针对上述检测手段想到的一些可能的应对方式，奈何本人水平有限，实在没法确认其可行性，这里就抛砖引玉，留给各位大佬分析了</p><ul><li>从 maps 文件入手</li></ul><p>  加大映射的链接库在 maps 文件中的隐藏力度，使其对应条目不出现在文件中。例如 bind mount 一个 FIFO 到 <code>/proc/[pid]/maps</code> 同时开启 inotify，等待读操作时写入我们过滤后的数据（但是如何处理 lseek？</p><ul><li>从映射的 so 库入手</li></ul><p>  模块开发者处理好字符串和符号的混淆，Zygisk 加载动态链接库后抹除 ELF 文件头和入口函数信息，防止在内存搜索中暴露特征</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Magisk </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>译｜Bash-Oneliner（随缘更新）</title>
      <link href="/posts/1883065385/"/>
      <url>/posts/1883065385/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  偶然在 GitHub 刷到了 <a href="https://github.com/onceupon/Bash-Oneliner">这个项目</a>，里面有各种各样的 bash 使用小技巧，但是它真的很长😰，以至于我没有信心一口气读完它。那干脆重新翻译整理一遍好了，顺便还能当个字典用，有需要就回来查一查</p><hr><ul><li>注意：本文只会收录我在自己机器 zsh 环境下实测有效、且认为比较有用的条目，同时也会补充一些自己的内容</li></ul><h2 id="终端技巧">终端技巧</h2><ul><li>快捷键（Ctrl+？）</li></ul><blockquote><p><kbd>Ctrl</kbd> + <kbd>R</kbd>：搜索历史命令</p><p><kbd>Ctrl</kbd> + <kbd>A</kbd>：光标移动到行首</p><p><kbd>Ctrl</kbd> + <kbd>D</kbd>：发送 EOF</p><p><kbd>Ctrl</kbd> + <kbd>K</kbd>：删除从光标到行末的所有字符</p><p><kbd>Ctrl</kbd> + <kbd>W</kbd>：剪切光标前的单词，使用 <kbd>Ctrl</kbd> + <kbd>Y</kbd> 粘贴</p><p><kbd>Ctrl</kbd> + <kbd>U</kbd>：剪切光标前的行，使用 <kbd>Ctrl</kbd> + <kbd>Y</kbd> 粘贴</p><p><kbd>Ctrl</kbd> + <kbd>_</kbd>：撤销输入</p><p><kbd>Ctrl</kbd> + <kbd>L</kbd>：清屏（不重置滚动条）</p></blockquote><ul><li>通过 <code>history</code> 中的号码指定命令</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!4160</span><br></pre></td></tr></tbody></table></figure><ul><li>执行上一条命令</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!!</span><br><span class="line"><span class="comment"># 使用 sudo 执行上一条命令</span></span><br><span class="line">sudo !!</span><br></pre></td></tr></tbody></table></figure><ul><li>执行特定字符串开头的历史命令</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat filename</span><br><span class="line"><span class="comment"># 再次执行 cat filename</span></span><br><span class="line">!cat</span><br></pre></td></tr></tbody></table></figure><ul><li>路径名模式扩展（glob）</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># '*'  匹配任意字符零次或多次</span></span><br><span class="line">/etc/pa*wd            <span class="comment"># /etc/passwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># '?'  匹配任意字符一次</span></span><br><span class="line">/b?n/?at              <span class="comment"># /bin/cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># '[]' 匹配区间中的字符</span></span><br><span class="line">ls -ld /proc/[0-9]*   <span class="comment"># 打印所有以数字开头的文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># '{}' 匹配一个组</span></span><br><span class="line">ls *.{sh,py}   <span class="comment"># 列出所有 .sh 和 .py 文件</span></span><br></pre></td></tr></tbody></table></figure><ul><li>常用的环境变量</li></ul><blockquote><p><code>$0</code>：可执行文件名</p><p><code>$1</code>、<code>$2</code>、<code>$3</code>：位置参数</p><p><code>$#</code>：参数的数量</p><p><code>$?</code>：上一条命令的退出代码</p><p><code>$$</code>：当前 shell 的 pid</p></blockquote><ul><li>切片操作</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">VAR=<span class="string">"123456"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">${VAR:1:3}</span>  <span class="comment"># 234</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">${VAR:2}</span>    <span class="comment"># 3456</span></span><br></pre></td></tr></tbody></table></figure><ul><li>字符串替换</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">VAR=<span class="string">"banana"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">${VAR/a/#}</span>   <span class="comment"># b#nana</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">${VAR//a/#}</span>  <span class="comment"># b#n#n#</span></span><br></pre></td></tr></tbody></table></figure><ul><li><code>cat</code> 输出多行内容</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">EOF &gt; hello.py</span></span><br><span class="line"><span class="string">name = input('&gt; ')</span></span><br><span class="line"><span class="string">print(f'Hello, {name}')</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">EOF | python3</span></span><br><span class="line"><span class="string">import os</span></span><br><span class="line"><span class="string">name = os.environ['USER']</span></span><br><span class="line"><span class="string">print(f'Hello, {name}')</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></tbody></table></figure><ul><li>快速复制（zsh）</li></ul><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xclip</span><br><span class="line"><span class="built_in">alias</span> copy=<span class="string">'tee $(tty) | xclip -selection clipboard -r'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'something to copy...'</span> | copy</span><br></pre></td></tr></tbody></table></figure><h2 id="字符串操作（grep、sed、awk）">字符串操作（grep、sed、awk）</h2><h3 id="grep">grep</h3><blockquote><p><code>grep</code>，<code>grep -G</code>：基本正则表达式（BRE）<br><code>fgrep</code>，<code>grep -F</code>：全字匹配模式<br><code>egrep</code>，<code>grep -E</code>：扩展正则表达式（ERE）</p></blockquote><ul><li>统计空行的数量</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -c <span class="string">"^$"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>匹配完整单词</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep -w <span class="string">'target'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或使用正则表达式</span></span><br><span class="line">grep <span class="string">'\btarget\b'</span></span><br></pre></td></tr></tbody></table></figure><ul><li>显示匹配行的前后几行</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同时显示匹配行的后三行</span></span><br><span class="line">grep -A 3 <span class="string">'bbo'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时显示匹偶行的前三行</span></span><br><span class="line">grep -B 3 <span class="string">'bbo'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时显示匹配行的前后三行</span></span><br><span class="line">grep -C 3 <span class="string">'bbo'</span></span><br></pre></td></tr></tbody></table></figure><ul><li>只打印第一次匹配的结果</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -m 1 chrome</span><br></pre></td></tr></tbody></table></figure><ul><li>统计匹配的行数</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -c chrome</span><br></pre></td></tr></tbody></table></figure><ul><li>统计模板出现的次数</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -o chrome | wc -l</span><br></pre></td></tr></tbody></table></figure><ul><li>递归地在文件中搜索</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不跟随符号链接</span></span><br><span class="line">grep -r pattern /path/to/directory/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跟随符号链接</span></span><br><span class="line">grep -R pattern /path/to/directory/</span><br></pre></td></tr></tbody></table></figure><h2 id="xargs-的使用">xargs 的使用</h2><ul><li>查找所有 pdf 文件并复制到指定文件夹</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name <span class="string">'*.pdf'</span> | xargs -I {} cp {} ../output/</span><br></pre></td></tr></tbody></table></figure><ul><li>将每 3 个参数划分为一组（<code>-n 3</code>），并打开命令显示（<code>-t</code>）</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">seq 10 | xargs -n 3 -t <span class="built_in">echo</span></span><br></pre></td></tr></tbody></table></figure><p>  未完待续……</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 奇技淫巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>实战：「大学搜题酱」应用逆向与答案提取</title>
      <link href="/posts/2765251836/"/>
      <url>/posts/2765251836/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="起因">起因</h2><ul><li>模电作业马上就要截止了，然而手中却没有一本趁手的答案以供订正（</li></ul><img src="answer-share.jpeg" style="width: 40%;"><p>  然后就收到了一份分享，起初以为是个网盘链接啥的，结果点进去打眼一看，原来是要下 APP？？这岂能忍得了，不过为了拿到答案，我还是下了一份应用。熟悉我的朋友们都知道，按照我的做事风格，事情肯定不会到这里就结束了。每次想查个答案还要打开它的 APP，简直不要太憋屈，<s>然而我早已是有着多年逆向工作经验的老油条</s>（臭不要脸 ^^），这事必须得给它办了</p><h2 id="开整">开整</h2><p>  要是放到高中，估计我只会用个小黄鸟抓抓包啥的，不行就开始上 Auto.js 自动化，把每一页都截图。但今时不同往日，在与各种花里胡哨的应用斗智斗勇的过程中我也掌握了不少新手段，今天就拿这「大学搜题酱」来练练手</p><p>  APP 里答案的每一页都是一张图片，那么先从最简单的办法开始，用 mitmproxy 进行一个包的抓，发现 URL 毫无章法，但每一张图片都可以在浏览器直接粘贴 URL 看到，并没有做身份验证：</p><p><img src="obfused-url.png" alt=""></p><p>  那么应该会首先有一个 <code>/api/list</code> 之类的请求用于获取每一页图片的 URL 列表，然而这个 APP 有证书固定，mitmproxy 的根证书没法解密它的 https，尝试抓取会产生一个网络错误：</p><img src="network-error.jpg" style="width: 40%;"><p>  于是开始尝试到 <code>/data/data</code> 底下翻找有没有什么缓存，可能是做了数据加密或者根本就没有缓存，除了一堆乱七八糟的文件以外什么都没找到。不得已只能上魔法了，使用 Activity 或 Intent 记录工具得知查看答案资源的活动名为 <code>AnswerBrowseActivity</code>，查看安装包的 dex 文件，发现有一层腾讯御安全的壳😰，时间成本再次++</p><p>  用 Frida-DexDump 脱好壳，拉到 jadx 里看一眼，很快就能发现类里有一个 <code>ArrayList&lt;String&gt;</code> 类型的属性，以及对它做了修改的方法，很明显是从启动这个 Activity 的 Intent 中取出了一个叫 <code>INPUT_IMG_URL_LIST</code> 的列表，而这显然就是我们想要的东西：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnswerBrowseActivity</span> <span class="keyword">extends</span> <span class="title">TitleActivity</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String&gt; f = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ............</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>{</span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        <span class="keyword">if</span> (intent != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.t = getIntent().getIntExtra(<span class="string">"INPUT_BOOK_TYPE"</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">this</span>.h = getIntent().getIntExtra(<span class="string">"INPUT_PHOTO_POSITION"</span>, <span class="number">0</span>);</span><br><span class="line">            ArrayList&lt;String&gt; stringArrayListExtra = intent.getStringArrayListExtra(<span class="string">"INPUT_IMG_URL_LIST"</span>);</span><br><span class="line">            <span class="keyword">if</span> (stringArrayListExtra != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">this</span>.f.clear();</span><br><span class="line">                <span class="keyword">this</span>.f.addAll(stringArrayListExtra);</span><br><span class="line">            }</span><br><span class="line">            g();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ............</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  接下来只需要把它拿出来就好了，快速搓一个 Xposed 模块，在 <code>onResume</code> 方法开始前查找类型为 <code>ArrayList</code> 的属性，并把它的内容打到 logcat：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HookEntry</span> : <span class="type">HookHelper</span></span>(<span class="string">"AnswerDump"</span>) {</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onApplicationAttach</span><span class="params">(context: <span class="type">Context</span>)</span></span> {</span><br><span class="line">        setDefaultClassLoader(context.classLoader)</span><br><span class="line">        findMethod(<span class="string">"com.zmzx.college.search.activity.booksearch.result.activity.AnswerBrowseActivity"</span>) {</span><br><span class="line">            name == <span class="string">"onResume"</span></span><br><span class="line">        }!! before { param -&gt;</span><br><span class="line">            <span class="keyword">catch</span> {</span><br><span class="line">                param.thisObject.javaClass.declaredFields.forEach { field -&gt;</span><br><span class="line">                    <span class="keyword">if</span> (ArrayList::<span class="keyword">class</span>.java == field.type) {</span><br><span class="line">                        <span class="meta">@Suppress(<span class="meta-string">"Unchecked_Cast"</span>)</span></span><br><span class="line">                        (field.<span class="keyword">get</span>(param.thisObject) <span class="keyword">as</span> ArrayList&lt;String&gt;).forEach {</span><br><span class="line">                            Log.i(it)</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">return</span><span class="symbol">@forEach</span></span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  啊好像 hook <code>Activity#onCreate(Bundle)</code> 就行了，这是个 <code>@CallSuper</code> 标记的方法，每个 Activity 实例都会调到这里：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">XposedHelpers.findAndHookMethod(</span><br><span class="line">    Activity::<span class="keyword">class</span>.java, <span class="string">"onCreate"</span>,</span><br><span class="line">    Bundle::<span class="keyword">class</span>.java,</span><br><span class="line">    <span class="keyword">object</span> : XC_MethodHook() {</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">beforeHookedMethod</span><span class="params">(param: <span class="type">MethodHookParam</span>)</span></span> {</span><br><span class="line">            with (param.thisObject <span class="keyword">as</span> Activity) {</span><br><span class="line">                intent.getStringArrayListExtra(<span class="string">"INPUT_IMG_URL_LIST"</span>)?.forEach {</span><br><span class="line">                    Log.i(TAG, it)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><p>  其实这一步用 Frida 应该会更快，只是我实在懒得修复之前折腾坏的环境（</p><p>  后面的事情就非常简单了，用 Python 将所有图片一张张下载下来即可，这里直接贴上代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'image_urls.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    lines = fp.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(lines):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'[<span class="subst">{i+<span class="number">1</span>:<span class="number">0</span>&gt;3d}</span>/<span class="subst">{<span class="built_in">len</span>(lines):<span class="number">0</span>&gt;3d}</span>]: <span class="subst">{line.strip()}</span>'</span>)</span><br><span class="line">    resp = httpx.get(line.strip())</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f'images/<span class="subst">{i:<span class="number">0</span>&gt;3d}</span>.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(resp.content)</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最后再整合成 PDF：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fpdf <span class="keyword">import</span> FPDF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pdf_file = FPDF(unit=<span class="string">'pt'</span>, <span class="built_in">format</span>=(<span class="number">1389</span>, <span class="number">2043</span>))  <span class="comment"># 页面尺寸（懒得写自动识别了）</span></span><br><span class="line">pdf_file.set_auto_page_break(<span class="literal">False</span>)  <span class="comment"># 关闭自动分页</span></span><br><span class="line">pdf_file.set_left_margin(<span class="number">0</span>)  <span class="comment"># 设置页边距</span></span><br><span class="line">pdf_file.set_top_margin(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">images = os.listdir(<span class="string">'images/'</span>)</span><br><span class="line">images.sort(key=<span class="keyword">lambda</span> s: <span class="built_in">int</span>(re.search(<span class="string">r'^(\d+)'</span>, s).group(<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> images:</span><br><span class="line">    pdf_file.add_page()</span><br><span class="line">    <span class="built_in">print</span>(os.path.join(<span class="string">'images/'</span>, file))</span><br><span class="line">    pdf_file.image(os.path.join(<span class="string">'images/'</span>, file))</span><br><span class="line"></span><br><span class="line">pdf_file.output(<span class="string">'output.pdf'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  整套流程整合起来其实是可以搓出一个支持应用内直接下载 PDF 的 Xposed 模块的，想了想这应用比较小众，而我又没啥需求，还是算了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 逆向 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Screeps: Arena 初体验</title>
      <link href="/posts/2630826759/"/>
      <url>/posts/2630826759/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  在朋友推荐下入坑了这款 RTS 神作，与传统 RTS 游戏不同，Screeps: Arena 使用真 · JavaScript 语言编写脚本来控制你的机器人（Creep）与对方机器人战斗，一旦战斗开始，便无法再做任何输入，最终胜负完全取决于你的 AI 写得有多好。</p><p><img src="screenshot.png" alt=""></p><p>  先贴一个 <a href="https://store.steampowered.com/app/1137320/Screeps_Arena/">Steam 商店链接</a>，相比前作 Screeps: World，Screeps: Arena 采用了 1v1 匹配的对战模式，对新手更加友好（<s>不会暴毙</s>）。一个比较有趣的点是，系统会记录每位玩家不同时期的代码，根据玩家所在的分段来匹配对手，所以大可不必担心一上来就遭到大佬的虐杀~~</p><p>  每个机器人 Creep 都可以携带一些被称之为「BodyPart」的模块，不同的 BodyPart 能给 Creep 提供不同的能力。例如 <code>MOVE</code> 模块提供了移动能力，<code>HEAL</code> 模块提供治疗能力，还有提供攻击、搬运、采矿等等能力的模块，当一个模块受到攻击时，它的能力会随之不断减弱。当所有模块都被破坏，会造成这个 Creep 的死亡，表现为 Creep 从地图上消失，也无法再通过治疗等手段恢复其机能</p><p>  除了可移动的 Creep 外，还有一些不可移动的 Structure，同样拥有各种各样的能力，例如 <code>StructureSpawn</code> 能够消耗能量产生新的 Creep，<code>StructureTower</code> 能够消耗能量攻击或治疗一定范围内的 Creep 等等……</p><hr><p>  这游戏有三种模式，Captute the Flag、Spawn and Spawn 和 Collect and Control</p><p><img src="modes.png" alt=""></p><p>  CTF 模式顾名思义，开局时双方位于地图对角的位置，各有 6 个远程、6 个治疗、2 个肉盾和 2 座塔，共 14 个单位，首先控制 Creep 占据对方 Flag 的一方获得胜利，比较考验玩家的战术把握和 Creep 之间配合作战的能力</p><p><img src="mode-ctf.png" alt=""></p><p>  我的 v1 版本代码采用了「按兵不动，关门打狗」的战术，开局直接窝在家里休息，等待对方冲过来之后配合两座 Tower 将敌方主力部队一举歼灭，然后再冲过去收拾敌方的残兵败将，配合简单的优化竟能达到 1400 分段上下，远远超出了我的预期</p><hr><p>  Spawn and Swamp 模式相对复杂一些，双方各占据地图一侧，初始拥有一个 Spawn 结构和 8000 点能量，通过地图中间的「沼泽地区」展开交锋，率先摧毁敌方 Spawn 即可获得胜利，相比 CTF 模式来说更加考验对于战术和整体局势的把握，也是我认为最有意思的一个模式</p><p><img src="mode-swamp.png" alt=""></p><p>  工欲善其事，必先利其器，最近正在疯狂给 API 做封装和造轮子（<s>顺便练习 TypeScript</s>），以实现更加丝滑的 AI 编写体验，同时也会参考大佬们的一些设计思路和实现方式，代码已经开源至 GitHub，希望能给有兴趣入坑这款游戏的同学提供一些简单的参考：</p><div class="tag link"><a class="link-card" title="Screeps: Arena" href="https://github.com/Mufanc/ScreepsArena"><div class="left"><img src="https://github.com/favicon.ico"></div><div class="right"><p class="text">Screeps: Arena</p><p class="url">https://github.com/Mufanc/ScreepsArena</p></div></a></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 「梦中的桓那兰那」 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++ 宏定义使用手册</title>
      <link href="/posts/3527061138/"/>
      <url>/posts/3527061138/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  在 C++ 中，可以通过宏定义命令 <code>#define</code> 简化代码编写过程，为开发提供极大的便利，但初学时我们常常不能理解该命令的本质，导致代码出现逻辑错误或者无法通过编译。本文总结了一些宏定义的常见用法，打算日后偶尔拿来当个字典用用（</p><h2 id="宏替换发生的时机">宏替换发生的时机</h2><p>  当我们对一些源文件进行编译时，编译器内部实际进行了预处理、编译、汇编和连接几个过程。其中预处理器产生编译器的输出，它实现了以下的功能：</p><ul><li>文件包含</li></ul><p>  将源文件中的 <code>#include</code> 扩展为文件正文，即把包含的 .h 文件找到并展开到 <code>#include</code> 所在位置</p><ul><li>条件编译</li></ul><p>  预处理器根据 <code>#if</code> 和 <code>#ifdef</code> 等编译命令及其后的条件，将源文件中的某部分包含进来或排除在外（通常把排除在外的语句转换成空行）</p><ul><li>宏展开</li></ul><p>  预处理器将源文件中出现的对宏的引用（即 <code>#define</code> 相关定义）展开成相应的宏定义，由预处理器来完成。在这个阶段只是纯粹的字符串替换与展开，没有进行任何计算，理解了这一点，就能有效避免对 <code>#define</code> 命令的误用</p><h2 id="常用宏定义参考">常用宏定义参考</h2><h3 id="无参宏定义">无参宏定义</h3><p>  无参宏的宏名后不带参数，其定义的一般形式为：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> <span class="meta-string">&lt;标识符&gt;</span> <span class="meta-string">&lt;字符串&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><p>  其中的 <code>#</code> 表示这是一条预处理命令。凡是以 <code>#</code> 开头的均为预处理命令。 <code>#define</code> 为宏定义命令。<code>&lt;标识符&gt;</code> 为所定义的宏名。<code>字符串</code> 可以是常数、表达式、格式串等。例如：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 23333</span></span><br></pre></td></tr></tbody></table></figure><p>  这样 MAXN 就被定义为 23333，在宏展开过程中，会将 MAXN 简单的替换为 23333 进行处理。</p><h3 id="有参宏定义">有参宏定义</h3><p>  C++ 语言允许宏带有参数。在宏定义中的参数称为形式参数，在宏调用中的参数称为实际参数。对带参数的宏，在调用中，不仅要进行宏展开，而且要用实参去代换形参。带参宏定义的一般形式为：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> 宏名(<span class="meta-string">&lt;参数表&gt;</span>) 字符串 </span></span><br></pre></td></tr></tbody></table></figure><p>  在字符串中含有各个形参。在使用时调用带参宏调用的一般形式为：宏名（实参表），例如：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> add(x, y) (x + y)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"1 + 1 = "</span> &lt;&lt; <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">1</span>) &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这个「函数」定义了加法，但是没有类型检查，有点类似无模板安全的模板，所以不建议使用这样的方式去定义一个「函数」。</p><h3 id="宏定义中的特殊操作符">宏定义中的特殊操作符</h3><h4 id=""><code>#</code></h4><p>  假如希望在字符串中包含宏参数，在类函数宏的替换部分，可以将 <code>#</code> 符号用作一个预处理运算符，它将把语言符号转化成字符串。例如，如果 <code>x</code> 是一个宏参量，那么 <code>#x</code> 可以把参数名转化成相应的字符串。该过程称为字符串化</p><p>  讲人话，就是相当于在宏参数左右加双引号：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> psqr(n) printf(<span class="meta-string">"The square of '"</span>#n<span class="meta-string">"' is %d\n"</span>, (n)*(n))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">2</span>; <span class="built_in">psqr</span>(n);</span><br><span class="line">    <span class="built_in">psqr</span>(<span class="number">1</span> + <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>输出</span></div>    <div class="hide-content"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The square of 'n' is 4</span><br><span class="line">The square of '1 + 2' is 9</span><br></pre></td></tr></tbody></table></figure></div></div><h4 id="-2"><code>##</code></h4><p>  不同于 <code>#</code> 的操作方式，<code>##</code> 会把宏参数直接<strong>作为代码拼接</strong>到字符串中，例如，定义一个 <code>#define conn(a, b) a##b</code>，在代码中使用 <code>conn(123, 456)</code> 时，最终将被替换为 <code>123456</code>，或者可以像下面那样去使用：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> prtx(n) printf(<span class="meta-string">"x%d = %d\n"</span>, n, x##n)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> x1 = <span class="number">1</span>, x2 = <span class="number">2</span>, x3 = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">prtx</span>(<span class="number">1</span>); </span><br><span class="line">    <span class="built_in">prtx</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">prtx</span>(<span class="number">3</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>输出</span></div>    <div class="hide-content"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x1 = 1</span><br><span class="line">x2 = 2</span><br><span class="line">x3 = 4</span><br></pre></td></tr></tbody></table></figure></div></div><h4 id="和-VA-ARGS"><code>...</code> 和 <code>__VA_ARGS__</code></h4><p>  <code>__VA_ARGS__</code> 是一个可变参数的宏，这个宏是新的 C99 规范中新增的，实现思想就是宏定义中参数列表的最后一个参数为省略号（也就是三个点）。这样预定义宏 <code>__VA_ARGS__</code> 就可以被用在替换部分中，替换省略号所代表的字符串。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pddln(...) printf(<span class="meta-string">"print: %d %d\n"</span>, __VA_ARGS__)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">pddln</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">pddln</span>(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>输出</span></div>    <div class="hide-content"><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print: 1 2</span><br><span class="line">print: 3 4</span><br></pre></td></tr></tbody></table></figure></div></div><h2 id="需要注意的问题">需要注意的问题</h2><p>  在编写代码的过程中，要时刻记住宏定义只是进行简单的字符串替换，否则就可能出现如下的问题：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2 + 2</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; N * N &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  编译运行，程序并没有像预料之中的那样输出 <code>16</code>，而是输出了 <code>8</code>，因为在宏展开过程中只是简单的进行了字符串替换，这段代码在解析后会变成 <code>2 + 2 * 2 + 2</code>，导致结果为 <code>8</code>。解决方法也很简单，在做宏定义时加上括号就可以了</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N (2 + 2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; N * N &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  只要做宏定义的时候时刻记住，宏定义只是简单的替换，<strong>此时真正的编译过程尚未开始</strong>，就不会在这样的问题上出错</p><h2 id="参考-2">参考</h2><ul><li><p><a href="https://www.cnblogs.com/fnlingnzb-learner/p/6903966.html">C++宏定义详解 - Boblim - 博客园</a></p></li><li><p><a href="https://blog.csdn.net/u012611878/article/details/52534622">c/c++中define用法详解及代码示例_不很正派的专栏-CSDN博客</a></p></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> OS Lab </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工训 Linux 计算机串口使用｜软件部分（Any%）</title>
      <link href="/posts/698724079/"/>
      <url>/posts/698724079/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="3-1-准备工作">3.1 - 准备工作</h2><p>  由于 Virtual Box 性能堪忧，我使用 VMWork Workstation 16 作为虚拟机容器，故本节跳过。</p><h2 id="3-2-Linux-操作系统平台">3.2 - Linux 操作系统平台</h2><h3 id="常规路线">常规路线</h3><p>  首先下载并安装好 <code>firstrun.deb</code>，然后在桌面上任意位置右键点击，选择 <code>Open Terminal Here</code>：</p><p><img src="Open_Terminal_Here.png" alt=""></p><p>  在打开的新窗口中输入 <code>/gettips</code> 并回车，可以看到输出了一条路径：</p><p><img src="gettips.png" alt=""></p><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>关于「命令」</span></div>    <div class="hide-content"><p>  这条命令的意思是执行根目录（<code>/</code>）下的 <code>gettips</code> 文件，不得不提的一点是：文件的所谓「格式」与它的扩展名并没有直接关系，扩展名只是作为标识文件格式的一种辅助手段，真正的「格式」只与文件内容有关。</p><p>  观察终端，它的每一步操作都能大致分为几个部分：</p><ul><li>提示符（彩色部分）</li></ul><p>  无论何种系统，提示符大都包含当前的工作路径信息，比如上图中的 <code>~/Desktop</code>，波浪号 <code>~</code> 表示当前用户的主目录，对于 root 用户为 <code>/root</code>，而对于一般用户而言则是 <code>/home/&lt;username&gt;</code>，我们可以使用 <code>pwd</code> 命令查看当前所在完整路径：</p><p><img src="pwd.png" alt=""></p><ul><li>命令</li></ul><p>  命令由用户输入，每一条命令的本质都是在运行一个可执行文件（其实并不一定，此处只是为了简化叙述）。命令后边可以跟参数，命令与参数、参数与参数之间以空格隔开，需要运行的可执行文件可以由绝对路径（比如此处的 <code>/gettips</code>）、相对路径指定，或是系统自动从 <code>PATH</code> 环境变量的内容搜索得到</p><p>  下面给出一个使用相对路径执行的例子：</p><p><img src="gettips%5Brelative%5D.png" alt=""></p><p>  当前目录为 <code>/proc</code>，两个点 <code>..</code> 代表上一级目录，在这里是根目录 <code>/</code>，后面跟 <code>gettips</code> 表示执行上一级目录下的 <code>gettips</code> 文件</p><p>  一个更复杂的例子：</p><p><img src="gettips%5Brelative%5D-2.png" alt=""></p><p>  使用 <code>pwd</code> 命令查得当前所在目录为 <code>/home/mufanc</code>，此时 <code>..</code> 代表上级目录 <code>/home</code>，<code>../..</code> 则代表根目录 <code>/</code></p><p>  最后给出一个使用 <code>PATH</code> 环境变量的例子：</p><p><img src="gettips%5BPATH%5D.png" alt=""></p><p>  可以看到执行第一条命令时找不到 <code>gettips</code> 而报错，第二条命令将根目录 <code>/</code> 加入到了环境变量 <code>PATH</code> 中，第三条命令再次执行 <code>gettips</code> 时，成功获得了输出</p><ul><li>回显（输出）</li></ul><p>  大多数命令都会提供回显，也即该可执行文件的标准输出（stdout）或标准错误（stderr）信息，一般用于显示命令的执行结果或错误信息</p></div></div><p>  使用 <code>cd</code> 命令进入刚才得到的目录，报错提示权限不足，于是先使用 <code>sudo su</code> 命令，提示符由 <code>$</code> 变为 <code>#</code>，表示已经切换到 <code>root</code> 用户，再次执行 <code>cd</code> 即可：</p><p><img src="cd&amp;su.png" alt=""></p><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>关于「权限」</span></div>    <div class="hide-content"><p>  在 Linux 中，每个文件和目录均有一个所有用户（user）和一个属组（group），基本的 UGO-RWX 权限模型定义了不同身份的用户能对这个文件做什么样的事情：</p><table><thead><tr><th style="text-align:center">身份</th><th style="text-align:center">操作</th></tr></thead><tbody><tr><td style="text-align:center">user（本地）｜group（用户组）｜other（其它）</td><td style="text-align:center">read（读）｜write（写）｜execute（执行）</td></tr></tbody></table><ul><li>文件</li></ul><table><thead><tr><th style="text-align:center">权限</th><th style="text-align:center">允许的操作</th></tr></thead><tbody><tr><td style="text-align:center">R</td><td style="text-align:center">读取此文件的内容</td></tr><tr><td style="text-align:center">W</td><td style="text-align:center">向此文件写入数据</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">将此文件作为可执行文件执行</td></tr></tbody></table><ul><li>目录</li></ul><table><thead><tr><th style="text-align:center">权限</th><th style="text-align:center">允许的操作</th></tr></thead><tbody><tr><td style="text-align:center">R</td><td style="text-align:center">列出此目录下的文件</td></tr><tr><td style="text-align:center">W</td><td style="text-align:center">在此目录下增加/删除文件</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">允许 <code>cd</code> 到此目录，或通过 <code>stat</code> 查看目录本身的信息</td></tr></tbody></table><p>  可以使用 <code>stat</code> 命令查看一个文件或目录的所有者和权限信息：</p><p><img src="stat.png" alt=""></p><p>  可以简单地将某一文件或目录的权限信息用 10 个字符表示，例如：</p><ul><li><code>drwxr-x---</code></li></ul><p>  <code>d</code> 表示这是一个目录，其所有者权限为 <code>rwx</code>，组权限为 <code>r-x</code>，其它用户没有任何权限</p><ul><li><code>-rw-rw-r--</code></li></ul><p>  这是一个文件，其所有者和组均可读写，其余用户只读</p><p>  特别地，即使某一文件或目录并未对 root 用户授权，root 用户仍具有访问或修改它的权限</p><p>  我们还可以使用 <code>chown</code> <code>chgrp</code> 命令修改一个文件/目录的所有者或组，使用 <code>chmod</code> 命令修改其权限</p><p><img src="chmod.png" alt=""></p><p>  这里 <code>chmod +r /var/log/hnu</code> 指赋予所有用户对这个目录的读权限，然后再次使用 <code>ls</code>，即可成功列出该目录下的文件。</p><p>  注意 <code>chmod</code> 命令本身也需要一定的权限才能执行成功，但它们超出了本文的范围，这里就不再赘述</p></div></div><p>  现在执行 <code>ls</code> 命令，可以查看当前目录下有哪些文件。添加选项 <code>-l</code>，可以查看每个文件的详细权限和所有者信息；添加选项 <code>-la</code>，可以在此基础上显示隐藏文件（文件名以 <code>.</code> 开头的文件），其中前两项蓝色的 <code>.</code> 和 <code>..</code> 分别表示当前目录（<code>/var/log/hnu</code>）和上级目录（<code>/var/log</code>）。选项 <code>l</code> 和 <code>a</code> 的顺序在这里并不重要，<code>ls -la</code> 和 <code>ls -al</code> 得到的是相同的结果</p><p><img src="ls.png" alt=""></p><p>  也可以使用指定路径的版本 <code>ls -la /var/log/hnu</code>，<code>ls</code> 命令默认会列出当前路径下的文件，添加路径后可以直接指定需要列出的目录，使用绝对路径和相对路径均可：</p><p><img src="ls-2.png" alt=""></p><p>  接着使用 <code>cat</code> 命令将 <code>.answer</code> 文件的内容打到终端上：</p><p><img src="cat.png" alt=""></p><p>  隐约记得实验用这台 Linux 没有默认安装 <code>curl</code>，通过 <code>apt install curl</code> 安装一下即可。</p><p>  最后来玩点花活，不必记住 <code>.answer</code> 文件的内容，我们可以直接将 <code>cat</code> 命令嵌入到 <code>curl</code> 中：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl "132.232.98.70:6363/check?id=************&amp;v=$(cat .answer)"</span><br></pre></td></tr></tbody></table></figure><ul><li>附：选做内容的一种实现方式</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">char</span> path[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">long</span> x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"input the file path: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, path);</span><br><span class="line">    FILE* fp = <span class="built_in">fopen</span>(path, <span class="string">"r"</span>);</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%ld"</span>, &amp;x);  <span class="comment">// NOLINT(cert-err34-c)</span></span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lX"</span>, x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="邪道速通">邪道速通</h3><p>  以上所有的实验内容都是在安装这个 <code>firstrun.deb</code> 之后开始的，包括 <code>.answer</code> 文件里面那串「神秘数字」，也一定是由这个 deb 在安装时生成的，那么我们何不直接把这个 deb 拆了，看看里面都有些什么：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg-deb -x firstrun.deb ./tmp</span><br></pre></td></tr></tbody></table></figure><p>  拆解之后发现内容非常简单，只有一个 <code>firstrun.py</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── firstrun.deb</span><br><span class="line">└── tmp</span><br><span class="line">    └── usr</span><br><span class="line">        └── local</span><br><span class="line">            └── bin</span><br><span class="line">                └── firstrun.py</span><br><span class="line"></span><br><span class="line">4 directories, 2 files</span><br></pre></td></tr></tbody></table></figure><p>  来看看这个 py 文件里都写了些什么东西：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> stat</span><br><span class="line"></span><br><span class="line">gettips = <span class="string">'''#!/usr/bin/python3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import getpass</span></span><br><span class="line"><span class="string">if getpass.getuser() == "root":</span></span><br><span class="line"><span class="string">    print("This command cannot run by root\\n")</span></span><br><span class="line"><span class="string">else:</span></span><br><span class="line"><span class="string">    print("ffffffff\\n")</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">dirs = [<span class="string">"/home/hnu/"</span>,<span class="string">"/usr/bin/"</span>,<span class="string">"/opt/"</span>,<span class="string">"/var/log/"</span>,<span class="string">"/mnt/"</span>,<span class="string">"/etc/"</span>];</span><br><span class="line">subdir = [<span class="string">"csee"</span>,<span class="string">"hnu"</span>,<span class="string">"yuelu"</span>,<span class="string">"tianma"</span>,<span class="string">"fenghuang"</span>];</span><br><span class="line">filename=[<span class="string">".puzzle.txt"</span>,<span class="string">".game.txt"</span>,<span class="string">".answer"</span>]</span><br><span class="line">t = <span class="built_in">int</span>(time.time())</span><br><span class="line">v = t*t;</span><br><span class="line">d = dirs[v%<span class="number">6</span>]</span><br><span class="line">v = v*t</span><br><span class="line">d = d+subdir[v%<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(d):</span><br><span class="line">    os.makedirs(d)</span><br><span class="line">t = <span class="number">5000000000</span>-t</span><br><span class="line"></span><br><span class="line">path = os.path.join(d,filename[t%<span class="number">3</span>]);</span><br><span class="line">file = <span class="built_in">open</span>(path,<span class="string">"w"</span>)</span><br><span class="line">file.write(<span class="built_in">str</span>(t))</span><br><span class="line">file.close()</span><br><span class="line">os.chmod(d,<span class="number">0</span>);</span><br><span class="line">os.chmod(path,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">gettips = gettips.replace(<span class="string">"ffffffff"</span>,d)</span><br><span class="line"></span><br><span class="line">file1 = <span class="built_in">open</span>(<span class="string">"/gettips"</span>,<span class="string">"w"</span>);</span><br><span class="line">file1.write(gettips);</span><br><span class="line">file1.close()</span><br><span class="line">os.chmod(<span class="string">"/gettips"</span>,stat.S_IXUSR|stat.S_IXOTH|stat.S_IXGRP|stat.S_IROTH);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  根据当前时间，随机选取路径和文件名的组合生成谜题，不难发现用 50 亿减去时间戳就是最终的答案，于是我们可以直接构造出最终答案，再把拼凑好字符串粘贴到浏览器地址栏中：</p><p><img src="any%25.png" alt=""></p><h2 id="3-3-Linux-平台串口数据接收">3.3 - Linux 平台串口数据接收</h2><h3 id="常规路线-2">常规路线&nbsp;</h3><ul><li>前置任务：按学习通 3.3.1 节的描述将 .hex 文件下载到单片机上，并测得 UART 串口的波特率</li></ul><p>  由于学习通上所谓「不完整的参考示例」实际上几乎不能用，所以我选择直接重写一遍，并将串口的发送和接收过程做了简单地封装，以便之后的实验使用。</p><p>  在开始编写代码之前，首先需要了解关于 Linux 中「设备」和「文件」的几个基本概念。秉持着「一切皆文件」的设计理念，Linux 中的目录、字符设备、块设备、套接字、管道等东西都可以被映射为文件系统中的一个文件</p><p><img src="dev-files.png" alt="查看 /dev 中的设备文件"></p><p>  这样做最明显的好处是，开发者只需要使用一套 API 即可调取系统中大部分的资源，例如读文件、管道、系统参数、套接字等操作都可以使用 read 调用来完成；而相应的写操作比如修改文件、系统参数、发送串口数据等都可以通过 write 调用来进行</p><p>  Linux 系统向上暴露了许多接口，允许我们通过接口来操作更加底层的硬件和设备，又有大佬将这些接口封装成了各种各样的库，这样一来我们就能很方便的调用系统资源了。查阅相关文档（这里力荐 <a href="https://man7.org/">https://man7.org/</a>，内容非常丰富），编写工具类代码 <code>serial.cpp</code> 和 <code>serial.h</code>：</p><figure class="highlight c++"><figcaption><span>serial.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cerrno&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/epoll.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/termios.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> err_check(code) <span class="meta-keyword">if</span> ((code) &lt; 0) {    \</span></span><br><span class="line"><span class="meta">    printf(<span class="meta-string">"Error: %s\n"</span>, strerror(errno));  \</span></span><br><span class="line"><span class="meta">    _exit(1);                                \</span></span><br><span class="line"><span class="meta">}</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">serial::<span class="built_in">serial</span>(<span class="keyword">const</span> <span class="keyword">char</span> *device_path, <span class="keyword">speed_t</span> baud_rate) {</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * O_RDWR 表示以读写模式 (read &amp; write) 打开文件</span></span><br><span class="line"><span class="comment">     * 参考：https://man7.org/linux/man-pages/man3/open.3p.html</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">err_check</span>(device = <span class="built_in">open</span>(device_path, O_RDWR | O_NOCTTY))</span><br><span class="line"></span><br><span class="line">    termios attrs {};</span><br><span class="line">    <span class="built_in">tcgetattr</span>(device, &amp;attrs);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置波特率</span></span><br><span class="line"><span class="comment">     * 参考：</span></span><br><span class="line"><span class="comment">     * - https://man7.org/linux/man-pages/man3/cfsetispeed.3p.html</span></span><br><span class="line"><span class="comment">     * - https://man7.org/linux/man-pages/man3/cfsetospeed.3p.html</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">err_check</span>(<span class="built_in">cfsetispeed</span>(&amp;attrs, baud_rate))</span><br><span class="line">    <span class="built_in">err_check</span>(<span class="built_in">cfsetospeed</span>(&amp;attrs, baud_rate))</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * （懒得翻译了，将就看吧，大概就是关闭一些默认的功能）</span></span><br><span class="line"><span class="comment">     * Input flags - Turn off input processing</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * convert break to null byte, no CR to NL translation,</span></span><br><span class="line"><span class="comment">     * no NL to CR translation, don't mark parity errors or breaks</span></span><br><span class="line"><span class="comment">     * no input parity check, don't strip high bit off,</span></span><br><span class="line"><span class="comment">     * no XON/XOFF software flow control</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    attrs.c_iflag &amp;= ~( BRKINT | ICRNL | INPCK | ISTRIP | IXON | IXOFF );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Output flags - Turn off output processing</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * no CR to NL translation, no NL to CR-NL translation,</span></span><br><span class="line"><span class="comment">     * no NL to CR translation, no column 0 CR suppression,</span></span><br><span class="line"><span class="comment">     * no Ctrl-D suppression, no fill characters, no case mapping,</span></span><br><span class="line"><span class="comment">     * no local output</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    attrs.c_oflag &amp;= ~( OPOST | ONLCR | OCRNL );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * No line processing</span></span><br><span class="line"><span class="comment">     * echo off, echo newline off, canonical mode off,</span></span><br><span class="line"><span class="comment">     * extended input processing off, signal chars off</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    attrs.c_lflag &amp;= ~( ECHO | ICANON | IEXTEN | ISIG );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Turn off character processing</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     * clear current char size mask, no parity checking,</span></span><br><span class="line"><span class="comment">     * no output processing, force 8 bit input</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    attrs.c_cflag &amp;= ~( CSIZE | PARENB );</span><br><span class="line">    attrs.c_cflag |= CS8;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * One input byte is enough to return from read()</span></span><br><span class="line"><span class="comment">     * Inter-character timer off</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    attrs.c_cc[VMIN]  = <span class="number">1</span>;</span><br><span class="line">    attrs.c_cc[VTIME] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置终端参数，所有改动立即生效</span></span><br><span class="line"><span class="comment">     * 参考：https://man7.org/linux/man-pages/man3/tcsetattr.3p.html</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">err_check</span>(<span class="built_in">tcsetattr</span>(device, TCSANOW, &amp;attrs))</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重新打开设备文件以应用新的终端参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">close</span>(device);</span><br><span class="line">    <span class="built_in">err_check</span>(device = <span class="built_in">open</span>(device_path, O_RDWR | O_NOCTTY))</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一个新的 epoll 实例，并返回一个用于控制的文件描述符</span></span><br><span class="line"><span class="comment">     * 参考：https://man7.org/linux/man-pages/man7/epoll.7.html</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">err_check</span>(epfd = <span class="built_in">epoll_create</span>(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    epoll_event event {</span><br><span class="line">        .events = EPOLLIN | EPOLLET,  <span class="comment">// 当对端变为可读时触发事件</span></span><br><span class="line">        .data = {</span><br><span class="line">            .fd = device</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将这个事件添加到 epoll 的监听列表中</span></span><br><span class="line"><span class="comment">     * 参考：https://man7.org/linux/man-pages/man2/epoll_ctl.2.html</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">err_check</span>(<span class="built_in">epoll_ctl</span>(epfd, EPOLL_CTL_ADD, device, &amp;event))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">serial::~<span class="built_in">serial</span>() {</span><br><span class="line">    (~device) &amp;&amp; <span class="built_in">close</span>(device);</span><br><span class="line">    (~epfd) &amp;&amp; <span class="built_in">close</span>(epfd);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">std::vector&lt;uchar&gt; <span class="title">serial::read</span><span class="params">(<span class="keyword">size_t</span> n)</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    <span class="keyword">size_t</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function">std::vector&lt;uchar&gt; <span class="title">buffer</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (count &lt; n) {</span><br><span class="line">        epoll_event event {};</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 等待串口对端发来数据</span></span><br><span class="line"><span class="comment">         * 参考：https://man7.org/linux/man-pages/man2/epoll_wait.2.html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="built_in">epoll_wait</span>(epfd, &amp;event, <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 读取数据，然后根据读取到的数据数量决定是否需要继续读取</span></span><br><span class="line"><span class="comment">         * 参考：https://man7.org/linux/man-pages/man3/read.3p.html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        count += ::<span class="built_in">read</span>(device, &amp;buffer[count], n - count);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> buffer;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">serial::write</span><span class="params">(<span class="keyword">const</span> std::vector&lt;uchar&gt; &amp;data)</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    <span class="keyword">size_t</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (count &lt; data.<span class="built_in">size</span>()) {</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 向串口写入数据</span></span><br><span class="line"><span class="comment">         * 参考：https://man7.org/linux/man-pages/man3/write.3p.html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        count += ::<span class="built_in">write</span>(device, &amp;data[count], data.<span class="built_in">size</span>() - count);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><figcaption><span>serial.h</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> SERIAL_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERIAL_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/termios.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> uchar;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">serial</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> device = <span class="number">-1</span>, epfd = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">serial</span>(<span class="keyword">const</span> <span class="keyword">char</span> *device_path, <span class="keyword">speed_t</span> baud_rate);</span><br><span class="line">    ~<span class="built_in">serial</span>();</span><br><span class="line">    <span class="function">std::vector&lt;uchar&gt; <span class="title">read</span><span class="params">(<span class="keyword">size_t</span> n)</span> <span class="keyword">const</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">const</span> std::vector&lt;uchar&gt; &amp;data)</span> <span class="keyword">const</span></span>;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//SERIAL_H</span></span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  整体代码量并不大，<code>.cpp</code> 和 <code>.h</code> 加起来还不到 200 行，下面简述一下它各个部分的工作过程：</p><ul><li>构造函数</li></ul><p>  首先通过 open 调用打开指定的字符设备，并将该设备的文件描述付记录到 device 成员变量中，这里用到了一个宏定义 <code>err_check</code>，当括号内的表达式值小于 0（发生错误）时，打印一条错误信息并退出程序。</p><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>关于「文件描述符」</span></div>    <div class="hide-content"><p>  对于每一个进程，一个文件描述符会与一个打开的文件相对应，但文件描述付和磁盘中的文件并不存在一一对应的关系，换句话说，不同的文件描述符也可能会指向同一个文件（比如一个文件被同一个进程多次打开）。</p><p>  系统为每一个进程维护了一个文件描述符表，该表的值都是从 0 开始的，程序刚刚启动的时候会默认获取三个文件描述符，0 是标准输入，1 是标准输出，2 是标准错误，所以如果此时去打开一个新的文件，它的文件描述符将为 3。可以通过命令 <code>ls -l /proc/self/fd</code> 简单地验证这一点，可以看到除了默认的文件描述符 0、1、2 外，还有执行该命令时打开的 <code>/proc/237598/fd</code> 文件，其值为 3</p><p><img src="proc-self-fd.png" alt=""></p><p>  值得注意的是，<code>/proc/self</code> 实际上为指向当前进程 <code>/proc/&lt;pid&gt;</code> 目录的一个软链接，所以才会出现看似访问了 <code>/proc/self/fd</code>，实则打开了 <code>/proc/237598/fd</code> 的情况，与 Windows 中的快捷方式有一定相似之处</p></div></div><p>  在设置波特率等参数之后，再次打开设备文件以应用新的参数，然后通过 epoll 注册监听器，当文件描述符变为可读时会产生一个事件，这样我们就可以对串口进行读取了</p><ul><li>read &amp; write</li></ul><p>  这两个函数的功能比较单一，<code>read</code> 方法接收一个参数 <code>n</code>， 在读取到 <code>n</code> 字节数据后返回；<code>write</code> 方法接收一个无符号字符类型的 <code>vector</code>，然后循环将数据写入串口</p><p>  下面开始编写主程序，单片机连接到电脑之后会在 <code>/dev</code> 中映射一个 <code>/dev/ttyUSB0</code> 设备，只需要打开它并且读取 13 字节的数据（<code>AA 55</code> 与 11 字节的「序列号」）即可</p><figure class="highlight c++"><figcaption><span>main.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">   <span class="function">serial <span class="title">pipe</span><span class="params">(<span class="string">"/dev/ttyUSB0"</span>, B4800)</span></span>;</span><br><span class="line"></span><br><span class="line">   std::vector&lt;uchar&gt; response = pipe.<span class="built_in">read</span>(<span class="number">13</span>);</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">auto</span> ch : response) {</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"%02X"</span>, ch);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="dev-ttyUSB0.png" alt=""></p><p>  注意这里 <code>/dev/ttyUSB0</code> 的文件权限是 <code>rw-rw----</code>，所以我们在执行程序时需要切换到 root 用户才能正常读写设备</p><h3 id="邪道速通-2">邪道速通&nbsp;</h3><p>  如果你的电脑恰好有 Python 环境，那么还有一种更简单的方式来完成这个实验，通过 <code>pip install pyserial</code> 完成串口读写模块的安装，然后使用下面的代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> serial.tools.list_ports</span><br><span class="line"><span class="keyword">from</span> serial <span class="keyword">import</span> Serial</span><br><span class="line"></span><br><span class="line">device = <span class="built_in">list</span>(serial.tools.list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> baud <span class="keyword">in</span> [<span class="number">1200</span>, <span class="number">1800</span>, <span class="number">2400</span>, <span class="number">4800</span>, <span class="number">9600</span>, <span class="number">19200</span>, <span class="number">38400</span>, <span class="number">57600</span>, <span class="number">115200</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'Trying [<span class="subst">{baud:&gt;6d}</span>]: '</span>)</span><br><span class="line">    serial = Serial(device, baud, timeout=<span class="number">2</span>)</span><br><span class="line">    data = serial.read(<span class="number">13</span>)</span><br><span class="line">    <span class="keyword">if</span> data[:<span class="number">2</span>] == <span class="string">b'\xaa\x55'</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">''</span>.join(<span class="built_in">map</span>(<span class="keyword">lambda</span> ch: <span class="string">f'<span class="subst">{ch:<span class="number">0</span>&gt;2X}</span>'</span>, data[<span class="number">2</span>:])))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'failed.'</span>)</span><br><span class="line">    serial.close()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  显然，常用的波特率并不多，所以只需要枚举这些波特率，并判断读到的前两个字节是不是 <code>AA 55</code> 就行了，甚至不需要用到虚拟机</p><h2 id="3-4-串口数据收发与测量">3.4 - 串口数据收发与测量</h2><h3 id="常规路线-3">常规路线&nbsp;&nbsp;</h3><p>  按照惯例，还是先来讲讲常规路线，简单分析下需求，我这里把学习通上的描述整理了一下，整个实验过程大致分为 4 个步骤：</p><br><ul><li>读「序列号」</li></ul><p>  下载程序后，单片机将使用 1200 波特率发送自身序列号，格式同上一节课（3.3 节内容）相同，请记录下该序列号。</p><br><ul><li>读取「密码」</li></ul><p>  向串口写入自己的学号，格式为 <code>0xAA</code> <code>0x55</code> 十二位学号数字，例如学号 202201100203，应该通过串口发送以下数据:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AA 55 02 00 02 02 00 01 01 00 00 02 00 03</span><br></pre></td></tr></tbody></table></figure><p>  STC 单片机接收到学号后会发送第一串密码，密码长度为 4 字节。例如，收到以下密码串：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AA 55 0A 00 00 00 00 00 00 C9 34 3F 5D </span><br></pre></td></tr></tbody></table></figure><p>  其中 <code>AA 55</code> 为前导串，<code>0A</code> 表示起始字节是第 10 字节，此时密码为 <code>C9 34 3F 5D</code></p><br><ul><li>回送「密码」</li></ul><p>  请将解析出该串密码并原样发回给串口，STC 单品机收到返回后会继续发送下一串密码，请继续解析出该串密码并原样发回给串口……</p><p>  以此往复，将收到的最后一串密码记录下来。</p><br><ul><li>提交至服务器</li></ul><p>  将学号、序列号、最后一串密码发送到课程后台，上送命令语法为：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl "132.232.98.70:6363/checkSecret?id=学号&amp;v=序列号&amp;s=密码"</span><br></pre></td></tr></tbody></table></figure><p>  P.S. 这本质上就是给服务器发个 GET 请求，所以只需要复制 ip 地址及后面的部分粘贴到浏览器地址栏就行了</p><p><img src="server-get.png" alt=""></p><br><p>  想用 C++ 直接发请求不是很方便，所以最后一步留着手动搞，让代码来帮我们完成前 3 步即可。继续使用上次的工程文件，然后将 <code>main.cpp</code> 修改成下面的内容：</p><figure class="highlight c++"><figcaption><span>main.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">format</span><span class="params">(<span class="keyword">const</span> std::vector&lt;uchar&gt; &amp;data)</span> </span>{</span><br><span class="line">    <span class="function">std::string <span class="title">str</span><span class="params">(<span class="number">2</span> * data.size() + <span class="number">1</span>, <span class="string">'\x00'</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.<span class="built_in">size</span>(); i++) {</span><br><span class="line">        <span class="built_in">sprintf</span>(&amp;str[i * <span class="number">2</span>], <span class="string">"%02X"</span>, data[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"&gt; "</span>);</span><br><span class="line">    std::string student; std::cin &gt;&gt; student;</span><br><span class="line">    <span class="keyword">const</span> std::vector&lt;uchar&gt; prefix = { <span class="number">0xAA</span>, <span class="number">0x55</span> };</span><br><span class="line"></span><br><span class="line">    <span class="function">serial <span class="title">pipe</span><span class="params">(<span class="string">"/dev/ttyUSB0"</span>, B1200)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取序列号</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, format(pipe.<span class="built_in">read</span>(<span class="number">13</span>)).<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将学号信息写入串口</span></span><br><span class="line">    std::vector&lt;uchar&gt; data = prefix;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : student) {</span><br><span class="line">        data.<span class="built_in">push_back</span>(ch - <span class="string">'0'</span>);</span><br><span class="line">    }</span><br><span class="line">    pipe.<span class="built_in">write</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">260</span>; i++) {</span><br><span class="line">        pipe.<span class="built_in">read</span>(<span class="number">2</span>);                                    <span class="comment">// 读掉 AA 55</span></span><br><span class="line">        <span class="keyword">int</span> position = pipe.<span class="built_in">read</span>(<span class="number">1</span>)[<span class="number">0</span>];                  <span class="comment">// 读取起始字节位置</span></span><br><span class="line">        pipe.<span class="built_in">read</span>(position - <span class="number">4</span>);                         <span class="comment">// 读掉多余的字节</span></span><br><span class="line">        data = pipe.<span class="built_in">read</span>(<span class="number">4</span>);                             <span class="comment">// 读取 4 字节的「密码」</span></span><br><span class="line"></span><br><span class="line">        std::string passwd = format(data);               <span class="comment">// 将「密码」格式化为易读的格式</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"[%3d]: %s\r"</span>, i, passwd.<span class="built_in">c_str</span>());</span><br><span class="line">        <span class="built_in">fflush</span>(stdout);                                  <span class="comment">// 刷新输出缓冲区</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将 AA 55 插入到收到的「密码」之前</span></span><br><span class="line">        data.<span class="built_in">insert</span>(data.<span class="built_in">begin</span>(), prefix.<span class="built_in">begin</span>(), prefix.<span class="built_in">end</span>());</span><br><span class="line">        pipe.<span class="built_in">write</span>(data);                                <span class="comment">// 将「密码」发送回单片机</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  运行程序后输入学号，便会自动开始串口通信过程并不断刷新「密码」的值，循环 260（&gt; 256）次后自动停止，代码相较上次实验而言只是改变了输入输出逻辑，并没有用到什么新的技术，在这里就不做过多解析了</p><h3 id="邪道速通-3">邪道速通&nbsp;&nbsp;</h3><p>  还是熟悉的 Python，这次顺便装上 <code>httpx</code> 模块，循环足够次数后直接向服务器发起 GET 请求，真正做到「一键实验」：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> serial.tools.list_ports</span><br><span class="line"><span class="keyword">from</span> serial <span class="keyword">import</span> Serial</span><br><span class="line"></span><br><span class="line">student = <span class="built_in">input</span>(<span class="string">'学号：'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes2string</span>(<span class="params">_data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">f'<span class="subst">{ch:<span class="number">0</span>&gt;2X}</span>'</span> <span class="keyword">for</span> ch <span class="keyword">in</span> _data])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = <span class="string">b'\xaa\x55'</span> + <span class="built_in">bytes</span>([<span class="built_in">ord</span>(ch) - <span class="built_in">ord</span>(<span class="string">'0'</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> student])</span><br><span class="line">pipe = Serial(<span class="built_in">list</span>(serial.tools.list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>], <span class="number">1200</span>)</span><br><span class="line"></span><br><span class="line">serial, passwd = bytes2string(pipe.read(<span class="number">13</span>)[<span class="number">2</span>:]), <span class="literal">None</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f'序列号：<span class="subst">{serial}</span>'</span>)</span><br><span class="line"></span><br><span class="line">pipe.write(data)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">260</span>):</span><br><span class="line">    pipe.read(<span class="number">2</span>)                            <span class="comment"># 读掉 AA 55</span></span><br><span class="line">    distance = <span class="built_in">list</span>(pipe.read(<span class="number">1</span>))[<span class="number">0</span>]        <span class="comment"># 读取起始字节位置</span></span><br><span class="line">    pipe.read(distance - <span class="number">4</span>)                 <span class="comment"># 读掉多余的字节</span></span><br><span class="line">    passwd = pipe.read(<span class="number">4</span>)                   <span class="comment"># 读取 4 字节的「密码」</span></span><br><span class="line">    data = bytes2string(passwd)             <span class="comment"># 将「密码」格式化为易读的格式</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'[<span class="subst">{i:&gt;3d}</span>]: <span class="subst">{data}</span>'</span>, end=<span class="string">'\r'</span>)</span><br><span class="line">    pipe.write(<span class="string">b'\xaa\x55'</span> + passwd)        <span class="comment"># 将「密码」发送回单片机</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'\n'</span>)</span><br><span class="line">resp = httpx.get(<span class="string">f'http://132.232.98.70:6363/checkSecret?id=<span class="subst">{student}</span>&amp;s=<span class="subst">{data}</span>&amp;v=<span class="subst">{serial}</span>'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f'已提交至服务器，有效成绩：<span class="subst">{resp.text}</span>'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="3-6-RS485-信号的测量">3.6 - RS485 信号的测量</h2><h3 id="常规路线-4">常规路线&nbsp;&nbsp;&nbsp;</h3><p>  首先测得 A 板的波特率和序列号并记录，然后拨动 B 板摇杆，直至示波器测得的波特率与 A 板波特率一致，编写 Python 代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> serial.tools <span class="keyword">import</span> list_ports</span><br><span class="line"><span class="keyword">from</span> serial <span class="keyword">import</span> Serial</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes2string</span>(<span class="params">_data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">f'<span class="subst">{ch:<span class="number">0</span>&gt;2X}</span>'</span> <span class="keyword">for</span> ch <span class="keyword">in</span> _data])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">string2bytes</span>(<span class="params">_data</span>):</span></span><br><span class="line">    arr = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(_data), <span class="number">2</span>):</span><br><span class="line">        arr.append(<span class="built_in">int</span>(_data[i:i+<span class="number">2</span>], <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(arr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">student = <span class="built_in">input</span>(<span class="string">'学号：'</span>)</span><br><span class="line">baud = <span class="built_in">input</span>(<span class="string">'波特率：'</span>)</span><br><span class="line">serial = string2bytes(<span class="built_in">input</span>(<span class="string">'序列号：'</span>))</span><br><span class="line"></span><br><span class="line">data = <span class="string">b'\xaa\x55'</span> + serial + <span class="built_in">bytes</span>([<span class="built_in">ord</span>(ch) - <span class="built_in">ord</span>(<span class="string">'0'</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> student])</span><br><span class="line">pipe = Serial(<span class="built_in">list</span>(list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>], baud)</span><br><span class="line"></span><br><span class="line">pipe.write(data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f'密码：<span class="subst">{bytes2string(pipe.read(<span class="number">6</span>)[<span class="number">2</span>:])}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><p>  按照提示输入相应信息即可获得「密码」，向服务器提交即可</p><h3 id="邪道速通-4">邪道速通&nbsp;&nbsp;&nbsp;</h3><p>  这次实验想要邪道速通稍微有些难度，首先想到一个比较猥琐的办法是暴力枚举波特率，将 A、B 板子按序连接好，然后使用下面的 Python 脚本：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> serial.tools <span class="keyword">import</span> list_ports</span><br><span class="line"><span class="keyword">from</span> serial <span class="keyword">import</span> Serial</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes2string</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">f'<span class="subst">{ch:<span class="number">0</span>&gt;2X}</span>'</span> <span class="keyword">for</span> ch <span class="keyword">in</span> data])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detect_baud_rate</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">internal</span>():</span></span><br><span class="line">        device = <span class="built_in">list</span>(list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> baud <span class="keyword">in</span> [<span class="number">1200</span>, <span class="number">1800</span>, <span class="number">2400</span>, <span class="number">4800</span>, <span class="number">9600</span>, <span class="number">19200</span>, <span class="number">38400</span>, <span class="number">57600</span>, <span class="number">115200</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f'Trying [<span class="subst">{baud:&gt;6d}</span>]...'</span>, end=<span class="string">'\r'</span>)</span><br><span class="line">            serial = Serial(device, baud, timeout=<span class="number">1</span>)</span><br><span class="line">            data = serial.read(<span class="number">6</span>)</span><br><span class="line">            <span class="keyword">if</span> data[:<span class="number">2</span>] == <span class="string">b'\xaa\x55'</span>:</span><br><span class="line">                <span class="keyword">return</span> data[<span class="number">2</span>:], baud</span><br><span class="line">            serial.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        serial, baud = internal()</span><br><span class="line">        <span class="keyword">if</span> serial:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">return</span> serial, baud</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'请调节 B 板波特率，然后再试一次！'</span>, end=<span class="string">'\r'</span>)</span><br><span class="line">        <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    serial, baud = detect_baud_rate()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'序列号: <span class="subst">{bytes2string(serial)}</span>, 波特率：<span class="subst">{baud}</span>'</span>)</span><br><span class="line"></span><br><span class="line">    student = <span class="built_in">input</span>(<span class="string">'学号：'</span>)</span><br><span class="line">    data = <span class="string">b'\xaa\x55'</span> + serial + <span class="built_in">bytes</span>([<span class="built_in">ord</span>(ch) - <span class="built_in">ord</span>(<span class="string">'0'</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> student])</span><br><span class="line"></span><br><span class="line">    pipe = Serial(<span class="built_in">list</span>(list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>], baud)</span><br><span class="line">    pipe.write(data)</span><br><span class="line"></span><br><span class="line">    passwd = bytes2string(pipe.read(<span class="number">6</span>)[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'密码：<span class="subst">{passwd}</span>'</span>)</span><br><span class="line"></span><br><span class="line">    resp = httpx.get(<span class="string">f'http://132.232.98.70:6363/check485?id=<span class="subst">{student}</span>&amp;v=<span class="subst">{bytes2string(serial)}</span>&amp;s=<span class="subst">{passwd}</span>'</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'已提交至服务器，返回信息：<span class="subst">{resp.text}</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  经测试当输入的序列号不正确时 A 板不会有回应，故无法在只操作 B 板改变其波特率的情况下自动探测出 A 板的波特率，只能通过不断手动点按 K3 迫使 A 板发出串口信号，多少有些不够优雅。</p><hr><p>  但为什么一定要用到板子呢？如果我们能够直接生成出一组合法的密码和序列号信息，那么便可以摆脱板子的依赖，迅速完成实验。</p><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>破译过程</span></div>    <div class="hide-content"><p>  随便喂几组学号进去找找规律，不难发现「密码」所有位取异或与「序列号」所有位取异或得到的数是相同的。下面开始分析，首先定义几个工具函数：</p><ul><li><p><code>bytes2string(data)</code> 用于将 bytes 转换为十六进制字符串</p></li><li><p><code>string2bytes(string)</code> 上述过程的逆</p></li><li><p><code>encode</code> 将纯数字字符串编码为 bytes，如 <code>encode('1234')</code> 为 <code>b'\x01\x02\x03\x04'</code></p></li></ul><p>  事先测好一张 A 板的参数，然后编写串口读写及转换函数：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_passwd</span>(<span class="params">student</span>):</span></span><br><span class="line">    data = <span class="string">b'\xaa\x55'</span> + string2bytes(<span class="string">'B3224BF4'</span>) + encode(student)  <span class="comment"># 序列号 B3224BF4</span></span><br><span class="line">    pipe = Serial(<span class="built_in">list</span>(list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>], <span class="number">1200</span>)  <span class="comment"># 波特率 1200</span></span><br><span class="line">    pipe.write(data)</span><br><span class="line">    data = pipe.read(<span class="number">6</span>)</span><br><span class="line">    <span class="keyword">assert</span> data[:<span class="number">2</span>] == <span class="string">b'\xaa\x55'</span></span><br><span class="line">    <span class="keyword">return</span> bytes2string(data[<span class="number">2</span>:])</span><br></pre></td></tr></tbody></table></figure><p>  做一些简单的测试，发现前 9 字节对「密码」没有任何影响，修改掉前 9 位也不影响提交：</p><p><img src="high-9-chars.png" alt=""></p><p>  从提交 url 上也能看出这一点，当输入的 id 小于 3 个字符时，返回 Internal Server Error；而大于 3 个字符时，任意修改前面的字符不会对结果造成影响：</p><p><img src="submit-last-3-chars.png" alt=""></p><p>  由上面提到过的「XOR 不变性」，选取 1 - 7 的二进制形式再次测试：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">'Serial Number: B3 22 4B F4'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    student = <span class="string">f'<span class="subst">{i:<span class="number">0</span>&gt;3b}</span>'</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'<span class="subst">{<span class="string">" "</span>.join(student)}</span> -&gt; <span class="subst">{get_passwd(<span class="string">"000000000"</span> + student)}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><p>  设序列号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">S_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">S_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，输入的末 3 字节为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，密码为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">P_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，得到的结果如下：</p><div style="width: 60%; margin: auto;"><table><thead><tr><th style="text-align:center">D0</th><th style="text-align:center">D1</th><th style="text-align:center">D2</th><th style="text-align:center"></th><th style="text-align:center">P0</th><th style="text-align:center">P1</th><th style="text-align:center">P2</th><th style="text-align:center">P3</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">-&gt;</td><td style="text-align:center">22</td><td style="text-align:center">F4</td><td style="text-align:center">B3</td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">-&gt;</td><td style="text-align:center"><span class="p blue">23</span></td><td style="text-align:center"><span class="p green">F5</span></td><td style="text-align:center">B3</td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">-&gt;</td><td style="text-align:center">22</td><td style="text-align:center"><span class="p green">F5</span></td><td style="text-align:center"><span class="p purple">B2</span></td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">-&gt;</td><td style="text-align:center"><span class="p blue">23</span></td><td style="text-align:center">F4</td><td style="text-align:center"><span class="p purple">B2</span></td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">-&gt;</td><td style="text-align:center"><span class="p blue">23</span></td><td style="text-align:center">F4</td><td style="text-align:center"><span class="p purple">B2</span></td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">-&gt;</td><td style="text-align:center">22</td><td style="text-align:center"><span class="p green">F5</span></td><td style="text-align:center"><span class="p purple">B2</span></td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">-&gt;</td><td style="text-align:center"><span class="p blue">23</span></td><td style="text-align:center"><span class="p green">F5</span></td><td style="text-align:center">B3</td><td style="text-align:center">4B</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">-&gt;</td><td style="text-align:center">22</td><td style="text-align:center">F4</td><td style="text-align:center">B3</td><td style="text-align:center">4B</td></tr></tbody></table></div><p>  观察可得 P3 = S2，P0 = S0 ^ D0 ^ D2，P1 = S0 ^ D1 ^ D2，P2 = S0 ^ D0 ^ D1</p></div></div><p>  最终得到以下代码，运行以后直接输入学号即可：</p><div class="note orange icon simple"><i class="note-icon fas fa-car-crash"></i><p>加密逻辑疑似被工训改了，下面代码可能会返回 NOK，研究中……</p></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes2string</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">f'<span class="subst">{ch:<span class="number">0</span>&gt;2X}</span>'</span> <span class="keyword">for</span> ch <span class="keyword">in</span> data])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([<span class="built_in">ord</span>(ch) - <span class="built_in">ord</span>(<span class="string">'0'</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> data])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    serial = <span class="built_in">bytes</span>(randint(<span class="number">0</span>, <span class="number">255</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>))  <span class="comment"># randbytes(4) for Python 3.9+</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'序列号：<span class="subst">{bytes2string(serial)}</span>'</span>)</span><br><span class="line"></span><br><span class="line">    student = <span class="built_in">input</span>(<span class="string">'学号：'</span>)</span><br><span class="line">    data = encode(student[-<span class="number">3</span>:])</span><br><span class="line"></span><br><span class="line">    passwd = [<span class="number">0</span>] * <span class="number">4</span></span><br><span class="line">    passwd[<span class="number">0</span>] = serial[<span class="number">1</span>] ^ data[<span class="number">0</span>] ^ data[<span class="number">2</span>]</span><br><span class="line">    passwd[<span class="number">1</span>] = serial[<span class="number">3</span>] ^ data[<span class="number">1</span>] ^ data[<span class="number">2</span>]</span><br><span class="line">    passwd[<span class="number">2</span>] = serial[<span class="number">0</span>] ^ data[<span class="number">0</span>] ^ data[<span class="number">1</span>]</span><br><span class="line">    passwd[<span class="number">3</span>] = serial[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    passwd = bytes2string(passwd)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'密码：<span class="subst">{passwd}</span>'</span>)</span><br><span class="line"></span><br><span class="line">    resp = httpx.get(</span><br><span class="line">        <span class="string">f'http://132.232.98.70:6363/check485'</span>,</span><br><span class="line">        params={</span><br><span class="line">            <span class="string">'id'</span>: student,</span><br><span class="line">            <span class="string">'v'</span>: bytes2string(serial),</span><br><span class="line">            <span class="string">'s'</span>: passwd</span><br><span class="line">        }</span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'已提交至服务器，返回信息：<span class="subst">{resp.text}</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="3-7-RS485-总线数据收发">3.7 - RS485 总线数据收发</h2><h3 id="常规路线-5">常规路线&nbsp;&nbsp;&nbsp;&nbsp;</h3><p>  本次实验中 B 板只起到一个转发器的作用，整体实现逻辑与 3.4 节非常相似。值得注意的是，在第三点要求中 A 板不再告诉我们需要接收的数据量：</p><blockquote><p>  A 板单片机接收到学号后会每 300ms 发送第一串密码，密码长度为 4 字节。请将解析出该串密码并在 150ms 内原样发回给串口。STC 单品机收到返回后会继续发送下一串密码，请继续解析出该串密码并在 150ms 内原样发回给串口。以此往复，将收到的最后一串密码记录下来。</p><p>  例如，收到以下密码串</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AA 55 00 00 00 00 00 C9 34 3F 5D</span><br></pre></td></tr></tbody></table></figure><p>  其中 AA 55 为前导串，最后 4 个字节是密码，请将密码原样发回给串口。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AA 55 C9 34 3F 5D </span><br></pre></td></tr></tbody></table></figure></blockquote><p>  所以这一次使用非阻塞的 <code>read_all()</code> 函数来读取串口数据，从第一次读到非空数据时开始记录，直到再次读到空数据，将已经读到的部分存入缓冲，buffer 的最后 4 个字节就是「密码」：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> serial.tools.list_ports</span><br><span class="line"><span class="keyword">from</span> serial <span class="keyword">import</span> Serial</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">prefix, student = <span class="string">b'\xAA\x55'</span>, <span class="built_in">input</span>(<span class="string">'学号：'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes2string</span>(<span class="params">_data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">f'<span class="subst">{ch:<span class="number">0</span>&gt;2X}</span>'</span> <span class="keyword">for</span> ch <span class="keyword">in</span> _data])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pipe = Serial(<span class="built_in">list</span>(serial.tools.list_ports.comports()[<span class="number">0</span>])[<span class="number">0</span>], <span class="number">1200</span>)  <span class="comment"># 打开串口</span></span><br><span class="line"></span><br><span class="line">data, passwd = pipe.read(<span class="number">6</span>), <span class="literal">None</span>  <span class="comment"># 读「序列号」</span></span><br><span class="line"><span class="keyword">assert</span> data.startswith(prefix)</span><br><span class="line"></span><br><span class="line">serial = bytes2string(data[<span class="number">2</span>:])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f'序列号：<span class="subst">{serial}</span>'</span>)</span><br><span class="line"></span><br><span class="line">pipe.write(prefix + <span class="built_in">bytes</span>([<span class="built_in">ord</span>(ch) - <span class="built_in">ord</span>(<span class="string">'0'</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> student]))  <span class="comment"># 向串口写入学号</span></span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">buffer, history = [], [<span class="string">''</span>] * <span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    sleep(<span class="number">0.05</span>)</span><br><span class="line">    data = pipe.read_all()  <span class="comment"># 尝试读取数据（非阻塞）</span></span><br><span class="line">    <span class="keyword">if</span> data:  <span class="comment"># 如果读到的数据不为空则存入缓冲区</span></span><br><span class="line">        buffer.extend(data)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    data = <span class="built_in">bytes</span>(buffer)</span><br><span class="line">    <span class="keyword">if</span> data.startswith(prefix):  <span class="comment"># 丢弃不合法的数据</span></span><br><span class="line">        passwd = data[-<span class="number">4</span>:]</span><br><span class="line"></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f'[<span class="subst">{count:&gt;3d}</span>]: <span class="subst">{bytes2string(passwd)}</span>'</span>, end=<span class="string">'\r'</span>)</span><br><span class="line"></span><br><span class="line">        pipe.write(prefix + passwd)  <span class="comment"># 将「密码」回写入串口</span></span><br><span class="line">        history = history[<span class="number">1</span>:] + [bytes2string(passwd)]  <span class="comment"># 复杂度较高，不要在意</span></span><br><span class="line">        <span class="keyword">if</span> history.count(history[<span class="number">0</span>]) == <span class="built_in">len</span>(history):  <span class="comment"># 「密码」不再变化时退出循环</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    buffer.clear()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'\n'</span>)</span><br><span class="line">resp = httpx.get(<span class="string">f'http://132.232.98.70:6363/check485Secret?id=<span class="subst">{student}</span>&amp;s=<span class="subst">{bytes2string(passwd)}</span>&amp;v=<span class="subst">{serial}</span>'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f'已提交至服务器，有效成绩：<span class="subst">{resp.text}</span>'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  这段 Python 代码已经能达到 256 的最高迭代次数且足够简便，故不再提供邪道速通（<s>其实是老师一分钟改完的算法我可能得花几个小时重新逆向</s>）。最后再附上一份 C++ 版本的代码：</p><figure class="highlight c++"><figcaption><span>main.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">format</span><span class="params">(<span class="keyword">const</span> std::vector&lt;uchar&gt; &amp;data)</span> </span>{</span><br><span class="line">    <span class="function">std::string <span class="title">str</span><span class="params">(<span class="number">2</span> * data.size() + <span class="number">1</span>, <span class="string">'\x00'</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.<span class="built_in">size</span>(); i++) {</span><br><span class="line">        <span class="built_in">sprintf</span>(&amp;str[i * <span class="number">2</span>], <span class="string">"%02X"</span>, data[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"&gt; "</span>);</span><br><span class="line">    std::string student; std::cin &gt;&gt; student;</span><br><span class="line">    <span class="keyword">const</span> std::vector&lt;uchar&gt; prefix = { <span class="number">0xAA</span>, <span class="number">0x55</span> };</span><br><span class="line"></span><br><span class="line">    <span class="function">serial <span class="title">pipe</span><span class="params">(<span class="string">"/dev/ttyUSB0"</span>, B1200)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, format(pipe.<span class="built_in">read</span>(<span class="number">6</span>)).<span class="built_in">substr</span>(<span class="number">4</span>).<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line"></span><br><span class="line">    std::vector&lt;uchar&gt; data = prefix;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : student) {</span><br><span class="line">        data.<span class="built_in">push_back</span>(ch - <span class="string">'0'</span>);</span><br><span class="line">    }</span><br><span class="line">    pipe.<span class="built_in">write</span>(data);</span><br><span class="line"></span><br><span class="line">    std::vector&lt;uchar&gt; buffer;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> count = <span class="number">0</span>; count &lt; <span class="number">270</span>; ) {</span><br><span class="line">        std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">milliseconds</span>(<span class="number">50</span>));</span><br><span class="line">        data = pipe.<span class="built_in">read_all</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!data.<span class="built_in">empty</span>()) {</span><br><span class="line">            buffer.<span class="built_in">insert</span>(buffer.<span class="built_in">end</span>(), data.<span class="built_in">begin</span>(), data.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (buffer.<span class="built_in">size</span>() &gt;= <span class="number">6</span> &amp;&amp; buffer[<span class="number">0</span>] == prefix[<span class="number">0</span>] &amp;&amp; buffer[<span class="number">1</span>] == prefix[<span class="number">1</span>]) {</span><br><span class="line">            <span class="function">std::vector&lt;uchar&gt; <span class="title">passwd</span><span class="params">(&amp;buffer[buffer.size() - <span class="number">4</span>], &amp;buffer[buffer.size()])</span></span>;</span><br><span class="line"></span><br><span class="line">            count++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"[%3d]: %s\r"</span>, count, format(passwd).<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">            passwd.<span class="built_in">insert</span>(passwd.<span class="built_in">begin</span>(), prefix.<span class="built_in">begin</span>(), prefix.<span class="built_in">end</span>());</span><br><span class="line">            pipe.<span class="built_in">write</span>(passwd);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        buffer.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">fflush</span>(stdout);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  以及新增的 <code>read_all()</code> 函数实现：</p><figure class="highlight c++"><figcaption><span>serial.cpp</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::vector&lt;uchar&gt; <span class="title">serial::read_all</span><span class="params">()</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    epoll_event event {};</span><br><span class="line">    <span class="built_in">epoll_wait</span>(epfd, &amp;event, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (event.data.fd) {</span><br><span class="line">        std::vector&lt;uchar&gt; data;</span><br><span class="line"></span><br><span class="line">        uchar buffer[<span class="number">128</span>]; <span class="keyword">size_t</span> count;</span><br><span class="line">        <span class="keyword">do</span> {</span><br><span class="line">            count = ::<span class="built_in">read</span>(event.data.fd, buffer, <span class="number">128</span>);</span><br><span class="line">            data.<span class="built_in">insert</span>(data.<span class="built_in">end</span>(), buffer, buffer + count);</span><br><span class="line">        } <span class="keyword">while</span> (count == <span class="number">128</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> {};</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>总是错过消息？来做一个 Android 进程锁！</title>
      <link href="/posts/2333714321/"/>
      <url>/posts/2333714321/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="背景-2">背景</h2><p>  我们在使用手机时，难免需要对某些应用做后台保活，比如社交软件、音乐播放器、VPN 代理、广告跳过工具等等，但许多国内 ROM 厂商却将 Android 的「最近任务」做成了「任务列表」，在其中侧滑或点击一键清理按钮将导致应用被杀死，使用起来很不方便。</p><p>  就我这台 MIUI 而言，虽然诸如 QQ、微信 等受众较广的应用官方已经在内置的规则列表中默认为其放行，但到了 Temegram、Clash 一类的小众应用，不小心划掉之后就会比较痛苦。好在我们已经 root 了，那自然不能任由它这样下去，遂决定开发一款专为 MIUI 打造的进程锁，为我们想要的进程提供保护，使其不被清理掉</p><h2 id="实现">实现</h2><h3 id="逆向分析">逆向分析</h3><ul><li>以下测试均基于 <code>MIUI V12.5.4.0.RJVCNXM</code></li></ul><p>  我们知道，在较新版本的 MIUI 系统中，「最近任务」属于「系统桌面」这个应用，那么首先把它提取出来，通过方法名和包名的简单搜索，很容易就可以定位到下面这个方法：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.android.systemui.shared.recents.system.ProcessManagerWrapper#doOneKeyClean(ArrayList&lt;Task&gt;, ArrayList&lt;String&gt;)</span><br></pre></td></tr></tbody></table></figure><p>  写个小 Hook 验证一下：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">findMethod(<span class="string">"com.android.systemui.shared.recents.system.ProcessManagerWrapper"</span>) {</span><br><span class="line">    name == <span class="string">"doOneKeyClean"</span></span><br><span class="line">}!! before {</span><br><span class="line">    Log.i(<span class="string">"called doOneKeyClean!"</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  发现确实调用了它，接下来看看它是怎么写的：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doOneKeyClean</span><span class="params">(ArrayList&lt;Task&gt; arrayList, ArrayList&lt;String&gt; arrayList2)</span> </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        ArrayList arrayList3 = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        Iterator&lt;Task&gt; it = arrayList.iterator();</span><br><span class="line">        <span class="keyword">while</span> (it.hasNext()) {</span><br><span class="line">            arrayList3.add(Integer.valueOf(it.next().key.id));</span><br><span class="line">        }</span><br><span class="line">        ProcessConfig processConfig = <span class="keyword">new</span> ProcessConfig(<span class="number">1</span>);</span><br><span class="line">        processConfig.setRemoveTaskNeeded(<span class="keyword">true</span>);</span><br><span class="line">        processConfig.setRemovingTaskIdList(arrayList3);</span><br><span class="line">        processConfig.setWhiteList(arrayList2);</span><br><span class="line">        ProcessManager.kill(processConfig);</span><br><span class="line">    } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">        Log.e(TAG, <span class="string">"doOneKeyClean"</span>, e);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [12], 'green');"></script><p>  注意到 12 行这里调用了一个 <code>ProcessManager.kill()</code> 方法，正准备跟进去看一下，然后发现……并没有这个类？那它一定就在 <code>framework.jar</code>！到 <code>/system/framework/</code> 下把这个 jar 扒出来丢进 jadx，发现内部继续调用了 <code>ProcessManagerNative.getDefault().kill()</code>：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">kill</span><span class="params">(ProcessConfig config)</span> </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">return</span> ProcessManagerNative.getDefault().kill(config);</span><br><span class="line">    } <span class="keyword">catch</span> (RemoteException e) {</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  看看这个 <code>getDefault()</code> 是如何工作的：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IProcessManager <span class="title">getDefault</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (pm == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">synchronized</span> (ProcessManagerNative.class) {</span><br><span class="line">            <span class="keyword">if</span> (pm == <span class="keyword">null</span>) {</span><br><span class="line">                pm = asInterface(ServiceManager.getService(<span class="string">"ProcessManager"</span>));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> pm;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  到这里已经很明显了，下一站：<code>services.jar</code>！</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">kill</span><span class="params">(ProcessConfig config)</span> <span class="keyword">throws</span> RemoteException </span>{</span><br><span class="line">    <span class="keyword">if</span> (checkPermission()) {</span><br><span class="line">        <span class="keyword">int</span> callingPid = Binder.getCallingPid();</span><br><span class="line">        <span class="keyword">int</span> policy = config.getPolicy();</span><br><span class="line">        Slog.i(<span class="string">"ProcessManager"</span>, <span class="string">"Kill reason "</span> + getKillReason(config) + <span class="string">" from pid="</span> + callingPid);</span><br><span class="line">        addConfigToHistory(config);</span><br><span class="line">        <span class="keyword">this</span>.mProcessPolicy.resetWhiteList(<span class="keyword">this</span>.mContext, UserHandle.getCallingUserId());</span><br><span class="line">        <span class="keyword">boolean</span> success = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">switch</span> (policy) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                success = killAll(config);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                success = killAny(config);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                success = swipeToKillApp(config);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                Slog.w(<span class="string">"ProcessManager"</span>, <span class="string">"unKnown policy"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                success = autoKillApp(config);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">                success = killByPriority(config);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        ProcessRecordInjector.reportAppPss();</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    }</span><br><span class="line">    String msg = <span class="string">"Permission Denial: ProcessManager.kill() from pid="</span> + Binder.getCallingPid() + <span class="string">", uid="</span> + Binder.getCallingUid();</span><br><span class="line">    Slog.w(<span class="string">"ProcessManager"</span>, msg);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  定位到 <code>com.android.server.am.ProcessManagerService</code>，其中 kill 方法很据我们传入的 config 得到一个 policy，然后再根据 policy 决定要使用哪种 kill 手段。于是开始回溯，看看这个 ProcessConfig 从何而来：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doOneKeyClean</span><span class="params">(ArrayList&lt;Task&gt; arrayList, ArrayList&lt;String&gt; arrayList2)</span> </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        ArrayList arrayList3 = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        Iterator&lt;Task&gt; it = arrayList.iterator();</span><br><span class="line">        <span class="keyword">while</span> (it.hasNext()) {</span><br><span class="line">            arrayList3.add(Integer.valueOf(it.next().key.id));</span><br><span class="line">        }</span><br><span class="line">        ProcessConfig processConfig = <span class="keyword">new</span> ProcessConfig(<span class="number">1</span>);</span><br><span class="line">        processConfig.setRemoveTaskNeeded(<span class="keyword">true</span>);</span><br><span class="line">        processConfig.setRemovingTaskIdList(arrayList3);</span><br><span class="line">        processConfig.setWhiteList(arrayList2);</span><br><span class="line">        ProcessManager.kill(processConfig);</span><br><span class="line">    } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">        Log.e(TAG, <span class="string">"doOneKeyClean"</span>, e);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [8], 'green');"></script><p>  注意这个 <code>new ProcessConfig(1);</code> 中的 1 就是 policy，相应地我们可以发现下面 <code>doSwapUPClean</code>（最近任务侧滑）对应的 policy 是 7：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSwapUPClean</span><span class="params">(Task task)</span> </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        String packageName = task.key.getComponent().getPackageName();</span><br><span class="line">        <span class="keyword">int</span> i = task.key.userId;</span><br><span class="line">        ProcessConfig processConfig = <span class="keyword">new</span> ProcessConfig(<span class="number">7</span>, packageName, i, task.key.id);</span><br><span class="line">        processConfig.setRemoveTaskNeeded(<span class="keyword">true</span>);</span><br><span class="line">        ProcessManager.kill(processConfig);</span><br><span class="line">        <span class="keyword">if</span> (isHasRelatedPkg(packageName)) {</span><br><span class="line">            Iterator&lt;String&gt; it = getRelatedPkg(packageName).iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) {</span><br><span class="line">                ProcessManager.kill(<span class="keyword">new</span> ProcessConfig(<span class="number">7</span>, it.next(), i, task.key.id));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">        Log.e(TAG, <span class="string">"doSwapUPClean"</span>, e);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  继续在 <code>service.jar</code> 中跟踪这两种 policy 的后续，发现它们最终都调用了 <code>killOnceByPolicy()</code> 方法：</p><ul><li>doOneKeyClean</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">killAll</span><span class="params">(ProcessConfig config)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> policy = config.getPolicy();</span><br><span class="line">    String reason = getKillReason(config);</span><br><span class="line">    Map&lt;Integer, String&gt; fgTaskPackageMap = <span class="keyword">null</span>;</span><br><span class="line">    List&lt;String&gt; whiteList = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (policy != <span class="number">2</span>) {</span><br><span class="line">        whiteList = config.getWhiteList();</span><br><span class="line">        <span class="keyword">if</span> (policy == <span class="number">1</span> || policy == <span class="number">15</span> || policy == <span class="number">4</span> || policy == <span class="number">14</span> || policy == <span class="number">16</span>) {</span><br><span class="line">            <span class="keyword">if</span> (whiteList == <span class="keyword">null</span>) {</span><br><span class="line">                whiteList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (policy == <span class="number">15</span> || policy == <span class="number">14</span> || policy == <span class="number">16</span>) {</span><br><span class="line">                whiteList.add(<span class="string">"com.android.deskclock"</span>);</span><br><span class="line">            }</span><br><span class="line">            fgTaskPackageMap = WindowProcessUtils.getPerceptibleRecentAppList(<span class="keyword">this</span>.mActivityManagerService.mActivityTaskManager);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (config.isRemoveTaskNeeded() &amp;&amp; config.getRemovingTaskIdList() != <span class="keyword">null</span>) {</span><br><span class="line">        removeTasksIfNeeded(config.getRemovingTaskIdList(), fgTaskPackageMap != <span class="keyword">null</span> ? fgTaskPackageMap.keySet() : <span class="keyword">null</span>, whiteList);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (policy == <span class="number">2</span>) {</span><br><span class="line">        removeAllTasks(UserHandle.getCallingUserId(), policy);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (whiteList != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (fgTaskPackageMap != <span class="keyword">null</span>) {</span><br><span class="line">            whiteList.addAll(fgTaskPackageMap.values());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mProcessPolicy.addWhiteList(<span class="number">8</span>, whiteList, <span class="keyword">false</span>);</span><br><span class="line">    }</span><br><span class="line">    killAll(policy, reason);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killAll</span><span class="params">(<span class="keyword">int</span> policy, String reason)</span> </span>{</span><br><span class="line">    ArrayList&lt;ProcessRecord&gt; processList;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.mLruProcesses != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>.mActivityManagerService) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                ActivityManagerService.boostPriorityForLockedSection();</span><br><span class="line">                processList = (ArrayList) <span class="keyword">this</span>.mLruProcesses.clone();</span><br><span class="line">            } <span class="keyword">catch</span> (Throwable th) {</span><br><span class="line">                ActivityManagerService.resetPriorityAfterLockedSection();</span><br><span class="line">                <span class="keyword">throw</span> th;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        ActivityManagerService.resetPriorityAfterLockedSection();</span><br><span class="line">        <span class="keyword">if</span> (!(processList == <span class="keyword">null</span> || processList.isEmpty())) {</span><br><span class="line">            Slog.i(<span class="string">"ProcessManager"</span>, <span class="string">"mLruProcesses size="</span> + <span class="keyword">this</span>.mLruProcesses.size());</span><br><span class="line">            filterCurrentProcess(processList, policy);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = processList.size() + (-<span class="number">1</span>); i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">                killOnceByPolicy(processList.get(i), reason, policy);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [29, 50], 'green');"></script><ul><li>doSwapUPClean</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">swipeToKillApp</span><span class="params">(ProcessConfig config)</span> <span class="keyword">throws</span> RemoteException </span>{</span><br><span class="line">    <span class="keyword">boolean</span> processHasOtherTask;</span><br><span class="line">    <span class="keyword">if</span> (config.isUserIdInvalid() || config.isTaskIdInvalid()) {</span><br><span class="line">        String msg = <span class="string">"userId:"</span> + config.getUserId() + <span class="string">" or taskId:"</span> + config.getTaskId() + <span class="string">" is invalid"</span>;</span><br><span class="line">        Slog.w(<span class="string">"ProcessManager"</span>, msg);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(msg);</span><br><span class="line">    }</span><br><span class="line">    String packageName = config.getKillingPackage();</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(packageName)) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> taskId = config.getTaskId();</span><br><span class="line">    List&lt;ProcessRecord&gt; appList = getProcessRecordList(packageName, config.getUserId());</span><br><span class="line">    <span class="keyword">boolean</span> appHasOtherTask = isAppHasActivityInOtherTask(appList, taskId);</span><br><span class="line">    ProcessRecord taskTopApp = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (appHasOtherTask) {</span><br><span class="line">        taskTopApp = ProcessUtils.getTaskTopApp(taskId, <span class="keyword">this</span>.mActivityManagerService);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (config.isRemoveTaskNeeded()) {</span><br><span class="line">        <span class="keyword">if</span> (appList.isEmpty()) {</span><br><span class="line">            removeTaskIfNeeded(taskId, packageName, -<span class="number">1</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            removeTaskIfNeeded(taskId, packageName, appList.get(<span class="number">0</span>).info.uid);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    String killReason = getKillReason(config);</span><br><span class="line">    <span class="keyword">if</span> (!appHasOtherTask) {</span><br><span class="line">        <span class="keyword">for</span> (ProcessRecord app : appList) {</span><br><span class="line">            <span class="keyword">if</span> (!Build.IS_INTERNATIONAL_BUILD || !isAppHasForegroundServices(app)) {</span><br><span class="line">                killOnceByPolicy(app, killReason, config.getPolicy());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (taskTopApp == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>.mActivityManagerService) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                ActivityManagerService.boostPriorityForLockedSection();</span><br><span class="line">                processHasOtherTask = WindowProcessUtils.isProcessHasActivityInOtherTaskLocked(taskTopApp.getWindowProcessController(), taskId);</span><br><span class="line">            } <span class="keyword">catch</span> (Throwable th) {</span><br><span class="line">                ActivityManagerService.resetPriorityAfterLockedSection();</span><br><span class="line">                <span class="keyword">throw</span> th;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        ActivityManagerService.resetPriorityAfterLockedSection();</span><br><span class="line">        <span class="keyword">if</span> (processHasOtherTask) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (Build.IS_INTERNATIONAL_BUILD &amp;&amp; isAppHasForegroundServices(taskTopApp)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        killOnceByPolicy(taskTopApp, killReason, config.getPolicy(), <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [30, 53], 'green');"></script><p>  <code>killOnceByPolicy()</code> 有两个重载，它们最终都会调用到 <code>killOnce()</code> 方法：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killOnceByPolicy</span><span class="params">(ProcessRecord app, String reason, <span class="keyword">int</span> policy)</span> </span>{</span><br><span class="line">    killOnceByPolicy(app, reason, policy, <span class="keyword">true</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killOnceByPolicy</span><span class="params">(ProcessRecord app, String reason, <span class="keyword">int</span> policy, <span class="keyword">boolean</span> canForceStop)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (app != <span class="keyword">null</span> &amp;&amp; app.thread != <span class="keyword">null</span> &amp;&amp; !app.killed &amp;&amp; !skipCurrentProcessInBackup(app, app.info.packageName, UserHandle.getCallingUserId())) {</span><br><span class="line">        <span class="keyword">int</span> killLevel = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span> (app.isPersistent() || app.setAdj &lt; <span class="number">0</span> || isInWhiteList(app, app.userId, policy)) {</span><br><span class="line">            ProcessRecordInjector.addAppPssIfNeeded(<span class="keyword">this</span>, app);</span><br><span class="line">            <span class="keyword">if</span> (!app.hasOverlayUi() &amp;&amp; !app.hasTopUi() &amp;&amp; isTrimMemoryEnable(app.info.packageName)) {</span><br><span class="line">                killLevel = <span class="number">101</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            killLevel = (!isForceStopEnable(app, policy) || !canForceStop) ? policy == <span class="number">3</span> ? <span class="number">102</span> : <span class="number">103</span> : HdmiCecKeycode.CEC_KEYCODE_SELECT_MEDIA_FUNCTION;</span><br><span class="line">        }</span><br><span class="line">        killOnce(app, reason, killLevel);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  继续深入分析，这里 <code>killOnce()</code> 方法引入了一个参数 killLevel，下方还有一个 <code>killLevelToString()</code>，在这里我们可以了解到各个 killLevel 代表的含义：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">killLevelToString</span><span class="params">(<span class="keyword">int</span> level)</span> </span>{</span><br><span class="line">    <span class="keyword">switch</span> (level) {</span><br><span class="line">        <span class="keyword">case</span> <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"none"</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">101</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"trim-memory"</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">102</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"kill-background"</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">103</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"kill"</span>;</span><br><span class="line">        <span class="keyword">case</span> HdmiCecKeycode.CEC_KEYCODE_SELECT_MEDIA_FUNCTION <span class="comment">/* 104 */</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"force-stop"</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其中有一个 level 是 <code>ProcessConfig.KILL_LEVEL_TRIM_MEMORY</code>（101），它不会杀死应用进程，只会对其进行一些内存清理，而这正是我们所需要的功能</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killOnce</span><span class="params">(ProcessRecord app, String reason, <span class="keyword">int</span> killLevel)</span> </span>{</span><br><span class="line">    killOnce(app, reason, killLevel, <span class="keyword">false</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killOnce</span><span class="params">(<span class="keyword">final</span> ProcessRecord app, String reason, <span class="keyword">int</span> killLevel, <span class="keyword">boolean</span> evenForeground)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (app != <span class="keyword">null</span> &amp;&amp; app.thread != <span class="keyword">null</span> &amp;&amp; !app.killed) {</span><br><span class="line">        <span class="keyword">if</span> (app.processName.equals(<span class="string">"com.miui.fmservice:remote"</span>)) {</span><br><span class="line">            <span class="keyword">final</span> Intent intent = <span class="keyword">new</span> Intent(<span class="string">"miui.intent.action.TURN_OFF"</span>);</span><br><span class="line">            intent.addFlags(AudioFormat.EVRC);</span><br><span class="line">            <span class="keyword">this</span>.mHandler.post(<span class="keyword">new</span> Runnable() { <span class="comment">// from class: com.android.server.am.ProcessManagerService.1</span></span><br><span class="line">                <span class="meta">@Override</span> <span class="comment">// java.lang.Runnable</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">                    ProcessManagerService.<span class="keyword">this</span>.mContext.sendBroadcastAsUser(intent, <span class="keyword">new</span> UserHandle(app.userId));</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">            Slog.i(<span class="string">"ProcessManager"</span>, <span class="string">"don't kill fmservice just send turn off intent"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (killLevel &gt;= <span class="number">102</span>) {</span><br><span class="line">            Slog.i(<span class="string">"ProcessManager"</span>, reason + <span class="string">": "</span> + killLevelToString(killLevel) + <span class="string">" "</span> + app.processName + <span class="string">" Adj="</span> + app.curAdj + <span class="string">" State="</span> + app.getCurProcState());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (killLevel == <span class="number">101</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mProcessKiller.trimMemory(app, evenForeground);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (killLevel == <span class="number">102</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mProcessKiller.killBackgroundApplication(app, reason);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (killLevel == <span class="number">103</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mProcessKiller.killApplication(app, reason, evenForeground);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (killLevel == <span class="number">104</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mProcessKiller.forceStopPackage(app, reason, evenForeground);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [23], 'green');"></script><p>  同时我们也得到了一个非常优秀的 hook 点，只要 hook 这个 <code>killOnce()</code> 方法，并在 beforeHookedMethod 中把 level 修改为 trim-memory，就可以实现应用免杀。</p><h3 id="模块开发">模块开发</h3><p>  光有这些还不够，要想开发一个成熟的模块，必须能让用户很方便地进行各项配置，这就要求我们的模块进程具有与 system_server 通信的能力（不可能让用户每次修改 AppLock 的作用域都手动修改配置文件，然后重启系统），这里我选择劫持 <code>ProcessManagerNative</code> 类的 <code>onTransact</code> 方法，向 client 发送 Binder 进行通信：</p><ul><li>Server 端</li></ul><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> AppLockHelper {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> server <span class="keyword">by</span> lazy { AppLockManagerService() }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ............</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">object</span> TransactionHook : XC_MethodHook() {</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">beforeHookedMethod</span><span class="params">(param: <span class="type">MethodHookParam</span>)</span></span> {</span><br><span class="line">            <span class="keyword">catch</span> {</span><br><span class="line">                <span class="keyword">if</span> (param.args[<span class="number">0</span>] != TRANSACTION_CODE) <span class="keyword">return</span></span><br><span class="line">                <span class="keyword">if</span> (packageManager.getNameForUid(Binder.getCallingUid()) != BuildConfig.APPLICATION_ID) <span class="keyword">return</span></span><br><span class="line">                (param.args[<span class="number">2</span>] <span class="keyword">as</span> Parcel).writeStrongBinder(server)</span><br><span class="line">                param.result = <span class="literal">true</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ............</span></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>Client 端</li></ul><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> AppLockHelper {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ............</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> client <span class="keyword">by</span> lazy {</span><br><span class="line">        MyApplication.processManager?.let {</span><br><span class="line">            <span class="keyword">val</span> <span class="keyword">data</span> = Parcel.obtain()</span><br><span class="line">            <span class="keyword">val</span> reply = Parcel.obtain()</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="keyword">if</span> (it.transact(TRANSACTION_CODE, <span class="keyword">data</span>, reply, <span class="number">0</span>)) {</span><br><span class="line">                    <span class="keyword">return</span><span class="symbol">@lazy</span> IAppLockManager.Stub.asInterface(reply.readStrongBinder())</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">finally</span> {</span><br><span class="line">                <span class="keyword">data</span>.recycle()</span><br><span class="line">                reply.recycle()</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span><span class="symbol">@lazy</span> <span class="literal">null</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ............</span></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  完整代码已经开源到 GitHub，欢迎各位小伙伴来给我点 star（手动狗头</p><div class="tag link"><a class="link-card" title="AppLock" href="https://github.com/Mufanc/AppLock"><div class="left"><img src="https://github.com/favicon.ico"></div><div class="right"><p class="text">AppLock</p><p class="url">https://github.com/Mufanc/AppLock</p></div></a></div><h2 id="展望">展望</h2><p>  等等！好像刚刚错过了什么东西，让我们回到 <code>killOnceByPolicy()</code> 方法，再仔细看一看：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killOnceByPolicy</span><span class="params">(ProcessRecord app, String reason, <span class="keyword">int</span> policy, <span class="keyword">boolean</span> canForceStop)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (app != <span class="keyword">null</span> &amp;&amp; app.thread != <span class="keyword">null</span> &amp;&amp; !app.killed &amp;&amp; !skipCurrentProcessInBackup(app, app.info.packageName, UserHandle.getCallingUserId())) {</span><br><span class="line">        <span class="keyword">int</span> killLevel = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span> (app.isPersistent() || app.setAdj &lt; <span class="number">0</span> || isInWhiteList(app, app.userId, policy)) {</span><br><span class="line">            ProcessRecordInjector.addAppPssIfNeeded(<span class="keyword">this</span>, app);</span><br><span class="line">            <span class="keyword">if</span> (!app.hasOverlayUi() &amp;&amp; !app.hasTopUi() &amp;&amp; isTrimMemoryEnable(app.info.packageName)) {</span><br><span class="line">                killLevel = <span class="number">101</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            killLevel = (!isForceStopEnable(app, policy) || !canForceStop) ? policy == <span class="number">3</span> ? <span class="number">102</span> : <span class="number">103</span> : HdmiCecKeycode.CEC_KEYCODE_SELECT_MEDIA_FUNCTION;</span><br><span class="line">        }</span><br><span class="line">        killOnce(app, reason, killLevel);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [4], 'green');"></script><p>  我们重点关注第四行这个 if，只要让代码进入这个 if 分支内执行，那么 killLevel 最后不是 100（none）就是 101（trim-memory），应用进程并不会被杀死。在 if 的三个判断条件中，<code>isInWhiteList()</code> 似乎是我们可以控制的东西</p><p>  而 MIUI 这样的系统显然不会硬编码规则列表，这自然而然就引出了第二个方案：通过某种手段修改规则列表，将我们需要的应用直接添加到白名单中，实现免注入、即时生效的 AppLock 功能。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Xposed </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HNU 每日打卡脚本｜技术细节和实用技巧</title>
      <link href="/posts/3451712385/"/>
      <url>/posts/3451712385/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  秉持着「能让机器完成的事情，绝不人工操作」的原则，早在入学军训之时，我就萌生了使用脚本打卡的念头，并且顺利地将其实现。时至今日，脚本也算是经历了几次迭代，现将技术细节全部公开出来，与大家一起交流讨论</p><div class="note warning simple"><p><strong>校方已经不再信任由帐号密码登录的会话，先前的打卡方式全部失效</strong></p></div><h2 id="初号机">初号机</h2><p>  初代打卡机采用了非常原始的实现方式，需要挂在 VPS 上定时运行，简单粗暴。纵观整个 web 登录打卡的过程，其实就只有 3 个步骤：</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph LR    获取验证码 --token--&gt; 请求登录 --cookie--&gt; 提交打卡  </pre></div><p>  在 web 端不像在微信中那样可以通过 oauth 直接登录，网页首先会请求：</p><div style="width: 100%; text-align: center; font-size: 1.5rem;">    <a href="https://fangkong.hnu.edu.cn/api/v1/account/getimgvcode">https://fangkong.hnu.edu.cn/api/v1/account/getimgvcode</a></div><p>  这个 API（可以点击试试），得到一个 Token，然后拿着这个 Token 再次请求：</p><div style="width: 100%; text-align: center; font-size: 1.45rem;">    <span>https://fangkong.hnu.edu.cn/imagevcode?token={{Token}}</span></div><p>  得到验证码图片，由于验证码内容是纯数字，比较简单，直接使用 <a href="https://github.com/tesseract-ocr/tesseract">Tesseract</a> 强行识别，也可以达到勉强能用的识别率（验证码错误 10 次左右登录成功）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr</span>(<span class="params">image</span>):</span></span><br><span class="line">    proc = sp.Popen(</span><br><span class="line">        [<span class="string">'tesseract'</span>, <span class="string">'-'</span>, <span class="string">'-'</span>, <span class="string">'-l'</span>, <span class="string">'eng'</span>, <span class="string">'--psm'</span>, <span class="string">'7'</span>], </span><br><span class="line">        stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.PIPE</span><br><span class="line">    )</span><br><span class="line">    proc.stdin.write(image)</span><br><span class="line">    proc.stdin.close()</span><br><span class="line">    result = re.sub(<span class="string">'[^a-z0-9]'</span>, <span class="string">''</span>, proc.stdout.read().decode())</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(result) != <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="二代机（GitHub-Actions）">二代机（GitHub Actions）</h2><p>  初代机虽然已经能实现每日自动打卡，但实在是太不优雅，甚至出现过由于 VPS 欠费导致打卡中断的情况，况且把这么每日打卡和「一些其它服务」挂在同一台服务器上也很不安全，于是决定改用 GitHub Actions 定时打卡</p><p>  GitHub Actions 的配置非常简单，只需要增加一个配置文件，简单写几行 yml，确定 Actions 的触发方式即可：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Auto</span> <span class="string">Checkin</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">'*/30 20-21 * * *'</span>  <span class="comment"># 北京时间 4:00、4:30、5:00、5:30 共尝试四次（GMT+8）</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">checkin:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-python@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">python-version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">modules</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">'pip3 install -r requirements.txt'</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Auto</span> <span class="string">checkin</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">USER:</span> <span class="string">${{</span> <span class="string">secrets.USER</span> <span class="string">}}</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">python</span> <span class="string">main.py</span></span><br></pre></td></tr></tbody></table></figure><p>  简简单单 20 行，声明了 Action 的触发方式（line 3 - 5），环境配置（line 11 - 14）和工作流程（line 16 - 22），非常地简单明了。此外 Actions 运行在 GitHub 的高性能容器上，脚本的稳定性能得到很好的保障</p><p>  除此之外，二代机使用了几层简单的全连接神经网络代替 Tesseract 完成验证码识别，准确率较一代机得到大幅提升，单张验证码四个数字全部识别正确的概率达到约 85%，具体实现可以参考我之前的 <a href="/posts/69006241/">这篇文章</a></p><h2 id="三代机（PyTorch）">三代机（PyTorch）</h2><p>  如果说一代到二代机的改动让脚本质量有了一个质的飞跃，那么三代机就比较偏向于练手作了，仅仅是用 PyTorch 替代了原来 numpy 手撕的神经网络来做的验证码识别，并且上传到 GitHub 让大家方便 fork 而已：</p> <div class="tag link"><a class="link-card" title="HNU-AutoCheckin" href="https://github.com/Mufanc/HNU-AutoCheckin"><div class="left"><img src="https://github.com/favicon.ico"></div><div class="right"><p class="text">HNU-AutoCheckin</p><p class="url">https://github.com/Mufanc/HNU-AutoCheckin</p></div></a></div><p>  神经网络的具体实现同样可以参考我的 <a href="/posts/4198449335/">这篇文章</a>，这里就不再赘述</p><h2 id="微信-WebView-抓包">微信 WebView 抓包</h2><ul><li>此法需要准备好一台 Android 手机，电脑上安装 Chromium 内核的浏览器</li></ul><p>  基于 web 的打卡机被全面封杀之后，只能在微信中登录打卡，那么抓取微信网页中的数据包便成为了一项刚需，好在腾讯早就为我们留好了后门，只要在微信内置浏览器打开 <a href="http://debugx5.qq.com/">http://debugx5.qq.com/</a> 这个链接，并在「信息」一栏中开启 inspector 功能即可轻松开启调试</p><img src="debugx5.jpg" style="width: 60%;"><p>  如果报错找不到 x5 内核，可以先打开 <a href="http://debugmm.qq.com/?forcex5=true">http://debugmm.qq.com/?forcex5=true</a> 即可切换到 x5 内核。</p><hr><p>  然后把手机开启 usb 调试并连接上电脑，在浏览器地址栏输入 <code>chrome://inspect</code> 打开远程调试工具，就可以看到在 Android 设备上打开的网页了：</p><p><img src="chrome-inspect.png" alt=""></p><p>  此时点击「inspect」按钮，就能像我们平常使用 DevTools 那样，对网页进行调试啦～</p><p><img src="inspect-devtools.png" alt=""></p><p>  还没结束！细心的你可能已经发现，手机和电脑上网页同步的速度非常慢，甚至根本加载不出来😰，因为默认的 inspect 调试方式是需要经过 Google 的服务器的，我们还需要对 <code>chrome://inspect</code> 这个网页本身做些手脚，才能将调试控制在本地进行</p><p>  在 inspect 页按下 <kbd>F12</kbd> 以调试其本身，并切换 UA，修改其中 Chrome 的版本号为 <code>0.0.0.0</code>，可以看到下方多出了一个「inspect fallback」的选项，点击它，就可以轻松打开 DevTools 而不经过 Google 的服务器了</p><p><img src="inspect-fallback.png" alt=""></p><p>  每次都打开 DevTools 切换 UA 还是有些麻烦，于是我<ruby>做<rt>CV</rt></ruby>了一个小插件来把「inspect」按钮替换成「inspect fallback]，核心代码如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="function"><span class="keyword">function</span> (<span class="params">origin</span>) </span>{</span><br><span class="line">    <span class="built_in">window</span>.Object.assign = <span class="keyword">new</span> <span class="built_in">Proxy</span>(</span><br><span class="line">        origin, {</span><br><span class="line">            <span class="function"><span class="title">apply</span>(<span class="params">target, thiz, args</span>)</span> {</span><br><span class="line">                <span class="keyword">let</span> result = <span class="built_in">Reflect</span>.apply(target, thiz, args)</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">window</span>.populateTargets) {</span><br><span class="line">                    <span class="built_in">window</span>.Object.assign = origin</span><br><span class="line">                    <span class="built_in">Function</span>.prototype.bind = <span class="keyword">new</span> <span class="built_in">Proxy</span>(</span><br><span class="line">                        <span class="built_in">Function</span>.prototype.bind, {</span><br><span class="line">                            <span class="function"><span class="title">apply</span>(<span class="params">target, thiz, args</span>)</span> {</span><br><span class="line">                                <span class="keyword">if</span> (thiz.name == <span class="string">'sendTargetCommand'</span> &amp;&amp; args[<span class="number">1</span>] == <span class="string">'inspect'</span>) {</span><br><span class="line">                                    args[<span class="number">1</span>] = <span class="string">'inspect-fallback'</span></span><br><span class="line">                                }</span><br><span class="line">                                <span class="keyword">return</span> <span class="built_in">Reflect</span>.apply(target, thiz, args)</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    )</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">return</span> result</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    )</span><br><span class="line">})(<span class="built_in">Object</span>.assign)</span><br></pre></td></tr></tbody></table></figure><p>  在 <code>chrome://flags</code> 中开启「Extensions on chrome:// URLs」选项即可使用</p><p><img src="extension.png" alt=""></p><h2 id="小技巧：本地覆盖">小技巧：本地覆盖</h2><p>  我们在试图调试时，如果当天已经打卡，则会直接跳到日历页，给调试表单造成了很大的困扰。如果直接 block 掉查询请求，又会触发无限重试，把浏览器浓的非常卡顿。这个时候就可以巧妙利用本地覆写的技巧来避免被跳转</p><p><img src="checked-in-today.png" alt=""></p><p>  来到 Sources 一栏，在下方找到 Overrides 的选项，勾选 Enable Local Overrides 后选择一个文件夹备用：</p><p><img src="enable-override.png" alt=""></p><p>  按 <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>F</kbd> 打开搜索框，查找「今日已打卡」的提示信息，定位到对应的 js 文件：</p><p><img src="search.png" alt=""></p><p>  然后右键标头，选择 Save for overrides 一项，这样一来下次再请求该脚本时将会直接用本地保存的这份 js 文件作为响应：</p><p><img src="save-for-overrides.png" alt=""></p><p>  接下来在刚刚保存的这份 js 文件中搜索「今日已打卡」，找到一个回调函数，我们直接把它 return 掉，然后保存刷新：</p><p><img src="function-return.png" alt=""></p><p>  此时便不会再跳转到日历页，可以愉快地调试啦～</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 奇技淫巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录｜使用 ESXi 软路由构建舒适的宿舍网络环境</title>
      <link href="/posts/1524517905/"/>
      <url>/posts/1524517905/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  学校虽有提供现成的校园网和宽带服务，但我这么一个折腾狂魔，免不了要对网络环境进行一番改造，遂斥巨资购入了一台搭载 ESXi 系统的工控机来作为软路由使用</p><h2 id="关于校园网-校园宽带">关于校园网 &amp; 校园宽带</h2><p>  校园网（HNU WiFi）和校园宽带都是需要登录认证才能使用的。曾在去年，老湖就因为校园网的收费政策引起过一波讨论。流量计费确实可以理解，校方这边也还是很乐意听取学生的意见的，很快便指定了新的计费政策，最近似乎也在筹划着更换新的 AP，最最重要的是，它支持网页认证！不过嘛，缺点也还是有的，或许也算不上缺点，几万人在用的大内网，开个 AP 隔离确实更安全，但这样于我个人而言，就不太方便各个设备之间互联互通了</p><p>  再来看校园宽带这边，虽然不存在 AP 隔离，但每次都得绕一圈从它的网关回来也不像话，同时宽带更是限制多多，每个平台都必须使用专门的客户端才能登录，这让我大 Ubuntu 用户情何以堪？更有甚者，每个平台最多只能有一台设备在线，这是默认我只能有一部手机？</p><p>  如此种种，我们自然是不能给它惯着，说了这么多，来看看我是如何整顿宿舍网络环境的吧！</p><h2 id="通过-ICS-绕过共享限制">通过 ICS 绕过共享限制</h2><p><img src="physical-interfaces.png" alt=""></p><p>  这台工控机一共有 4 个网口，分别对应着 4 张物理网卡，现在通过拔插网线的方式，来确定一下网卡和接口的对应关系：</p><table><thead><tr><th style="text-align:center">网卡名称</th><th style="text-align:center">物理接口</th></tr></thead><tbody><tr><td style="text-align:center">vmnic0</td><td style="text-align:center">L3/W2</td></tr><tr><td style="text-align:center">vmnic1</td><td style="text-align:center">LAN1</td></tr><tr><td style="text-align:center">vmnic2</td><td style="text-align:center">L2/W3</td></tr><tr><td style="text-align:center">vmnic3</td><td style="text-align:center">WAN1</td></tr></tbody></table><p>  「天翼校园」虽然会检测 Windows 自带的 WiFi Direct 热点共享，但对 ICS 网络共享似乎并不能察觉。我这边准备了一台 Win7 的虚拟机用于拨号和 ICS 网络共享，一共分配 4GB RAM 和 24GB 存储，还算是绰绰有余：</p><p><img src="win7-dialer.png" alt=""></p><p>  然后分别将 <code>Outbound</code> 和 <code>WAN</code> 网络添加到虚拟机上，<code>Outbound</code> 用于向外部拨号连接，<code>WAN</code> 绑定了 <code>L2/W3</code> 物理接口，插在无线路由器的 WAN 口。其实这里如果能把 <code>vmnic3</code> PCI 直通到 Windows 拨号机会获得更好的性能，估计校园宽带这点孱弱的网速也跑不满，想想还是算了，装驱动怪麻烦的……</p><p><img src="prepare-files.png" alt=""></p><p>  然后拨号机这边也是把需要的文件提前准备好，主要是「天翼校园」认证客户端、用于自动拨号的 Python 和 KMS 激活工具；接下来再对 Windows 做一些简单的设置，在「运行」窗口中输入 <code>UserAccountControlSettings</code> 回车，将通知级别修改为「从不通知」</p><p><img src="uac-off.png" alt=""></p><p>  这一步是设置系统默认允许所有管理员权限请求，以避免自动化过程中有进程提权导致弹出的 UAC 影响脚本正常功能，<strong>强烈不建议</strong>在日常工作的电脑上这么干，非常危险！</p><p><img src="self-debug-tool.png" alt=""></p><p>  激活 Windows 之后，安装好宽带客户端，发现经常弹出这个「自助排障工具」，非常烦人，简单给它处理一下：将原来的可执行文件加上后缀 <code>.bak</code>，然后创建一个同名只读文件即可</p><h2 id="编译-OpenWrt-配置旁路由">编译 OpenWrt &amp; 配置旁路由</h2><p>  拨号成功后先挂着不管，来到 <a href="https://github.com/esirplayground/AutoBuild-OpenWrt">这个仓库</a>，按教程配置好后开始编译，大约等待 1-2 个小时，就可以在 Actions 页面找到编译好的 zip 文件啦～</p><p>  打开压缩包，乍一看好像乱七八糟的东西不少，不过不要惊慌，只需要把这个 vmdk 文件拿出来就可以了：</p><p><img src="unzip-vmdk.png" alt=""></p><p>  将 vmdk 上传到 ESXi，但这个 vmdk 是专为 VMWare Player、VMWare Fushion 或者 VMware Workstation 准备的，在 ESXi 上并不能直接使用，所以我们需要先把它转换成 ESXi 的格式。首先登录到 ESXi 网页控制台，在 主机-&gt;管理-&gt;服务 中启用 TSM-SSH：</p><p><img src="esxi-ssh.png" alt=""></p><p>  通过 ssh 连接到 ESXi，然后找到刚刚上传的 vmdk 文件</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /vmfs/volumes</span><br><span class="line">ls</span><br></pre></td></tr></tbody></table></figure><p>  然后进行转换：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmkfstools -i openwrt-x86-64-generic-squashfs-combined-efi.vmdk openwrt-esxi.vmdk</span><br></pre></td></tr></tbody></table></figure><p>  准备工作已经完成，现在创建新的虚拟机，创建时系统版本选择 Linux、其它 64 位：</p><p><img src="new-vm-openwrt.png" alt=""></p><p>  然后将默认的硬盘删除，在左上角添加刚刚转换好的虚拟硬盘文件：</p><p><img src="vm-add-disk.png" alt=""></p><p>  网络适配器选择 <code>VM Network</code>，继续完成创建，然后打开虚拟机电源，等待控制台不再刷新之后，按回车即可进入系统</p><p><img src="installed-openwrt.png" alt=""></p><p>  使用之前，我们还需要再做几步配置，现在 OpenWrt 的 web 控制台大概率是无法访问的状态，我们需要更新它的 ip 地址，执行 <code>vim /etc/config/network</code> 编辑配置文件，找到 <strong>lan 配置</strong> 下的 ipaddr 选项，将其更改为一个可以访问的 ip 地址：</p><p><img src="modify-lan-address.png" alt=""></p><p>  保存退出后重启虚拟机，就可以从浏览器访问 OpenWrt 的 web 控制台了：</p><p><img src="openwrt-web-console.png" alt=""></p><p>  接下来是旁路由的配置，在 web 管理界面打卡 网络-&gt;接口 页面，在「基本设置」中指定 ipv4 网关、广播地址以及 DNS 服务器（DNS 服务器指定为主路由地址），因为我把所有主要设备都设置为静态 ip，所以直接在下方关闭 DHCP 服务；然后在上方选项卡切换到「物理设置」，取消接口桥接，点击保存（<strong>注意不是「保存&amp;应用」！</strong>）</p><p>  现在来到 网络-&gt;防火墙-&gt;自定义规则，在下方添加一条：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -I POSTROUTING -j MASQUERADE</span><br></pre></td></tr></tbody></table></figure><p>  在下方按钮处重启防火墙，然后在网页右上角找到「未保存的配置：x」并点击，选择「保存&amp;应用」即可，最后修改所有静态 ip 设备，将网关地址指向 OpenWrt。至此，旁路由配置暂且告一段落</p><h2 id="实现自动拨号和网络检测">实现自动拨号和网络检测</h2><p>  旁路由配置完成，现在回到 Windows 拨号机，准备开始实现自动拨号。在 Windows 物理机上装好拨号客户端，用 Spy++ 检查窗口，得到窗口类名和标题</p><p><img src="spy++.jpg" alt=""></p><p>  然后来搓一个小脚本，循环 GET 几大门户网站，当其中大多数均失败时，判定为网络连接不佳，自动重启客户端。因为客户端窗口大小是定死的（330 × 559），我这里直接使用像素座标进行定位：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> win32api</span><br><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line"><span class="keyword">import</span> win32gui</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"><span class="keyword">from</span> win32con <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ESurfingDaemon</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delay</span>(<span class="params">time=<span class="number">0.5</span></span>):</span></span><br><span class="line">        sleep(time)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">urltest</span>(<span class="params">url</span>):</span></span><br><span class="line">        logger.info(<span class="string">f'urltest for "<span class="subst">{url}</span>"'</span>)</span><br><span class="line">        <span class="comment"># noinspection PyBroadException</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            httpx.get(url, timeout=<span class="number">5</span>, follow_redirects=<span class="literal">False</span>)</span><br><span class="line">            logger.info(<span class="string">'success.'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            logger.info(<span class="string">'failed.'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, executable</span>):</span></span><br><span class="line">        self.executable = executable</span><br><span class="line">        self.targets = [</span><br><span class="line">            <span class="string">'https://www.baidu.com/'</span>, <span class="string">'https://www.360.cn/'</span>,</span><br><span class="line">            <span class="string">'https://qq.com/'</span>, <span class="string">'https://www.1688.com/'</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click</span>(<span class="params">self, x, y</span>):</span></span><br><span class="line">        width = win32api.GetSystemMetrics(SM_CXSCREEN)</span><br><span class="line">        height = win32api.GetSystemMetrics(SM_CYSCREEN)</span><br><span class="line">        win32api.mouse_event(</span><br><span class="line">            MOUSEEVENTF_ABSOLUTE | MOUSEEVENTF_MOVE,</span><br><span class="line">            <span class="built_in">int</span>(x * <span class="number">65536</span> / width), <span class="built_in">int</span>(y * <span class="number">65536</span> / height),</span><br><span class="line">            <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        self.delay()</span><br><span class="line">        win32api.mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        self.delay()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">relaunch</span>(<span class="params">self</span>):</span></span><br><span class="line">        logger.info(<span class="string">'searching window...'</span>)</span><br><span class="line">        hwnd = win32gui.FindWindow(<span class="string">'#32770'</span>, <span class="string">'校园客户端'</span>)</span><br><span class="line">        <span class="keyword">if</span> hwnd:</span><br><span class="line">            logger.info(<span class="string">'take window to foreground'</span>)</span><br><span class="line">            shell = win32com.client.Dispatch(<span class="string">'WScript.Shell'</span>)</span><br><span class="line">            shell.SendKeys(<span class="string">'%'</span>)</span><br><span class="line">            win32gui.SetForegroundWindow(hwnd)</span><br><span class="line">            self.delay()</span><br><span class="line">            left, top, right, bottom = win32gui.GetWindowRect(hwnd)</span><br><span class="line">            logger.info(<span class="string">'click "disconnect"'</span>)</span><br><span class="line">            self.click((left + right) / <span class="number">2</span>, top + <span class="number">366</span>)</span><br><span class="line">            self.delay(<span class="number">5</span>)</span><br><span class="line">            logger.info(<span class="string">'click "close window"'</span>)</span><br><span class="line">            self.click(right - <span class="number">15</span>, top + <span class="number">15</span>)</span><br><span class="line">            self.delay(<span class="number">1</span>)</span><br><span class="line">        logger.info(<span class="string">'kill remaining process...'</span>)</span><br><span class="line">        os.system(<span class="string">'taskkill /f /im ESurfingClient.exe &gt;nul 2&gt;&amp;1'</span>)</span><br><span class="line">        self.delay(<span class="number">3</span>)</span><br><span class="line">        logger.info(<span class="string">'launch client!'</span>)</span><br><span class="line">        os.startfile(self.executable)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watch</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                failed = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> url <span class="keyword">in</span> self.targets:</span><br><span class="line">                    <span class="keyword">if</span> self.urltest(url):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    failed += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> failed &gt;= <span class="built_in">len</span>(self.targets) / <span class="number">2</span>:</span><br><span class="line">                    self.relaunch()</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">                traceback.print_exc()</span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">'wait 30 seconds...'</span>)</span><br><span class="line">            self.delay(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logger.info(<span class="string">'wait 60 seconds...'</span>)</span><br><span class="line">sleep(<span class="number">60</span>)</span><br><span class="line">ESurfingDaemon(<span class="string">r'C:\path\to\ESurfingClient.exe'</span>).watch()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  完事后记得在客户端设置中把开机自启和自动拨号都打开，然后在计划任务中配置 daemon 脚本也开机启动：</p><p><img src="taskschd.png" alt=""></p><p>  这里勾选上「以最高权限运行」：</p><p><img src="taskschd-2.png" alt=""></p><p>  这样 Windows 虚拟机每次启动的时候脚本都会出来检测网络状态，并尝试自动拨号；由于客户端设计得不够精良，似乎存在一定程度的内存泄漏，再配置一个任务让虚拟机每隔两天使用 <code>shutdown -r -t 0</code> 重启一次，就大功告成啦！</p><h2 id="一点补充">一点补充</h2><p>  本文中对旁路由的配置仅仅停留在非常初级的阶段，其实 OpenWrt 能干的事情远远不止这些。比如可以配置 DNS 给每个内网设备分配一个专属域名，通过 DoH、DoT 等技术突破 DNS 劫持和污染等等，碍于篇幅限制，本文中就不再过多介绍，还请有兴趣的读者自己摸索探究</p><ul><li>最后附上网络拓扑图</li></ul><img src="network-topology.jpg" style="width: 80%;"><h2 id="参考-3">参考</h2><ul><li><p><a href="https://zhuanlan.zhihu.com/p/190244655">软路由上ESXi安装与配置（含网卡直通）-手把手小白教程 - 知乎</a></p></li><li><p><a href="https://www.bilibili.com/video/BV19q4y177v3">【老湿基】ESXi 网络虚拟化教程｜虚拟交换机｜vmknic｜vSphere 虚拟网络</a></p></li><li><p><a href="https://p3terx.com/archives/build-openwrt-with-github-actions.html">使用 GitHub Actions 云编译 OpenWrt - P3TERX ZONE</a></p></li><li><p><a href="https://sspai.com/post/59708">从听说到上手，人人都能看懂的旁路由入门指南 - 少数派</a></p></li><li><p><a href="https://xmanyou.com/vmware-esxi-install-openwrt/">如何在#VMWare #ESXi 6.7上安装OpenWrt虚拟机充当旁路由</a></p></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 「梦中的桓那兰那」 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录｜在 AVD 模拟器上安装 Magisk</title>
      <link href="/posts/52971059/"/>
      <url>/posts/52971059/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  在 Android 开发过程中，免不了要将应用丢到设备上测试。如果使用实体设备，每次都要配置 ADB 连接，非常麻烦；甚至在开发某些 Xposed 模块时，需要将设备反复重启，大大降低了调试效率。如果能将这些工作都转移到 AVD （Android Virtual Devices）上来完成，一切就都变得简单起来……</p><div class="note info simple"><p>由于我的电脑是 Linux，部分操作细节可能会与 Windows 有所区别</p></div><p>  说干就干，根据 <a href="https://github.com/topjohnwu/Magisk#building-and-development">官方说明</a>，首先需要将代码全部克隆到本地：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --branch v24.2 --recurse-submodules https://github.com/topjohnwu/Magisk.git</span><br><span class="line">cd Magisk</span><br></pre></td></tr></tbody></table></figure><p>  这里的 v24.2 是版本的 tag，你也可以根据需要选择合适的 Magisk 版本。然后是 AVD 系统镜像的选择，截至撰写本文的时候，Magisk 构建脚本对于 Android R 的 patch 还不太稳定，因此建议选择 Android Q（API 29）的版本。</p><p>  构建脚本默认不会输出构建过程中的 log，这让人在漫长的等待中多少有点没底，无法确定是不是寄了，所以我们修改 <code>build.py</code> 中的 <code>system()</code> 函数，让它把日志打出来：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">system</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    proc = subprocess.Popen([<span class="string">'sh'</span>, <span class="string">'-c'</span>, cmd], stdout=subprocess.PIPE, shell=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">while</span> proc.poll() <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        line = proc.stdout.readline().decode()</span><br><span class="line">        <span class="built_in">print</span>(line, end=<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> proc</span><br><span class="line">    <span class="comment"># return subprocess.run(cmd, shell=True, stdout=STDOUT)</span></span><br></pre></td></tr></tbody></table></figure><p>  然后是环境变量的配置，只有两条，分别是 Android Studio 使用的 jdk 路径和 Android SDK 路径：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH="/snap/android-studio/current/android-studio/jre/bin:$PATH"</span><br><span class="line">export ANDROID_SDK_ROOT="/home/mufanc/Android/Sdk"</span><br></pre></td></tr></tbody></table></figure><p>  这两个路径都能在你的 Android Studio 设置中找到：</p><p><img src="jdk-path.png" alt=""></p><p><img src="android-sdk-path.png" alt=""></p><p>  接着下载 Magisk 所使用的 NDK，这一步非常简单，一条命令即可完成：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./build.py ndk</span><br></pre></td></tr></tbody></table></figure><p>  一切准备就绪后，保持你的 AVD 为开启状态，然后开始构建 Magisk：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./build.py stub</span><br><span class="line">./build.py avd_patch /home/mufanc/Android/Sdk/system-images/android-29/google_apis/x86_64/ramdisk.img</span><br></pre></td></tr></tbody></table></figure><p>  注意将上述命令中的路径换成你的 <code>ramdisk.img</code> 路径。</p><p>  等待所有命令执行完成后，关闭 AVD 虚拟机，然后从下拉菜单中选择 <code>Cold Boot Now</code>，静静等待奇迹出现🙏</p><p><img src="cold-boot-now.png" alt=""></p><p>  当那熟悉的 Google 徽标再一次出现在屏幕上，代表着 Magisk 已经成功地安装到这台 AVD 中，接下来便是海阔凭鱼跃，天高任鸟飞……</p><img src="all-last.png" style="width: 60%;"><ul><li>2022-09-21 补充：</li></ul><p>  对于大多数情况，用 magisk 提供的 avd 脚本即可，它会通过 root 权限模拟 Magisk 的运行，使用方式也很简单，在保持 AVD 开启且能通过 adb 访问的状态下，执行：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --branch &lt;tag&gt; https://github.com/topjohnwu/Magisk</span><br><span class="line"><span class="built_in">cd</span> Magisk</span><br><span class="line"><span class="built_in">export</span> ANDROID_SDK_ROOT=<span class="string">"xxxxxxx"</span></span><br><span class="line">./build.py ndk</span><br><span class="line">./build.py emulator</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Magisk </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>iSmart 自动化进阶｜移动端的 dex 逆向与抓包分析</title>
      <link href="/posts/3171288223/"/>
      <url>/posts/3171288223/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  经过一年多的努力，iSmart 的自动化已经能够基本实现，然而现在的实现方式总的来说还是一种 dirty fix，无法完全摆脱客户端的束缚，实在是太不优雅。而我的主力 PC 机也已经换成 linux 系统，刷 iSmart 多多少少有些不方便。最近 iSmart 移动端也开始支持答题并上传，而且 apk 也完全没有加固，那么不妨来逝一逝，看看在移动端上，能不能做出一些新的突破</p><ul><li>顺手宣传一下 PC 版自动化脚本：</li></ul><div class="tag link"><a class="link-card" title="GitHub" href="https://github.com/Mufanc/iSmartAuto2"><div class="left"><img src="https://github.com/favicon.ico"></div><div class="right"><p class="text">GitHub</p><p class="url">https://github.com/Mufanc/iSmartAuto2</p></div></a></div><h2 id="开搞">开搞</h2><h3 id="强行打开-WebView-调试">强行打开 WebView 调试</h3><p>  新版 iSmart 客户端本质上还是个套壳浏览器，要调试其中网页，自然是用 inspector 最方便。然而这版本的 iSmart 并没有像 WeLearn 一样默认开启 WebView 调试功能，所以我们简单写个 Xposed 模块强行把调试打开：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (lpparam.processName == lpparam.packageName) {</span><br><span class="line">    findMethod(Application::<span class="keyword">class</span>.java) {</span><br><span class="line">        name == <span class="string">"onCreate"</span></span><br><span class="line">    }!! after {</span><br><span class="line">        WebView.setWebContentsDebuggingEnabled(<span class="literal">true</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="inspect-fallback.png" alt=""></p><h3 id="断点分析">断点分析</h3><p>  进入答题页面后，给「提交」按钮的 <code>onClick()</code> 下个断点，然后挂上 mitmproxy 提交任务，一边步进一边查看客户端有没有发出请求，于是有了一幕奇怪的调试姿势：</p><p><img src="debugging.png" alt=""></p><p>  最终定位到一个 callHandler 函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callHandler</span>(<span class="params">handlerName, data, responseCallback</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> data == <span class="string">'function'</span>) {</span><br><span class="line">        responseCallback = data;</span><br><span class="line">        data = <span class="keyword">void</span> (<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">var</span> result = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (data === <span class="keyword">void</span> (<span class="number">0</span>)) {</span><br><span class="line">            result = <span class="built_in">window</span>[<span class="string">'_android_js_obj_'</span>][handlerName]();</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            result = <span class="built_in">window</span>[<span class="string">'_android_js_obj_'</span>][handlerName](<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(!responseCallback) <span class="keyword">return</span>;</span><br><span class="line">        result = tryParseResultToJSONObject(result);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span>(result) == <span class="string">'string'</span> &amp;&amp; result.startsWith(<span class="string">'async_callback_key_'</span>)) {</span><br><span class="line">            asyncHandles[result] = responseCallback;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">                responseCallback(result);</span><br><span class="line">            });</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'handleName:'</span> + handlerName);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'data:'</span> + <span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">        <span class="built_in">console</span>.log(e.stack);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  它有三个参数，分别是操作、数据和回调，这里我们重点关注前两个，调试得知提交任务时 handlerName 为 <code>"submitAnswerData"</code>，其数据是一个 object，格式如下：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"uploadId"</span>: <span class="string">"3F37D7DA6A20672998ADC59B56B3682F"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"textbook"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: {</span><br><span class="line">        <span class="attr">"startTime"</span>: <span class="number">1646554669877</span>,</span><br><span class="line">        <span class="attr">"submitTime"</span>: <span class="number">1646554675291</span>,</span><br><span class="line">        <span class="attr">"score"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"percent"</span>: <span class="string">"0.00"</span>,</span><br><span class="line">        <span class="attr">"duration"</span>: <span class="number">5000</span>,</span><br><span class="line">        <span class="attr">"userAnswerXmlStr"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"markDataXmlStr"</span>: <span class="string">"&lt;element id=\"bfd041b1237dfea19ffdf674048d6758\"&gt;&lt;mark_data id=\"1\"&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;mark_data id=\"2\"&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;mark_data id=\"3\"&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;mark_data id=\"4\"&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;mark_data id=\"5\"&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;mark_data id=\"6\"&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;"</span>,</span><br><span class="line">        <span class="attr">"urls"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"wordIds"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"timeData"</span>: []</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  通过对比发现，data 参数中的 uploadId 对应着请求中的 taskId；而且不出所料，请求中出现了 json 数据中不存在的 ut 签名。</p><p><img src="request-detail.png" alt=""></p><p>  至此 web 层面的东西已经被我们挖掘得差不多了，下面进入 java 部分。</p><h3 id="dex-逆向分析">dex 逆向分析</h3><p>  本着「缺什么找什么」的原则，首先尝试直接搜索 <code>"ut"</code>，然后……居然一下就搜到了？？不是 native？？？</p><p><img src="search-for-ut.png" alt=""></p><p>  进入 StringUtils 类，发现有 <code>getUt</code> 和 <code>getUtV2</code> 两个方法， 那么来 Hook 一下验证调用栈：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"com.up366.common.StringUtils"</span> hooks {</span><br><span class="line">    <span class="keyword">val</span> hook = hooker { </span><br><span class="line">        before {</span><br><span class="line">            Log.i(Thread.currentThread().stackTrace.joinToString(<span class="string">"\n"</span>))</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    find { name == <span class="string">"getUtV2"</span> }.hook(hook)</span><br><span class="line">    find { name == <span class="string">"getUt"</span> }.hook(hook)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这边走的是 V1：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">dalvik.system.VMStack.getThreadStackTrace(Native Method)</span><br><span class="line">java.lang.Thread.getStackTrace(Thread.java:1736)</span><br><span class="line">mufanc.tools.ismartauto.HookEntry$onHandleLoadPackage$3$hook$1$1.invoke(HookEntry.kt:22)</span><br><span class="line">mufanc.tools.ismartauto.HookEntry$onHandleLoadPackage$3$hook$1$1.invoke(HookEntry.kt:21)</span><br><span class="line">com.github.mufanc.easyhook.util.Hooker.beforeHookedMethod(Hook.kt:22)</span><br><span class="line">de.robv.android.xposed.LspHooker.handleHookedMethod(Unknown Source:75)</span><br><span class="line">LspHooker_.getUt(Unknown Source:15)</span><br><span class="line">com.up366.mobile.book.BookLogMgr$1.&lt;init&gt;(BookLogMgr.java:79)</span><br><span class="line">com.up366.mobile.book.BookLogMgr.addSubmitTaskToQueue(BookLogMgr.java:77)</span><br><span class="line">com.up366.mobile.book.BookLogMgr.addBookTaskLog(BookLogMgr.java:39)</span><br><span class="line">com.up366.mobile.book.exercise.js.ExerciseHelper.lambda$submitCourseBook$0$ExerciseHelper(ExerciseHelper.java:261)</span><br><span class="line">com.up366.mobile.book.exercise.js.-$$Lambda$ExerciseHelper$B2goyhWONRORlD9gD_ui7KTeyhk.run(Unknown Source:6)</span><br><span class="line">com.up366.common.task.TaskWrapper.run(TaskWrapper.java:18)</span><br><span class="line">java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:462)</span><br><span class="line">java.util.concurrent.FutureTask.run(FutureTask.java:266)</span><br><span class="line">java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)</span><br><span class="line">java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)</span><br><span class="line">java.lang.Thread.run(Thread.java:923)</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [7], 'green');"></script><p>  然后再把参数也打一下：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">findMethod(<span class="string">"com.up366.common.StringUtils"</span>) {</span><br><span class="line">    name == <span class="string">"getUt"</span></span><br><span class="line">}!! before {</span><br><span class="line">    Log.i(it.args[<span class="number">0</span>])</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  确定无误之后，开始研究算法，跟进 <code>StringUtils#getUt(String, int)</code>，其中只有两行有用的代码：</p><p><img src="StringUtils_getUt.png" alt=""></p><p>  继续看里面的 <code>EncryptUtil#enc(byte[], int)</code>，果然还是遇上了 native：</p><p><img src="EncryptUtil.png" alt=""></p><h3 id="关于-native-lib-的研究">关于 native-lib 的研究</h3><p>  我们知道，一般的 native 函数是会在生成的 so 文件中生成对应符号的，使用 Android Studio 新建一个 Native C++ 工程，得到如下的 <code>native-lib.cpp</code>：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> <span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_com_example_MainActivity_stringFromJNI</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        JNIEnv* env,</span></span></span><br><span class="line"><span class="params"><span class="function">        jobject <span class="comment">/* this */</span>)</span> </span>{</span><br><span class="line">    std::string hello = <span class="string">"Hello from C++"</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;<span class="built_in">NewStringUTF</span>(hello.<span class="built_in">c_str</span>());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  然后编译打包成 apk，从中解压出 so 文件，使用 <code>readelf -sW libnative-lib.so</code> 命令读取其中所有导出的符号：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Symbol table '.dynsym' contains 417 entries:</span><br><span class="line">   Num:    Value          Size Type    Bind   Vis      Ndx Name</span><br><span class="line">     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND </span><br><span class="line">     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_atexit@LIBC (2)</span><br><span class="line">     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_finalize@LIBC (2)</span><br><span class="line">     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __register_atfork@LIBC (2)</span><br><span class="line">     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __memcpy_chk@LIBC (2)</span><br><span class="line">     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND memcpy@LIBC (2)</span><br><span class="line"></span><br><span class="line">(...... 此处省略若干行 ......)</span><br><span class="line"></span><br><span class="line">   410: 0000000000010100   137 FUNC    GLOBAL DEFAULT   13 _ZNSt11logic_errorC1ERKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE</span><br><span class="line">   411: 0000000000036ce0    40 OBJECT  GLOBAL DEFAULT   18 _ZTVSt9exception</span><br><span class="line">   412: 000000000000f1a0   164 FUNC    GLOBAL DEFAULT   13 Java_com_example_MainActivity_stringFromJNI</span><br><span class="line">   413: 000000000000ff60     5 FUNC    WEAK   DEFAULT   13 _ZdaPvm</span><br><span class="line">   414: 0000000000039410    32 OBJECT  GLOBAL DEFAULT   18 _ZTIPDh</span><br><span class="line">   415: 00000000000395f0    32 OBJECT  GLOBAL DEFAULT   18 _ZTIPDi</span><br><span class="line">   416: 0000000000036db0    40 OBJECT  GLOBAL DEFAULT   18 _ZTVSt13runtime_error</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [14], 'green');"></script><p>  然而当我们使用同样的方法查看 iSmart 的 <code>libnative-lib.so</code> 时，却连一个符号都找不到：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">readelf -sW *.so | grep Java_ </span><br><span class="line"><span class="meta">#</span><span class="bash"> 无输出</span></span><br></pre></td></tr></tbody></table></figure><p>  看来 iSmart 也许是采用了 <code>env-&gt;RegisterNatives</code> 动态注册的方式来实现这几个函数，这样一来便大大增加了逆向破解的难度。以我目前的技术力，自认没有本事从将近 600kb 的 so 库中抠出加密逻辑，纯 Python 实现方案也就此宣告破产。</p><h2 id="失败的尝试：Sideload-方案">失败的尝试：Sideload 方案</h2><p>  最终……还是无法摆脱客户端吗？正当我陷入苦恼之际，冥冥之中一个新的想法在脑海中闪过！我们为何要致力于摆脱客户端，究其根本是为了避免在设备上安装冗余的（潜在的流氓）软件，然而不管刷课与否，大家基本上都会安装 iSmart 的手机客户端以应付各种在线测试。</p><p>  我们知道 Android 中有一个神奇的函数 <code>Context#createPackageContext</code>，搭配合适的 flag 后，就可以将另一个应用的代码加载过来执行，迅速敲出一个 demo：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> context = createPackageContext(</span><br><span class="line">    <span class="string">"com.up366.ismart"</span>,</span><br><span class="line">    Context.CONTEXT_IGNORE_SECURITY or CONTEXT_INCLUDE_CODE</span><br><span class="line">)</span><br><span class="line"><span class="meta">@Suppress(<span class="meta-string">"LocalVariableName"</span>)</span></span><br><span class="line"><span class="keyword">val</span> EncryptUtil = context.classLoader.loadClass(<span class="string">"com.up366.common.utils.EncryptUtil"</span>)</span><br><span class="line"><span class="keyword">val</span> encrypt = EncryptUtil.declaredMethods.find {</span><br><span class="line">    it.name == <span class="string">"enc"</span></span><br><span class="line">}!!</span><br><span class="line">Log.i(TAG, <span class="string">"<span class="subst">${encrypt.invoke(null, <span class="string">"Hello World!"</span>.toByteArray(), <span class="number">99</span>)}</span>"</span>)</span><br></pre></td></tr></tbody></table></figure><p>  然后呢？……然后就报了满屏的错😰</p><p><img src="sideload-error.png" alt=""></p><p>  错误信息太长，这里就不全放出来了，不过可以看出大致的意思是 jni 访问到了一些未初始化的变量，从而导致 nullptr 错误。看来我还是想得太简单了，通过这种方式加载的应用并不会调用 Application#onCrate，因此在其中初始化变量的操作也相应的得不到执行。</p><h2 id="退让：LSPatch-方案">退让：LSPatch 方案</h2><div class="note info flat"><p>新版本 LSPatch 已经集成了优秀的过签性能，我们只需正常编写 Xposed 模块，然后用其打包即可</p></div><p>  那么再退一步，通过 LSPatch 对 iSmart 重打包实现注入行不行呢？</p><p>  <a href="https://github.com/LSPosed/LSPatch">LSPatch</a> 是 LSPosed 开发团队基于 Xpatch 实现的应用打包工具，能够将 Xposed 模块直接打包进入目标 Apk 中，同时拥有不错的过签能力，使用方法如下：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar lspatch.jar iSmart-origin.apk -m xposed-module.apk --force</span><br></pre></td></tr></tbody></table></figure><p>  现在让我们简单测试一下：用 MT 管理器提取 iSmart 安装包，什么都不改，重新签名后装回去，发现没法正常登录，说明存在签名校验。</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">catch</span> {</span><br><span class="line">    findClass(<span class="string">"android.app.ApplicationPackageManager"</span>).declaredMethods.forEach {</span><br><span class="line">        it before { param -&gt;</span><br><span class="line">            Log.i(<span class="string">"<span class="subst">${it.name}</span>(<span class="subst">${param.args.joinToString(<span class="string">", "</span>)}</span>)"</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  简单写个钩子 hook PackageManager，发现确实有很多获取签名的地方（超长警告⚠️）：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(android, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(android, 64, 0)</span><br><span class="line">I/iSmartAuto: getApplicationInfo(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getApplicationInfoAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: maybeAdjustApplicationInfo(ApplicationInfo{fefb985 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.vulkan.version, 4198400)</span><br><span class="line">I/iSmartAuto: resolveContentProvider(com.up366.ismart.udeskfileprovider, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: resolveContentProviderAsUser(com.up366.ismart.udeskfileprovider, 128, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: getXml(com.up366.ismart, 2131886087, ApplicationInfo{2f3300b com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getResourcesForApplication(ApplicationInfo{2f3300b com.up366.ismart})</span><br><span class="line">I/iSmartAuto: resolveContentProvider(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: resolveContentProviderAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: getXml(com.up366.ismart, 2131886080, ApplicationInfo{99c33a6 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getResourcesForApplication(ApplicationInfo{99c33a6 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.software.webview)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.software.webview, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.google.android.webview, 268444864)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.google.android.webview, 268444864, 0)</span><br><span class="line">I/iSmartAuto: getComponentEnabledSetting(ComponentInfo{com.google.android.webview/org.chromium.android_webview.devui.DeveloperModeState})</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getComponentEnabledSetting(ComponentInfo{com.google.android.webview/org.chromium.android_webview.SafeModeState})</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getServiceInfo(ComponentInfo{com.google.android.webview/org.chromium.content.app.SandboxedProcessService0}, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getApplicationInfo(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getApplicationInfoAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: maybeAdjustApplicationInfo(ApplicationInfo{189f2d7 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getApplicationLabel(ApplicationInfo{90417c4 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getText(com.up366.ismart, 2131689508, ApplicationInfo{90417c4 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getCachedString({ResourceName com.up366.ismart / 2131689508})</span><br><span class="line">I/iSmartAuto: isInstantApp()</span><br><span class="line">I/iSmartAuto: isInstantApp(com.up366.ismart)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.google.android.gms, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.google.android.gms, 0, 0)</span><br><span class="line">I/iSmartAuto: getResourcesForApplication(ApplicationInfo{90417c4 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: putCachedString({ResourceName com.up366.ismart / 2131689508}, iSmart-学生)</span><br><span class="line">I/iSmartAuto: getInstallerPackageName(com.google.android.webview)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.google.android.gms, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.google.android.gms, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(projekt.substratum, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(projekt.substratum, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.google.android.webview, 9216)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.google.android.webview, 9216, 0)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.automotive)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.automotive, 0)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.watch)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.watch, 0)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.iot)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.iot, 0)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.embedded)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.hardware.type.embedded, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.android.vending, 8256)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.android.vending, 8256, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.google.android.gms, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.google.android.gms, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.android.vending, 8256)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.android.vending, 8256, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.google.android.gms, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.google.android.gms, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getApplicationInfo(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getApplicationInfoAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: maybeAdjustApplicationInfo(ApplicationInfo{149a8b7 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 4096)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 4096, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 4096)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 64)</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 4096, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 64, 0)</span><br><span class="line">I/iSmartAuto: queryIntentServices(Intent { cmp=com.up366.ismart/com.up366.mobile.common.service.Up366PushService }, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: queryIntentServicesAsUser(Intent { cmp=com.up366.ismart/com.up366.mobile.common.service.Up366PushService }, 0, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: queryIntentServices(Intent { cmp=com.up366.ismart/com.up366.mobile.common.service.PushIntentService }, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: queryIntentServicesAsUser(Intent { cmp=com.up366.ismart/com.up366.mobile.common.service.PushIntentService }, 0, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 4096)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 4096, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 4096)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 4096, 0)</span><br><span class="line">I/iSmartAuto: getText(com.up366.ismart, 2131689508, ApplicationInfo{88283f com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getCachedString({ResourceName com.up366.ismart / 2131689508})</span><br><span class="line">I/iSmartAuto: getResourcesForApplication(ApplicationInfo{5f6850c com.up366.ismart})</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.software.picture_in_picture)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.software.picture_in_picture, 0)</span><br><span class="line">I/iSmartAuto: getActivityInfo(ComponentInfo{com.up366.ismart/com.up366.mobile.SplashActivity}, 269221888)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getActivityInfo(ComponentInfo{com.up366.ismart/com.up366.mobile.SplashActivity}, 269222528)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.miui.contentcatcher, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.miui.contentcatcher, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 64)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 64, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.miui.catcherpatch, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.miui.catcherpatch, 0, 0)</span><br><span class="line">I/iSmartAuto: checkPermission(android.permission.ACCESS_NETWORK_STATE, com.up366.ismart)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: checkPermission(android.permission.ACCESS_NETWORK_STATE, com.up366.ismart)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getText(com.up366.ismart, 2131689508, ApplicationInfo{b1dee39 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getCachedString({ResourceName com.up366.ismart / 2131689508})</span><br><span class="line">I/iSmartAuto: getResourcesForApplication(ApplicationInfo{5f6850c com.up366.ismart})</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.software.picture_in_picture)</span><br><span class="line">I/iSmartAuto: hasSystemFeature(android.software.picture_in_picture, 0)</span><br><span class="line">I/iSmartAuto: getActivityInfo(ComponentInfo{com.up366.ismart/com.up366.mobile.main.MainActivity}, 269221888)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getActivityInfo(ComponentInfo{com.up366.ismart/com.up366.mobile.main.MainActivity}, 269222528)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getText(com.up366.ismart, 2131689508, ApplicationInfo{7baeec7 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getCachedString({ResourceName com.up366.ismart / 2131689508})</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 0, 0)</span><br><span class="line">I/iSmartAuto: getApplicationInfo(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getApplicationInfoAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: maybeAdjustApplicationInfo(ApplicationInfo{a00eb84 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.up366.ismart, 16384)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.up366.ismart, 16384, 0)</span><br><span class="line">I/iSmartAuto: getPackageInfo(com.android.vending, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getPackageInfoAsUser(com.android.vending, 0, 0)</span><br><span class="line">I/iSmartAuto: getApplicationInfo(com.up366.ismart, 128)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getApplicationInfoAsUser(com.up366.ismart, 128, 0)</span><br><span class="line">I/iSmartAuto: maybeAdjustApplicationInfo(ApplicationInfo{4764b21 com.up366.ismart})</span><br><span class="line">I/iSmartAuto: checkPermission(android.permission.ACCESS_NETWORK_STATE, com.up366.ismart)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: getLaunchIntentForPackage(com.up366.ismart)</span><br><span class="line">I/iSmartAuto: queryIntentActivities(Intent { act=android.intent.action.MAIN cat=[android.intent.category.INFO] pkg=com.up366.ismart }, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: queryIntentActivitiesAsUser(Intent { act=android.intent.action.MAIN cat=[android.intent.category.INFO] pkg=com.up366.ismart }, 0, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: queryIntentActivities(Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] pkg=com.up366.ismart }, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: queryIntentActivitiesAsUser(Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] pkg=com.up366.ismart }, 0, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: queryIntentActivities(Intent { act=android.intent.action.MAIN cat=[android.intent.category.HOME] }, 65536)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: queryIntentActivitiesAsUser(Intent { act=android.intent.action.MAIN cat=[android.intent.category.HOME] }, 65536, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: queryBroadcastReceivers(Intent { act=android.intent.action.BADGE_COUNT_UPDATE (has extras) }, 0)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br><span class="line">I/iSmartAuto: queryBroadcastReceiversAsUser(Intent { act=android.intent.action.BADGE_COUNT_UPDATE (has extras) }, 0, 0)</span><br><span class="line">I/iSmartAuto: onImplicitDirectBoot(0)</span><br><span class="line">I/iSmartAuto: checkPermission(android.permission.ACCESS_NETWORK_STATE, com.up366.ismart)</span><br><span class="line">I/iSmartAuto: getUserId()</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [1, 4, 78, 84, 102, 106, 135, 138, 141], 'red');"></script><p>  注意那些 <code>getPackageInfo(xxxxxxxxxxxx, 64)</code> 的地方，64 其实就是 <code>PackageManager.GET_SIGNATURES</code>，这些都是非常明显的特征。我们首先把它 hook 掉：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">findClass(<span class="string">"android.content.pm.IPackageManager\$Stub\$Proxy"</span>) hooks {</span><br><span class="line">    find { name == <span class="string">"getPackageInfo"</span> } after { param -&gt;</span><br><span class="line">        <span class="keyword">val</span> packageName = param.args[<span class="number">0</span>] <span class="keyword">as</span> String</span><br><span class="line">        <span class="keyword">val</span> flags = param.args[<span class="number">1</span>] <span class="keyword">as</span> <span class="built_in">Int</span></span><br><span class="line">        <span class="meta">@Suppress(<span class="meta-string">"Deprecation"</span>)</span></span><br><span class="line">        <span class="keyword">if</span> (packageName == <span class="string">"com.up366.ismart"</span> &amp;&amp; flags and PackageManager.GET_SIGNATURES != <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">val</span> result = param.result <span class="keyword">as</span> PackageInfo</span><br><span class="line">            <span class="keyword">val</span> sign = result.signatures</span><br><span class="line"><span class="comment">//            // 提取原签名信息</span></span><br><span class="line"><span class="comment">//            val parcel = Parcel.obtain()</span></span><br><span class="line"><span class="comment">//            sign[0].writeToParcel(parcel, 0)</span></span><br><span class="line"><span class="comment">//            Log.e(Arrays.toString(parcel.marshall()))</span></span><br><span class="line">            <span class="keyword">val</span> parcel = Parcel.obtain()</span><br><span class="line">            parcel.unmarshall(signature, <span class="number">0</span>, signature.size)</span><br><span class="line">            parcel.setDataPosition(<span class="number">0</span>)</span><br><span class="line">            sign[<span class="number">0</span>] = Signature.CREATOR.createFromParcel(parcel)</span><br><span class="line">            result.signatures = sign</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其中 <code>signature</code> 是原 iSmart 的签名信息，暂且硬编码在 companion object 中：</p><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">companion</span> <span class="keyword">object</span> {</span><br><span class="line">    <span class="keyword">val</span> signature: ByteArray = byteArrayOf(<span class="number">117</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">48</span>, -<span class="number">126</span>, <span class="number">3</span>, <span class="number">113</span>, <span class="number">48</span>, -<span class="number">126</span>, <span class="number">2</span>, <span class="number">89</span>, -<span class="number">96</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">113</span>, <span class="number">93</span>, -<span class="number">9</span>, <span class="number">87</span>, <span class="number">48</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">42</span>, -<span class="number">122</span>, <span class="number">72</span>, -<span class="number">122</span>, -<span class="number">9</span>, ......)  <span class="comment">// 太长了不写了</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  将 patch 后的安装包安装——尝试登录——成功！做几道题目试试——也没问题！剩下的工作就是将刷课逻辑用 Kotlin 重写后集成到模块中，再做个简单的 GUI 即可</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 逆向 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一卡通（M1卡）破解过程及分析记录</title>
      <link href="/posts/2046525159/"/>
      <url>/posts/2046525159/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="43a1e0df04f4b53cb1f248fce223e6a49aa471856020483acab9e5b3a78ffbbd"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码，查看文章。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 奇技淫巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>发布自己的 Android Library 到 JitPack</title>
      <link href="/posts/1731161437/"/>
      <url>/posts/1731161437/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  Kotlin 是一门十分简洁的静态类型语言，同时拥有非常优秀的扩展性，与 Java 相比，使用 Kotlin 进行 Android 开发能有效减少代码量。下面以一个常用的 User 类为例，简单展示下 Kotlin 的简洁性：</p><div class="tabs" id="java-vs-kotlin"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#java-vs-kotlin-1"><i class="fa-brands fa-java"></i>Java</button></li><li class="tab"><button type="button" data-href="#java-vs-kotlin-2"><i class="fa-brands fa-kickstarter-k"></i>Kotlin</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="java-vs-kotlin-1"><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User{id="</span> + id + <span class="string">", name='"</span> + name + <span class="string">"'}"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="java-vs-kotlin-2"><figure class="highlight kotlin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>(<span class="keyword">val</span> id: <span class="built_in">Int</span>, <span class="keyword">val</span> name: String) {</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Users(id=<span class="variable">$id</span>, name='<span class="variable">$name</span>')"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>  在 Xposed 模块开发中，如果能够利用 Kotlin 的简洁性，自然能够极大地加快开发速度，让我们把工作中心放到整理逻辑上来，而不是与各种反射斗智斗勇。有人同样也注意到了这个问题，并制定了一套解决方案，比如 KyuubiRan 的 <a href="https://github.com/KyuubiRan/EzXHelper">EzXHelper</a>，然而用起来总感觉不太顺手，遂决定自己开发一套 Xposed Hook 增强 API</p><p>  首先创建一个空项目（No Activity），然后新建 Module，注意选择类型为 Android Library，将我们的库代码写在这里，然后在<strong>模块的</strong> build.gradle 中添加/合并：</p><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">plugins {</span><br><span class="line">    id <span class="string">'maven-publish'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">afterEvaluate {</span><br><span class="line">    publishing {</span><br><span class="line">        publications {</span><br><span class="line">            release(MavenPublication) {</span><br><span class="line">                from components.release</span><br><span class="line">                groupId = <span class="string">'com.github.mufanc.easyhook'</span></span><br><span class="line">                artifactId = <span class="string">'mufanc'</span></span><br><span class="line">                version = <span class="string">'0.3'</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  将代码发布到 GitHub，在 Release 页发布一个新的版本，标签为当前版本号：</p><p><img src="new-release.png" alt=""></p><p>  现在前往 <a href="https://jitpack.io/">jitpack.io</a>，将你的仓库地址粘贴到输入框，然后点击右侧的 Look up 按钮：</p><p><img src="publish.png" alt=""></p><p>  在下方选择刚刚发布的版本，点击 Get it 即可开始编译</p><h2 id="参考-5">参考</h2><ul><li><a href="https://blog.51cto.com/u_15361941/4726728">gradle7.0.2如何发布jitpack开源项目</a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>进阶｜借助 PyTorch 完成复杂验证码的识别</title>
      <link href="/posts/4198449335/"/>
      <url>/posts/4198449335/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  早在新生报到时，我就萌生了识别验证码并模拟登录的想法，无奈当时技术有限，最终未能达到目标。去年用 numpy 手写打卡系统验证码识别器后，<a href="https://github.com/Mufanc/HNU-AutoCheckin">自动脚本</a> 一直运行得还算稳定，这也给了我信心，让我继续挑战 <a href="http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/login.zf">迎新系统</a> 的验证码：</p><img src="captcha-sample.png" style="width: 60%;"><h2 id="前期工作">前期工作</h2><h3 id="特征分析">特征分析</h3><p>  乍一看好像挺吓人，随机字号、随机倾斜、随机模糊（可能这模糊是 jpg 算法搞的）,甚至还有一条横线，但当我们叠图之后，事情开始变得逐渐明朗起来：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">overlay = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'../data/raw_image'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    image = cv2.imread(<span class="string">f'../data/raw_image/<span class="subst">{file}</span>'</span>)</span><br><span class="line">    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    <span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        overlay = np.zeros(image.shape)</span><br><span class="line">    overlay += image</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    overlay = (overlay * <span class="number">255</span> / np.<span class="built_in">max</span>(overlay)).astype(np.uint8)</span><br><span class="line">    <span class="built_in">print</span>(overlay.shape)</span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    plt.imshow(overlay)</span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    plt.plot(np.<span class="built_in">sum</span>(<span class="number">255</span> - overlay, axis=<span class="number">0</span>))</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="overlay.png" alt=""></p><p>  左侧的随机短横线几乎不会与文字发生接触，那么我们直接将其裁掉即可，同样地，在右侧裁剪掉一块空白区域，以便后续识别。</p><p>  同时我在下方绘制了一张折线图，为原图反色后沿纵向将各个像素值累加后得到的结果。不难注意到由于背景渐变色的存在，折线整体有一个从左至右由高到低的趋势，修正后，得到了这样的效果：</p><p><img src="cut.png" alt=""></p><p>  下面的步骤，可能看起来会比较复杂，实际上原理却很简单：使用一根横向的「扫描线」自下而上扫描整个折线图，考虑所有被折线图和扫描线围成的部分，不妨将其称为「域」，当底面长度不小于 10 的「域」的数量为 4（字符数）时，认为这是一个较好的切分：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'../data/raw_image'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    image = cv2.imread(<span class="string">f'../data/raw_image/<span class="subst">{file}</span>'</span>)</span><br><span class="line">    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    sumvirt = np.<span class="built_in">sum</span>(<span class="number">255</span> - image, axis=<span class="number">0</span>)</span><br><span class="line">    line = <span class="number">3088</span> - <span class="number">12.04</span> * np.arange(<span class="number">0</span>, <span class="number">200</span>)</span><br><span class="line">    sumvirt = (sumvirt.astype(np.float64) - line)[<span class="number">52</span>:<span class="number">158</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> np.arange(<span class="number">0</span>, sumvirt.<span class="built_in">max</span>()):</span><br><span class="line">        norm = np.where(sumvirt &gt; x, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        diff = np.append(norm, <span class="number">0</span>) - np.append(<span class="number">0</span>, norm)</span><br><span class="line"></span><br><span class="line">        last, results = <span class="number">0</span>, []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(diff)):</span><br><span class="line">            <span class="keyword">if</span> diff[i] == <span class="number">1</span>:</span><br><span class="line">                last = i</span><br><span class="line">            <span class="keyword">elif</span> diff[i] == -<span class="number">1</span> <span class="keyword">and</span> i - last &gt;= <span class="number">10</span>:</span><br><span class="line">                results.append((last, i))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(results) == <span class="number">4</span>:</span><br><span class="line">            plt.subplot(<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            plt.title(<span class="string">f'X = <span class="subst">{x}</span>'</span>)</span><br><span class="line">            plt.imshow(image[:, <span class="number">52</span>:<span class="number">158</span>])</span><br><span class="line"></span><br><span class="line">            plt.subplot(<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">            plt.plot(sumvirt)</span><br><span class="line">            plt.plot(np.full(sumvirt.shape, x))</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(results)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">                plt.subplot(<span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span> + i)</span><br><span class="line">                plt.imshow(image[:, <span class="number">52</span>:<span class="number">158</span>][:, <span class="built_in">range</span>(*results[i])])</span><br><span class="line"></span><br><span class="line">            plt.show()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="split.png" alt=""></p><p>  简单二值化一下，贴到白色背景图上，这里放一张和原图的对比：</p><p><img src="split_2.png" alt=""></p><hr><h3 id="爬取数据集">爬取数据集</h3><p>  接下来就是模拟登录获取训练集了，由于网站会将帐号密码用 RSA 算法加密，再提交到服务器。虽然也可以用 Python 来模拟登录，但逆向 js 代码并找出它的操作逻辑未免过于麻烦，于是这里直接使用 puppeteer + express 计算加密：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">'puppeteer'</span>)</span><br><span class="line"></span><br><span class="line">!(<span class="keyword">async</span> () =&gt; {</span><br><span class="line">    <span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.launch({</span><br><span class="line">        <span class="attr">args</span>: [</span><br><span class="line">            <span class="string">`--user-data-dirs=<span class="subst">${path.join(__dirname, <span class="string">'.chromium'</span>)}</span>`</span></span><br><span class="line">        ]</span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">'http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/login.zf'</span>)</span><br><span class="line">    <span class="keyword">await</span> page.waitForFunction(<span class="function">() =&gt;</span> RSAKey ?? <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> app = express()</span><br><span class="line">    app.use(<span class="built_in">require</span>(<span class="string">'body-parser'</span>).urlencoded())</span><br><span class="line">    app.post(<span class="string">'/encrypt'</span>, <span class="keyword">async</span> (req, res) =&gt; {</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">'New encrypt request!'</span>)</span><br><span class="line">        <span class="keyword">let</span> enc = <span class="keyword">await</span> page.evaluate(<span class="function">(<span class="params">{src, modulus, exponent}</span>) =&gt;</span> {</span><br><span class="line">            <span class="keyword">let</span> rsaKey = <span class="keyword">new</span> RSAKey()</span><br><span class="line">            rsaKey.setPublic(b64tohex(modulus), b64tohex(exponent))</span><br><span class="line">            <span class="keyword">return</span> hex2b64(rsaKey.encrypt(src))</span><br><span class="line">        }, req.body)</span><br><span class="line">        res.send(enc)</span><br><span class="line">    })</span><br><span class="line">    app.listen(<span class="number">34567</span>, <span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">'Server started, listening...'</span>)</span><br><span class="line">    })</span><br><span class="line">})()</span><br></pre></td></tr></tbody></table></figure><p>  与之对应的 Python 代码，用于验证 tesseract 的识别结果，这里只需要确认验证码是否正确，所以帐号和密码都可以乱写（拼音缩写变量名全是从网站的 js 抄的，如果看得难受还请放过我 இωஇ）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> spider <span class="keyword">import</span> get_uuid</span><br><span class="line"><span class="keyword">from</span> splitter <span class="keyword">import</span> split</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">timestamp</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f'<span class="subst">{time() * <span class="number">1000</span>:<span class="number">.0</span>f}</span>'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">src, modulus, exponent</span>):</span></span><br><span class="line">    resp = httpx.post(<span class="string">'http://localhost:34567/encrypt'</span>, data={</span><br><span class="line">        <span class="string">'src'</span>: src,</span><br><span class="line">        <span class="string">'modulus'</span>: modulus,</span><br><span class="line">        <span class="string">'exponent'</span>: exponent</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> resp.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">client, zhlx, zh, mm, yzm, pubkey</span>):</span></span><br><span class="line">    modulus, exponent = pubkey[<span class="string">'modulus'</span>], pubkey[<span class="string">'exponent'</span>]</span><br><span class="line"></span><br><span class="line">    result = client.post(<span class="string">'http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/checkLogin.zf'</span>, data={</span><br><span class="line">        <span class="string">'dldata'</span>: b64encode(json.dumps({</span><br><span class="line">            <span class="string">'zhlx'</span>: encrypt(zhlx, modulus, exponent),</span><br><span class="line">            <span class="string">'zh'</span>: encrypt(zh, modulus, exponent),</span><br><span class="line">            <span class="string">'mm'</span>: encrypt(mm, modulus, exponent),</span><br><span class="line">            <span class="string">'yzm'</span>: encrypt(yzm, modulus, exponent)</span><br><span class="line">        }).encode()).decode()</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> result.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr</span>(<span class="params">image</span>):</span></span><br><span class="line">    proc = sp.Popen([<span class="string">'tesseract'</span>, <span class="string">'-'</span>, <span class="string">'-'</span>, <span class="string">'--psm'</span>, <span class="string">'7'</span>], stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.PIPE)</span><br><span class="line">    proc.stdin.write(image)</span><br><span class="line">    proc.stdin.close()</span><br><span class="line">    result = re.sub(<span class="string">'[^a-z0-9]'</span>, <span class="string">''</span>, proc.stdout.read().decode())</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(result) != <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">    client = httpx.Client(headers={</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                      <span class="string">'Chrome/96.0.4664.110 Safari/537.36'</span></span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    client.get(<span class="string">'http://yxxt.hnu.edu.cn/yxxt/web/xsLogin/login.zf'</span>)</span><br><span class="line">    pubkey = client.get(<span class="string">f'http://yxxt.hnu.edu.cn/yxxt/xtgl/login/getPublicKey.zf?time=<span class="subst">{timestamp()}</span>'</span>).json()</span><br><span class="line">    image = client.get(<span class="string">f'http://yxxt.hnu.edu.cn/yxxt/kaptcha?time=<span class="subst">{timestamp()}</span>'</span>)</span><br><span class="line">    captcha = cv2.imdecode(np.frombuffer(image.content, np.uint8), cv2.IMREAD_COLOR)</span><br><span class="line"></span><br><span class="line">    chars = split(captcha)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> chars:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    stack = np.hstack(chars)</span><br><span class="line">    code = ocr(cv2.imencode(<span class="string">'.png'</span>, stack)[<span class="number">1</span>].tobytes())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> code:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># MMCW | YZMCW</span></span><br><span class="line">    verify = login(client, <span class="string">'xsxh'</span>, <span class="string">'u$ern@me'</span>, <span class="string">'p@$$w0rd'</span>, code, pubkey)</span><br><span class="line">    <span class="keyword">if</span> verify[<span class="string">'status'</span>] != <span class="string">'MMCW'</span>:  <span class="comment"># 密码错误</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(chars):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f'data/marked/<span class="subst">{code[i]}</span>/<span class="subst">{get_uuid()}</span>'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(pickle.dumps(char))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    logger.info(<span class="string">f'cwd: <span class="subst">{os.getcwd()}</span>'</span>)</span><br><span class="line">    os.chdir(<span class="string">'/home/mufanc/JetBrains/PycharmProjects/PyTorch Demo/HNU Captcha Hard/'</span>)</span><br><span class="line"></span><br><span class="line">    failed = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span> * <span class="number">50</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> code := check():</span><br><span class="line">                logger.info(<span class="string">f'[<span class="subst">{code}</span>] Verify success after <span class="subst">{failed}</span> failed attempts'</span>)</span><br><span class="line">                failed = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                failed += <span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><hr><h3 id="意外发现">意外发现</h3><p>  对标记好的验证码简单做个统计，会发现某些字母似乎并不可能出现：</p><p><img src="char-count.png" alt=""></p><p>  把可能出现的字符集 <code>2345678ABCDEFGMNPWXY</code> 拿去搜索，能得知这种验证码使用 Google 的开源项目 <a href="https://code.google.com/archive/p/kaptcha/">Kaptcha</a> 生成，其实这一点在获取验证码的 URL 种就有体现，但我当时并没有留意，这个项目最后一次更新是在 2010 年 12 月，目前已经 Archive <s>（不愧是我校作风）</s>。</p><p><img src="kaptcha.png" alt=""></p><p>  那么或许可以参考 <a href="https://github.com/oopsguy/kaptcha-spring-boot">这个项目</a>，在本地搭建一个服务器，生成样式差不多的验证码，再对学校的验证码进行迁移学习，这样只需很少的训练样本就能达到不错的训练效果🤔</p><hr><h2 id="训练网络">训练网络</h2><p>  我们切分出来的单个字符小图是 50×50 的，经过两次卷积和池化后送入全连接层，最终得到 20 个输出，代表该图片为相应字符的「概率」</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Character</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">10</span>, (<span class="number">5</span>, <span class="number">5</span>))  <span class="comment"># 5 x 5 卷积层 (50 x 50 -&gt; 46 x 46)</span></span><br><span class="line">        <span class="comment"># 2 x 2 最大池化层 (46 x 46 -&gt; 23 x 23)</span></span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">10</span>, <span class="number">20</span>, (<span class="number">4</span>, <span class="number">4</span>))  <span class="comment"># 5 x 5 卷积层 (23 x 23 -&gt; 20 x 20)</span></span><br><span class="line">        <span class="comment"># 2 x 2 平均池化层 (20 x 20 -&gt; 10 x 10)</span></span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">2000</span>, <span class="number">800</span>)  <span class="comment"># 全连接层 (2000 -&gt; 800)</span></span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">800</span>, <span class="number">20</span>)  <span class="comment"># 全连接层 (800 -&gt; 20)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        input_size = x.size(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 卷积层 1</span></span><br><span class="line">        x = F.relu(self.conv1(x))</span><br><span class="line">        x = F.max_pool2d(x, <span class="number">2</span>, <span class="number">2</span>)  <span class="comment"># 最大池化</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 卷积层 2</span></span><br><span class="line">        x = F.relu(self.conv2(x))</span><br><span class="line">        x = F.avg_pool2d(x, <span class="number">2</span>, <span class="number">2</span>)  <span class="comment"># 平均池化</span></span><br><span class="line">        x = x.view(input_size, -<span class="number">1</span>)  <span class="comment"># 拉伸</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 全连接层 1</span></span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 全连接层 2</span></span><br><span class="line">        x = self.fc2(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> F.log_softmax(x, dim=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p>  然后开始训练网络，这里我将十分之一的数据用作测试集，其余数据为训练集（不要问我为什么用 CPU 训练，Linux 平台的 ROCm 真的太难装了 555）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载必要的库</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dataset <span class="keyword">import</span> MyDataset</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Character</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义超参数</span></span><br><span class="line">BATCH_SIZE = <span class="number">32</span>  <span class="comment"># 每次处理的数据数量</span></span><br><span class="line">DEVICE = torch.device(<span class="string">'cpu'</span>)  <span class="comment"># 设备</span></span><br><span class="line">EPOCH = <span class="number">10</span>  <span class="comment"># 数据集循环运行的轮次</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">train_set = MyDataset(<span class="string">'train'</span>)</span><br><span class="line">test_set = MyDataset(<span class="string">'test'</span>)</span><br><span class="line"></span><br><span class="line">train_loader = DataLoader(train_set, batch_size=<span class="number">10</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">8</span>)</span><br><span class="line">test_loader = DataLoader(test_set, batch_size=<span class="number">10</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义优化器</span></span><br><span class="line">model = Character().to(DEVICE)</span><br><span class="line">optimizer = optim.Adam(model.parameters())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义训练方法</span></span><br><span class="line"><span class="comment"># noinspection PyShadowingNames</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train_model</span>(<span class="params">model, device, train_loader, optimizer, epoch</span>):</span></span><br><span class="line">    <span class="comment"># 模型训练</span></span><br><span class="line">    model.train()</span><br><span class="line">    <span class="keyword">for</span> batch_index, (data, label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loader):</span><br><span class="line">        <span class="comment"># 部署到 Device</span></span><br><span class="line">        data, label = data.to(device), label.to(device)</span><br><span class="line">        <span class="comment"># 梯度初始化为 0</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        <span class="comment"># 获取训练结果</span></span><br><span class="line">        output = model(data)</span><br><span class="line">        <span class="comment"># 计算损失</span></span><br><span class="line">        loss = F.cross_entropy(output, label)</span><br><span class="line">        <span class="comment"># 找到概率值最大的下标</span></span><br><span class="line">        pred = output.argmax(dim=<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 反向传播</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        <span class="comment"># 参数优化</span></span><br><span class="line">        optimizer.step()</span><br><span class="line">        <span class="keyword">if</span> batch_index % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f'Train Epoch: <span class="subst">{epoch}</span> \t Loss: <span class="subst">{loss.item():<span class="number">.6</span>f}</span>'</span>)</span><br><span class="line">            <span class="comment"># print(output)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义测试方法</span></span><br><span class="line"><span class="comment"># noinspection PyShadowingNames</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_model</span>(<span class="params">model, device, test_loader</span>):</span></span><br><span class="line">    <span class="comment"># 模型验证</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 计算正确率</span></span><br><span class="line">    correct = <span class="number">.0</span></span><br><span class="line">    <span class="comment"># 测试损失</span></span><br><span class="line">    test_loss = <span class="number">.0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():  <span class="comment"># 不会计算梯度，也不会进行反向传播</span></span><br><span class="line">        <span class="keyword">for</span> data, label <span class="keyword">in</span> test_loader:</span><br><span class="line">            <span class="comment"># 部署到 Device</span></span><br><span class="line">            data, label = data.to(device), label.to(device)</span><br><span class="line">            <span class="comment"># 测试数据</span></span><br><span class="line">            output = model(data)</span><br><span class="line">            <span class="comment"># 计算测试损失</span></span><br><span class="line">            test_loss += F.cross_entropy(output, label).item()</span><br><span class="line">            <span class="comment"># 找到概率值最大的下标</span></span><br><span class="line">            pred = output.argmax(dim=<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 累计正确率</span></span><br><span class="line">            correct += pred.eq(label.view_as(pred)).<span class="built_in">sum</span>().item()</span><br><span class="line">        test_loss /= <span class="built_in">len</span>(test_loader.dataset)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f'Test -- Average Loss: <span class="subst">{test_loss:<span class="number">.4</span>f}</span> \t Accuracy: <span class="subst">{<span class="number">100</span>*correct/<span class="built_in">len</span>(test_loader.dataset):<span class="number">.3</span>f}</span>%'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始训练</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, EPOCH + <span class="number">1</span>):</span><br><span class="line">        train_model(model, DEVICE, train_loader, optimizer, epoch)</span><br><span class="line">        test_model(model, DEVICE, test_loader)</span><br><span class="line"></span><br><span class="line">    torch.save(model.state_dict(), <span class="string">'../model.pck'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最终跑起来效果还不错，识别率达到了 99.8%，放几张图片展示下效果：</p><div class="fj-gallery"><p><img src="myplot-1.png" alt=""><br><img src="myplot-2.png" alt=""><br><img src="myplot-3.png" alt=""><br><img src="myplot-4.png" alt=""><br><img src="myplot-5.png" alt=""><br><img src="myplot-6.png" alt=""></p>          </div></body></html>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在 Kubuntu 系统中启用 KVM 并通过 WinApps 使用 TIM</title>
      <link href="/posts/2665227836/"/>
      <url>/posts/2665227836/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  在 linux 系统中优雅地使用 QQ、TIM 一直是广大 linux 爱好者的一大痛点。Deepin wine 版的 QQ 过于老旧，甚至已经无法登录；而第三方客户端长期无人维护，各种不稳定，甚至随时有作者跑路的可能；什么？你说腾讯官方的 QQ for linux？我在下面放一张图，大家自行体会：</p><a href="https://im.qq.com/linuxqq/index.html"><p><img src="qq-for-linux.png" alt="《 QQ For Linux 》"></p></a><p>  这复古的界面，甚至让我有种回到 2008 的错觉，姑且不讨论这东西是否真的能用，单论这卖相，就让我不敢恭维。</p><p>  一日，在 GitHub 上找到了 <a href="https://github.com/Fmstrat/winapps">WinApps</a>，顿时眼前一亮，根据官方的描述：</p><blockquote><p>   WinApps 支持像原生操作系统一样在 Linux（Ubuntu / Fedora）和 GNOME / KDE 中运行微软 Office / Adobe 等 Windows 应用程序。</p></blockquote><p>  截至文章写作时，这个项目已经收获了 5.9k 的 star，其稳定性可见一斑，非常值得一试。</p><hr><h2 id="安装并配置-TIM">安装并配置 TIM</h2><p>  WinApps 依赖于后台 VM 容器中运行的 Windows RDP 服务器，这里强烈推荐使用 KVM 作为容器，KVM 是一种 CPU 和内存高效的虚拟化引擎，与大多数主要 Linux 发行版捆绑在一起，配置 KVM 的教程随便一搜便有不少，本文着重介绍 WinApps 的配置过程，这里仅放几篇思路比较清晰的文章作为参考：</p><ul><li><p><a href="https://github.com/Fmstrat/winapps/blob/main/docs/KVM.md"><strong>【官方文档⭐️必看】</strong> Creating a Virtual Machine in KVM</a></p></li><li><p><a href="https://www.myfreax.com/how-to-install-kvm-on-ubuntu-18-04/">如何在Ubuntu 18.04上安装Kvm</a></p></li><li><p><a href="https://www.hiczp.com/xu-ni-hua/wei-kvm-zhong-de-windows-xu-ni-ji-qi-yong-virtio.html">为 KVM 中的 Windows 虚拟机启用 VirtIO</a></p></li></ul><p>  安装并配置好 Windows 后，将虚拟机重启一次，然后搜索安装 TIM，安装位置保持默认，安装完成后注销虚拟机，接下来准备将 TIM 加入 WinApps 的预定义应用列表中，可以参考 <a href="https://github.com/Fmstrat/winapps/pull/154">这个 PR</a></p><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>  写作本文时，这个 PR 还没有被合并，如果你配置时发现该 PR 已经合并，那么直接执行项目根目录下的 <code>installer.sh</code> 即可</p></div><p>  按照 PR 中的说明，在项目文件夹下创建以下两个文件：</p><div class="tabs" id="file"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#file-1">File 1</button></li><li class="tab"><button type="button" data-href="#file-2">File 2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="file-1"><ul><li><code>apps/tim/icon.svg</code></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">"1609091179180"</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 1024 1024"</span> <span class="attr">version</span>=<span class="string">"1.1"</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">p-id</span>=<span class="string">"8202"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M511.500488 512.499512m-511.500488 0a511.500488 511.500488 0 1 0 1023.000976 0 511.500488 511.500488 0 1 0-1023.000976 0Z"</span> <span class="attr">fill</span>=<span class="string">"#1BC1FA"</span> <span class="attr">p-id</span>=<span class="string">"8203"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M784.234146 572.440976c8.178014 0 16.273108 0.253752 24.282287 0.728288-16.961436-38.434466-42.247742-69.886751-58.977405-90.331785 2.822244-8.482716 11.30496-56.536788-25.443153-90.453666v-2.827239c0-132.850263-96.103149-231.785647-214.822213-231.785647-118.717065 0-214.82521 96.107145-214.825209 231.785647v2.827239c-33.915879 33.915879-25.437159 81.969951-19.782681 90.453666-25.444152 28.265397-73.49223 87.62343-76.320469 155.461182 0 16.961436 2.827239 45.226833 11.305959 56.531794 11.305959 14.133198 39.570357-2.827239 62.186272-48.054073 5.650482 19.788675 19.78368 53.709549 50.876316 93.281905-50.876316 11.302962-65.009514 62.186271-48.049077 90.450669 11.305959 19.788675 39.570357 33.920874 87.624429 33.920874 78.496343 0 115.815899-19.378076 134.378771-35.711126C492.644901 814.680414 490.520976 800.136617 490.520976 785.233171c0-117.522232 131.500581-212.792195 293.71317-212.792195z"</span> <span class="attr">fill</span>=<span class="string">"#FFFFFF"</span> <span class="attr">p-id</span>=<span class="string">"8204"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M514.925143 819.204995c5.654478 0 11.309955 2.82624 14.132199 5.649483 16.960437 16.960437 53.709549 39.575352 138.50674 39.575352 48.054072 0 76.320468-16.960437 87.625428-33.920874 16.960437-28.264398 2.827239-79.147707-48.054072-90.450669 31.092636-39.572355 45.225834-73.493229 50.881311-93.281905 19.787676 45.226833 50.881311 62.18727 62.186271 48.054073 2.827239-11.30496 5.650482-39.570357 5.650482-56.531794-1.93511-23.223321-8.508691-45.121936-17.337069-65.128398-8.009179-0.475536-16.104273-0.729288-24.282287-0.729287-162.212589 0-293.713171 95.269963-293.71317 212.792195 0 14.903446 2.123926 29.447243 6.147996 43.485533a88.18688 88.18688 0 0 0 4.122973-3.864226c2.827239-2.823243 8.481717-5.649483 14.133198-5.649483z"</span> <span class="attr">fill</span>=<span class="string">"#FFFFFF"</span> <span class="attr">opacity</span>=<span class="string">".4"</span> <span class="attr">p-id</span>=<span class="string">"8205"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="file-2"><ul><li><code>apps/tim/info</code></li></ul><figure class="highlight profile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># GNOME shortcut name</span><br><span class="line">NAME=<span class="string">"Tim"</span></span><br><span class="line"></span><br><span class="line"># Used for descriptions and window class</span><br><span class="line">FULL_NAME=<span class="string">"Tencent Tim"</span></span><br><span class="line"></span><br><span class="line"># The executable inside windows</span><br><span class="line">WIN_EXECUTABLE=<span class="string">"C:\Program Files (x86)\Tencent\TIM\Bin\TIM.exe"</span></span><br><span class="line"></span><br><span class="line"># GNOME categories</span><br><span class="line">CATEGORIES=<span class="string">"WinApps;Tencent"</span></span><br><span class="line"></span><br><span class="line"># GNOME mimetypes</span><br><span class="line">MIME_TYPES=<span class="string">"application/tencent-tim"</span></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>  重新执行 <code>installer.sh</code>，依次选择 <code>User</code> -&gt; <code>Select which pre-configured applications to set up</code> -&gt; <code>Tencent Tim (tim)</code> 然后空格选中，建议同时安装一个 cmd，方便在没有图形界面的情况下管理 Windows，最后回车确定，选择 <code>Do not set up any applications</code> 退出即可</p><p>  最后在 Ubuntu 的应用程序列表中找到 TIM 并运行，就可以开始愉快的聊天啦!</p><p><img src="tim-login.png" alt=""></p><hr><h2 id="额外改进">额外改进</h2><p>  上述方式的优点很多，缺点也很明显，还需要做一些额外的改进:</p><div class="tabs" id="improve"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#improve-1">输入法</button></li><li class="tab"><button type="button" data-href="#improve-2">文件访问</button></li><li class="tab"><button type="button" data-href="#improve-3">重复登录</button></li><li class="tab"><button type="button" data-href="#improve-4">最小化</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="improve-1"><p>  登录 TIM 之后，我首先发现的问题是 ubuntu 中使用的 fcitx-rime 输入法无法在 TIM 的聊天窗口切出，也就导致了了不能输入中文，对于一个 IM 软件来说这简直就是致命打击😰，好在之前也有人于到过此问题，并提了一个 <a href="https://github.com/Fmstrat/winapps/issues/152">issue</a>，根据其中说法，首先执行：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfreerdp /u:&lt;User_Name&gt; /p:&lt;password&gt; /v:&lt;IP number&gt; /kbd-list</span><br></pre></td></tr></tbody></table></figure><p>  查看你的 <ruby> <strong>键盘布局</strong> <rt>Keyboard Layouts</rt></ruby>，然后编辑 <code>~/.config/winapps/winapps.conf</code> 添加如下字段：</p><figure class="highlight profile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RDP_FLAGS=<span class="string">"/kbd:&lt;键盘布局代码&gt;"</span></span><br></pre></td></tr></tbody></table></figure><p>  将虚拟机重启后，便可以使用<strong>虚拟机中的输入法</strong>了：</p><p><img src="configure-input-method.png" alt=""></p><div class="note warning simple"><p>已知问题：将窗口切到后台时，屏幕上输入法的位置会出现黑框/白框，启动任意其它 WinApps 后消失</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="improve-2"><p>  WinApps 默认将 home 目录作为一个网络位置挂载到 Windows 虚拟机上，已经非常方便了，但我更希望将 TIM 的数据文件夹直重定向到 <code>~/Documents</code> 下，这样就能在 ubuntu 中直接访问到 TIM 下载的文件，从而减少一次复制。</p><p>  首先在 ubuntu 的主目录下创建 Tencent Files 文件夹，然后进入虚拟机将原来的 Tencent Files 文件夹删除，以<strong>管理员</strong>权限打开终端，执行：</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklink /d "C:\Users\&lt;username&gt;\Documents\Tencent Files" "\\tsclient\home\Documents\Tencent Files"</span><br></pre></td></tr></tbody></table></figure><p>  再次启动 TIM 并登录，便可以在 Dolphin 中看到 TIM 的数据了</p><p><img src="redirect-files.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="improve-3"><p>  在关闭 TIM 窗口后，由于 TIM 实际上是被最小化到了 Windows 的托盘，此时如果再次从应用中启动 TIM，则会提示不能重复登录，十分的反人类。</p><p>  这里提供一个思路，可以通过编辑注册表项：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options</span><br></pre></td></tr></tbody></table></figure><p>  来劫持 TIM 的启动，控制逻辑也很简单，当远程发起启动请求时，首先检查是否有运行中的 TIM，如果有则直接显示窗口，否则重新启动 TIM。</p><p>  可以参考这篇文章（英文）：<a href="https://blog.malwarebytes.com/101/2015/12/an-introduction-to-image-file-execution-options/">An Introduction to Image File Execution Options</a></p><hr><p>  或者采用一种更为摆烂的方式，直接修改 TIM.exe 为 TIM_real.exe，然后编译一个假的 TIM.exe 作为代理，下面是我的实现代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">launchTIM</span><span class="params">()</span> </span>{</span><br><span class="line">    STARTUPINFO si;</span><br><span class="line">    PROCESS_INFORMATION pi;</span><br><span class="line">    LPTSTR szCmdLine = _tcsdup(<span class="built_in">TEXT</span>(<span class="string">"C:\\Program Files (x86)\\Tencent\\TIM\\Bin\\TIM_real.exe"</span>));</span><br><span class="line">    LPTSTR szWorkDir = _tcsdup(<span class="built_in">TEXT</span>(<span class="string">"C:\\Program Files (x86)\\Tencent\\TIM\\Bin"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ZeroMemory</span>(&amp;si, <span class="built_in"><span class="keyword">sizeof</span></span>(si));</span><br><span class="line">    si.cb = <span class="built_in"><span class="keyword">sizeof</span></span>(si);</span><br><span class="line">    <span class="built_in">ZeroMemory</span>(&amp;pi, <span class="built_in"><span class="keyword">sizeof</span></span>(pi));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动子进程</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">CreateProcess</span>(</span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpApplicationName</span></span><br><span class="line">        szCmdLine,  <span class="comment">// lpCommandLine</span></span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpProcessAttributes</span></span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpThreadAttributes</span></span><br><span class="line">        FALSE,      <span class="comment">// bInheritHandles</span></span><br><span class="line">        <span class="number">0</span>,          <span class="comment">// dwCreationFlags</span></span><br><span class="line">        <span class="literal">NULL</span>,       <span class="comment">// lpEnvironment</span></span><br><span class="line">        szWorkDir,  <span class="comment">// lpCurrentDirectory</span></span><br><span class="line">        &amp;si,        <span class="comment">// lpStartupInfo</span></span><br><span class="line">        &amp;pi         <span class="comment">// lpProcessInformation</span></span><br><span class="line">    )) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"CreateProcess failed (%d)./n"</span>, <span class="built_in">GetLastError</span>());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭进程和线程句柄</span></span><br><span class="line">    <span class="built_in">CloseHandle</span>(pi.hProcess);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(pi.hThread);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    HWND hwTIM = <span class="built_in">FindWindowA</span>(<span class="string">"TXGuiFoundation"</span>, <span class="string">"TIM"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!hwTIM) {</span><br><span class="line">        <span class="comment">// 如果找不到窗口则直接启动 TIM</span></span><br><span class="line">        <span class="built_in">launchTIM</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">IsWindowVisible</span>(hwTIM)) {</span><br><span class="line">        <span class="comment">// 否则显示窗口</span></span><br><span class="line">        <span class="built_in">ShowWindow</span>(hwTIM, SW_NORMAL);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  当然这种方式也可能造成一些奇怪的问题，毕竟 TIM 的 <code>argv[0]</code> 被修改了，在使用时还得留个心眼。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="improve-4"><p>  在 ubuntu 中最小化 TIM 窗口时会造成窗口鬼畜，暂时没想到什么好的解决办法。这段就留着以后再来补充，如果你有什么好的思路，也欢迎评论交流</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h2 id="参考-6">参考</h2><ul><li><a href="https://www.mond.top/ubuntu/ubuntu-winapps/">Winapps：在 Ubuntu 上使用 MSOffice</a></li><li><a href="https://www.anquanke.com/post/id/151425">隐蔽后门——Image File Execution Options新玩法 - 安全客</a></li><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa">CreateProcessA function (processthreadsapi.h) - Win32 apps | Microsoft Docs</a></li><li><a href="http://www.jtianling.com/windows%E4%B8%8B%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%88%9B%E5%BB%BAapi-createprocess%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E6%BC%AB%E8%B0%88.html">Windows下的进程创建API–CreateProcess使用经验漫谈</a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 奇技淫巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次 Trojan 搭建 &amp; 配置实战</title>
      <link href="/posts/1428613111/"/>
      <url>/posts/1428613111/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="51500aabcd25428bfbcf53b72a3970a559ea85e79878c4c21cc15c95ab85a277"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">输入密码，查看文章。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 奇技淫巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一次 Magisk 踩坑记录【Redmi 9A】</title>
      <link href="/posts/44296/"/>
      <url>/posts/44296/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  此前主要使用修复 boot.img 然后用 fastboot 刷入的方法，第一次碰到由于 AVB 2.0 认证导致刷入之后开启卡在 Logo 无限重启的情况，故在此记录一下解决方案。</p><p>  由于项目需要，最近准备把手头上的这台红米 9A 给 root 了，在 <a href="https://github.com/mooseIre/update_miui_ota">GitHub</a> 上没找到能用的镜像，最后跑到 <a href="https://www.miui.com/download-367.html#547">MIUI 官网</a>上把镜像搞到手。</p><p>  直接上三板斧，一套提取、修补、输入之后，开机发现卡在 Logo 界面无限重启，刷回原镜像能正常开机，证明下载的刷机包没有问题。查阅资料后得知部分机型为防止启动镜像被篡改，会对镜像文件进行校验，如果校验不通过，则无法正常启动。</p><p>  解决方法也非常简单，在刷入 boot.img 前将刷机包内的 <strong>vbmeta.img</strong> 刷入并关闭认证：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot --disable-verity --disable-verification flash vbmeta vbmeta.img</span><br></pre></td></tr></tbody></table></figure><p>  然后按正常流程刷入 boot.img 即可。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Magisk </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小学期实训题解</title>
      <link href="/posts/38244/"/>
      <url>/posts/38244/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  这东西……勉强能算是个做题记录？有些恶心的模拟题用了非常规的解法，这里就不放代码了</p><span id="more"></span><h2 id="训练作业一">训练作业一</h2><h3 id="众数">众数</h3><p>  每组数据均以递增顺序输入，故从左到右扫描输入序列，记录<strong>最多连续</strong>出现的数。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        <span class="keyword">int</span> cnt;  <span class="comment">// 当前连续出现的数的个数</span></span><br><span class="line">        <span class="keyword">int</span> last = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> grp = <span class="number">0</span>, record = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            <span class="keyword">int</span> tmp; cin &gt;&gt; tmp;</span><br><span class="line">            (last != tmp) &amp;&amp; (cnt = <span class="number">0</span>);</span><br><span class="line">            cnt++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cnt &gt; record) {  <span class="comment">// 统计众数</span></span><br><span class="line">                record = cnt;</span><br><span class="line">                grp = tmp;</span><br><span class="line">            }</span><br><span class="line">            last = tmp;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; grp &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="错误的里程表">错误的里程表</h3><p>  不出现 3 和 8，则原来的十进制降为八进制，那么将 <code>01245679</code> 还原为 <code>01234567</code> 后再作 八进制 → 十进制 转换</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">char</span> digit[] = {<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">7</span>};  <span class="comment">// 将里程表数值映回原八进制数</span></span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        string str; cin &gt;&gt; str;</span><br><span class="line">        <span class="keyword">int</span> real = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">            real = real * <span class="number">8</span> + digit[ch-<span class="string">'0'</span>];</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; real &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="拳王阿里">拳王阿里</h3><p>  设比赛的总天数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mi>k</mi><mo>+</mo><mi>d</mi><mspace width="1em"></mspace><mo stretchy="false">(</mo><mi>k</mi><mo>∈</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">7k+d\quad(k\in Z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord">7</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span>，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span> 可由开始和结束的星期数确定；由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 差值较小，直接遍历 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[L, R]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">]</span></span></span></span> 求解</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">map&lt;string, <span class="keyword">int</span>&gt; day = {</span><br><span class="line">        {<span class="string">"monday"</span>, <span class="number">1</span>}, {<span class="string">"tuesday"</span>, <span class="number">2</span>}, {<span class="string">"wednesday"</span>, <span class="number">3</span>}, {<span class="string">"thursday"</span>, <span class="number">4</span>},</span><br><span class="line">        {<span class="string">"friday"</span>, <span class="number">5</span>}, {<span class="string">"saturday"</span>, <span class="number">6</span>}, {<span class="string">"sunday"</span>, <span class="number">7</span>}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        string begin, end;</span><br><span class="line">        <span class="keyword">int</span> L, R;</span><br><span class="line">        cin &gt;&gt; begin &gt;&gt; end &gt;&gt; L &gt;&gt; R;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 算出相差天数，并通过取模保证值为正</span></span><br><span class="line">        <span class="keyword">int</span> d = (day[end] - day[begin] + <span class="number">8</span>) % <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">int</span> ans, count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = L; i &lt;= R; i++) {  <span class="comment">// 遍历区间 [L, R] 统计符合条件的天数</span></span><br><span class="line">            <span class="keyword">if</span> ((i - d) % <span class="number">7</span> == <span class="number">0</span>) {</span><br><span class="line">                ans = i;</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) {</span><br><span class="line">            cout &lt;&lt; <span class="string">"impossible"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">2</span>) {</span><br><span class="line">            cout &lt;&lt; <span class="string">"many"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>更新：数学解法</li></ul><p>  不妨设阿里比赛的总天数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mi>k</mi><mo>+</mo><mi>d</mi><mo>∈</mo><mo stretchy="false">[</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">7k+d\in[L, R]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord">7</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">]</span></span></span></span>，简单整理可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">[</mo><mfrac><mrow><mi>L</mi><mo>−</mo><mi>d</mi></mrow><mn>7</mn></mfrac><mo separator="true">,</mo><mfrac><mrow><mi>R</mi><mo>−</mo><mi>d</mi></mrow><mn>7</mn></mfrac><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">k\in[\frac{L-d}{7}, \frac{R-d}{7}] </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mopen">[</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span></span></span></p><p>  其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span> 的值可由比赛开始和结束的星期数计算而得，那么只需要确定在上述区间中有几个<strong>整数</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 即可；由于除法可能产生小数数值，判断的时候需要对区间左端点向上取整，右端点向下取整，再比较左右端点的大小，记 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">⌈</mo><mfrac><mrow><mi>L</mi><mo>−</mo><mi>d</mi></mrow><mn>7</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">k_1=\lceil\frac{L-d}{7}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">⌊</mo><mfrac><mrow><mi>R</mi><mo>−</mo><mi>d</mi></mrow><mn>7</mn></mfrac><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">k_2=\lfloor\frac{R-d}{7}\rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span></span></span></span>，那么当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>=</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_1=k_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 时，有唯一解，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_1 &lt; k_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 时，有多解，否则没有解。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">map&lt;string, <span class="keyword">int</span>&gt; day = {</span><br><span class="line">        {<span class="string">"monday"</span>, <span class="number">1</span>}, {<span class="string">"tuesday"</span>, <span class="number">2</span>}, {<span class="string">"wednesday"</span>, <span class="number">3</span>}, {<span class="string">"thursday"</span>, <span class="number">4</span>},</span><br><span class="line">        {<span class="string">"friday"</span>, <span class="number">5</span>}, {<span class="string">"saturday"</span>, <span class="number">6</span>}, {<span class="string">"sunday"</span>, <span class="number">7</span>}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        string begin, end;</span><br><span class="line">        <span class="keyword">int</span> L, R;</span><br><span class="line">        cin &gt;&gt; begin &gt;&gt; end &gt;&gt; L &gt;&gt; R;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> d = (day[end] - day[begin] + <span class="number">8</span>) % <span class="number">7</span> - <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">int</span> k1 = (L - d + <span class="number">6</span>) / <span class="number">7</span>, k2 = (R - d) / <span class="number">7</span>;  <span class="comment">// 通过先加 7-1 = 6 再整除 7 来上取整</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (k1 == k2) {</span><br><span class="line">            cout &lt;&lt; <span class="number">7</span>*k1 + d &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (k1 &lt; k2) {</span><br><span class="line">            cout &lt;&lt; <span class="string">"many"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cout &lt;&lt; <span class="string">"impossible"</span> &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="欧洲冠军联赛">欧洲冠军联赛</h3><p>  模拟即可。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line">T = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(T):</span><br><span class="line">    count = defaultdict(<span class="keyword">lambda</span>: [<span class="number">0</span>, <span class="number">0</span>])  <span class="comment"># 积分 | 净胜球</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">        teamA, scoreA, _, scoreB, teamB = <span class="built_in">input</span>().split()</span><br><span class="line">        scoreA, scoreB = <span class="built_in">int</span>(scoreA), <span class="built_in">int</span>(scoreB)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> scoreA == scoreB:</span><br><span class="line">            count[teamA][<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            count[teamB][<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            count[teamA][<span class="number">0</span>] += <span class="number">3</span> <span class="keyword">if</span> scoreA - scoreB &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">            count[teamA][<span class="number">1</span>] += scoreA - scoreB</span><br><span class="line">            count[teamB][<span class="number">0</span>] += <span class="number">3</span> <span class="keyword">if</span> scoreB - scoreA &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">            count[teamB][<span class="number">1</span>] += scoreB - scoreA</span><br><span class="line">    tops = []</span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> count:</span><br><span class="line">        tops.append((name, count[name]))</span><br><span class="line">    tops.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>][<span class="number">0</span>]*<span class="number">100</span> + x[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(tops[-<span class="number">1</span>][<span class="number">0</span>], tops[-<span class="number">2</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure><h3 id="合法的括号串">合法的括号串</h3><p>  维护一个存放左括号的栈，当遇到右括号时尝试对与其匹配的左括号出栈，若无法完成此操作或最后栈不为空，则认为输入的字符串不合法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">map&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; rev = {{<span class="string">'&gt;'</span>, <span class="string">'&lt;'</span>}, {<span class="string">')'</span>, <span class="string">'('</span>}, {<span class="string">']'</span>, <span class="string">'['</span>}, {<span class="string">'}'</span>, <span class="string">'{'</span>}};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(string str)</span> </span>{</span><br><span class="line">    stack&lt;<span class="keyword">char</span>&gt; st;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'&lt;'</span> || ch == <span class="string">'['</span> || ch == <span class="string">'('</span> || ch == <span class="string">'{'</span>) {  <span class="comment">// 左括号直接入栈</span></span><br><span class="line">            st.<span class="built_in">push</span>(ch); </span><br><span class="line">        } <span class="keyword">else</span> {  <span class="comment">// 遇到右括号时判断栈顶元素是否与之匹配</span></span><br><span class="line">            <span class="keyword">if</span> (st.<span class="built_in">empty</span>()) {</span><br><span class="line">                cout &lt;&lt; <span class="string">"No"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (st.<span class="built_in">top</span>() == rev[ch]) {</span><br><span class="line">                st.<span class="built_in">pop</span>();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                cout &lt;&lt; <span class="string">"No"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; (st.<span class="built_in">empty</span>() ? <span class="string">"Yes"</span> : <span class="string">"No"</span>) &lt;&lt; endl;  <span class="comment">// 最后记得判断栈是否为空</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        string str; cin &gt;&gt; str;</span><br><span class="line">        <span class="built_in">judge</span>(str);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="世界杯来了">世界杯来了</h3><p>  与第四题大同小异，改改就能用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">count = {}</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    count[<span class="built_in">input</span>()] = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]  <span class="comment"># 积分 | 净胜球 | 进球数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n*(n-<span class="number">1</span>)//<span class="number">2</span>):</span><br><span class="line">    teamA, teamB, scoreA, scoreB = re.findall(<span class="string">'([A-Za-z]+)-([A-Za-z]+) ([0-9]+):([0-9]+)'</span>, <span class="built_in">input</span>())[<span class="number">0</span>]</span><br><span class="line">    scoreA, scoreB = <span class="built_in">int</span>(scoreA), <span class="built_in">int</span>(scoreB)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> scoreA == scoreB:</span><br><span class="line">        count[teamA][<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        count[teamB][<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        count[teamA][<span class="number">0</span>] += <span class="number">3</span> <span class="keyword">if</span> scoreA - scoreB &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        count[teamA][<span class="number">1</span>] += scoreA - scoreB</span><br><span class="line">        count[teamB][<span class="number">0</span>] += <span class="number">3</span> <span class="keyword">if</span> scoreB - scoreA &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        count[teamB][<span class="number">1</span>] += scoreB - scoreA</span><br><span class="line">    count[teamA][<span class="number">2</span>] += scoreA</span><br><span class="line">    count[teamB][<span class="number">2</span>] += scoreB</span><br><span class="line"></span><br><span class="line">tops = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> count:</span><br><span class="line">    tops.append((name, count[name]))</span><br><span class="line">tops.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>][<span class="number">0</span>]*<span class="number">10000</span> + x[<span class="number">1</span>][<span class="number">1</span>]*<span class="number">100</span> + x[<span class="number">1</span>][<span class="number">2</span>])</span><br><span class="line">tops = <span class="built_in">sorted</span>(tops[n//<span class="number">2</span>:], key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> tops:</span><br><span class="line">    <span class="built_in">print</span>(item[<span class="number">0</span>])</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="F1-方程式冠军">F1 方程式冠军</h3><p>  结构体记录每位选手的名字、赢的次数和积分，先通过 map 统计得分情况，最后转入 vector 中排序输出：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> extras[] = {<span class="number">25</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Player</span> {</span></span><br><span class="line">    string name;</span><br><span class="line">    <span class="keyword">int</span> extra = <span class="number">0</span>;  <span class="comment">// 额外积分</span></span><br><span class="line">    <span class="keyword">int</span> rank[<span class="number">100</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Player</span>() { }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Player</span>(<span class="keyword">const</span> Player&amp; src) {</span><br><span class="line">        name = src.name, extra = src.extra;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) {</span><br><span class="line">            rank[i] = src.rank[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    map&lt;string, Player&gt; score;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            string name; cin &gt;&gt; name;</span><br><span class="line">            score[name].name = name;</span><br><span class="line">            score[name].extra += extras[<span class="built_in">min</span>(i, <span class="number">10</span>)];</span><br><span class="line">            score[name].rank[i]++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    vector&lt;Player&gt; arr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : score) {</span><br><span class="line">        arr.<span class="built_in">push_back</span>(item.second);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>(), [] (Player a, Player b) {  <span class="comment">// 按初始规则排序</span></span><br><span class="line">        <span class="keyword">if</span> (a.extra != b.extra) {</span><br><span class="line">            <span class="keyword">return</span> a.extra &gt; b.extra;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span> (a.rank[i] != b.rank[i]) {</span><br><span class="line">                <span class="keyword">return</span> a.rank[i] &gt; b.rank[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    });</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>].name &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>(), [] (Player a, Player b) {  <span class="comment">// 按新规则排序</span></span><br><span class="line">        <span class="keyword">if</span> (a.rank[<span class="number">0</span>] != b.rank[<span class="number">0</span>]) {</span><br><span class="line">            <span class="keyword">return</span> a.rank[<span class="number">0</span>] &gt; b.rank[<span class="number">0</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (a.extra != b.extra) {</span><br><span class="line">            <span class="keyword">return</span> a.extra &gt; b.extra;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span> (a.rank[i] != b.rank[i]) {</span><br><span class="line">                <span class="keyword">return</span> a.rank[i] &gt; b.rank[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    });</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>].name &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="买房与选房-——-🈚️">买房与选房 —— 🈚️</h3><h3 id="二叉树遍历，从前序、中序到后序">二叉树遍历，从前序、中序到后序</h3><p>  从前序遍历可以得出当前区间的根节点，再在中序遍历中定位该根节点位置，从而划分出两颗子树，递归求解：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> pre[<span class="number">100</span>], mid[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> root, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>{  <span class="comment">// 输出后序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; r; i++) {  <span class="comment">// 在中序遍历中定位根节点</span></span><br><span class="line">        <span class="keyword">if</span> (mid[i] == pre[root]) {</span><br><span class="line">            m = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 尿分叉搜索</span></span><br><span class="line">    <span class="built_in">dfs</span>(root+<span class="number">1</span>, l, m);</span><br><span class="line">    <span class="built_in">dfs</span>(root+(m-l)+<span class="number">1</span>, m+<span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">putchar</span>(pre[root]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; pre[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; mid[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>, n);  <span class="comment">// 左闭合区间</span></span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="内存管理">内存管理</h3><p>  纯模拟题，使用链表完成，审清楚题目、标好注释一般不会错~~（就是可能超时）~~</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">block</span> {</span></span><br><span class="line">    <span class="keyword">int</span> id, L, R;  <span class="comment">// 经典左闭合</span></span><br><span class="line">    block* next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">block</span>(<span class="keyword">int</span> id_, <span class="keyword">int</span> L_, <span class="keyword">int</span> R_) {</span><br><span class="line">        id = id_, L = L_, R = R_;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T, m;</span><br><span class="line">    cin &gt;&gt; T &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">    block* head = <span class="keyword">new</span> <span class="built_in">block</span>(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        string opt; <span class="keyword">int</span> arg;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="string">"alloc"</span>) {  <span class="comment">// 分配内存</span></span><br><span class="line">            cin &gt;&gt; arg;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;  <span class="comment">// 标记是否分配成功</span></span><br><span class="line">            <span class="keyword">for</span> (block* ptr = head; ptr; ptr = ptr-&gt;next) {  <span class="comment">// 从表头向后查找，每次检查是否能在当前位置之后分配内存</span></span><br><span class="line">                <span class="keyword">if</span> (ptr -&gt; next) {  <span class="comment">// 在 “中间” 插入块</span></span><br><span class="line">                    <span class="keyword">if</span> (ptr-&gt;next-&gt;L - ptr-&gt;R &gt;= arg) {  <span class="comment">// 如果空间足够则新建一个块</span></span><br><span class="line">                        block* tmp = <span class="keyword">new</span> <span class="built_in">block</span>(index++, ptr-&gt;R, ptr-&gt;R + arg);</span><br><span class="line">                        tmp -&gt; next = ptr -&gt; next;</span><br><span class="line">                        ptr -&gt; next = tmp;</span><br><span class="line"></span><br><span class="line">                        cout &lt;&lt; (tmp -&gt; id) &lt;&lt; endl;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                } <span class="keyword">else</span> {  <span class="comment">// 在最后追加块</span></span><br><span class="line">                    <span class="keyword">if</span> (ptr-&gt;R + arg &lt;= m) {  <span class="comment">// 否则尝试在最后添加块</span></span><br><span class="line">                        block* tmp = <span class="keyword">new</span> <span class="built_in">block</span>(index++, ptr-&gt;R, ptr-&gt;R + arg);</span><br><span class="line">                        ptr -&gt; next = tmp;</span><br><span class="line"></span><br><span class="line">                        cout &lt;&lt; (tmp -&gt; id) &lt;&lt; endl;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (!flag) {</span><br><span class="line">                cout &lt;&lt; <span class="string">"NULL"</span> &lt;&lt; endl;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="string">"erase"</span>) {  <span class="comment">// 删除块</span></span><br><span class="line">            cin &gt;&gt; arg;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;  <span class="comment">// 标记是否找到目标块</span></span><br><span class="line">            <span class="keyword">for</span> (block* ptr = head; ptr-&gt;next; ptr = ptr-&gt;next) {</span><br><span class="line">                <span class="keyword">if</span> (ptr-&gt;next-&gt;id == arg) {</span><br><span class="line">                    block* tmp = ptr-&gt;next;</span><br><span class="line">                    ptr -&gt; next = ptr -&gt; next -&gt; next;</span><br><span class="line">                    <span class="keyword">delete</span> tmp;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (!flag) {</span><br><span class="line">                cout &lt;&lt; <span class="string">"ILLEGAL_ERASE_ARGUMENT"</span> &lt;&lt; endl;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="string">"defragment"</span>) {  <span class="comment">// 内存整理</span></span><br><span class="line">            <span class="keyword">for</span> (block* ptr = head; ptr-&gt;next; ptr = ptr-&gt;next) {</span><br><span class="line">                <span class="keyword">if</span> (ptr-&gt;next-&gt;L &gt; ptr-&gt;R) {  <span class="comment">// 有空位则左移</span></span><br><span class="line">                    <span class="keyword">int</span> dist = ptr-&gt;next-&gt;L - ptr-&gt;R;</span><br><span class="line">                    ptr -&gt; next -&gt; L -= dist;</span><br><span class="line">                    ptr -&gt; next -&gt; R -= dist;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="平均方差">平均方差</h3><p>  没啥难度，直接计算即可，注意输出时要强制转 int 而不能 <code>printf("%.0lf", S/n - 0.5);</code>，否则会出现输出 <code>-0</code> 的问题</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> sum, arr[<span class="number">10000</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">// 这题就不用标注释了吧……</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; arr[i];</span><br><span class="line">            sum += arr[i];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> avg = sum / n, S = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            S += (arr[i]-avg)*(arr[i]-avg);</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; (<span class="keyword">int</span>)(S / n) &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="IP-地址">IP 地址</h3><p>  使用位运算是最快的解法，具体位运算的使用参考<a href="/2020/11/09/%E3%80%90%E5%AE%9E%E9%AA%8C%E4%B8%89-%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%91%E7%AE%80%E6%9E%90/">汉明距离</a>一章</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正整数的负在计算机中表现为二进制先取反再加一，与 n 作与运算后即可得到该数最低位的 1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{  </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        n ^= (n &amp; -n);</span><br><span class="line">        ans++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        <span class="keyword">int</span> arr[<span class="number">4</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d.%d.%d.%d"</span>, &amp;arr[<span class="number">0</span>], &amp;arr[<span class="number">1</span>], &amp;arr[<span class="number">2</span>], &amp;arr[<span class="number">3</span>]);</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) {</span><br><span class="line">            sum += <span class="built_in">count</span>(arr[i]);</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="开关与灯">开关与灯</h3><p>  将输入矩阵纵向相加，得到「每个灯所对应的开关数」数组，然后使用一重循环，判断上述数组减去单个开关后，新的「每个灯对应的开关数」数组中是否存在 0，如果存在，则说明该开关不可去除，否则输出 Yes 并返回</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">2000</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">bool</span> button[<span class="number">2000</span>][<span class="number">2000</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {  <span class="comment">// 读入</span></span><br><span class="line">        string str; cin &gt;&gt; str;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) {</span><br><span class="line">            <span class="keyword">if</span> (str[j] == <span class="string">'1'</span>) {</span><br><span class="line">                button[i][j] = <span class="number">1</span>;  <span class="comment">// 记录每个开关的情况</span></span><br><span class="line">                arr[j] += <span class="number">1</span>;  <span class="comment">// 同时统计每个灯对应的开关数</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {  <span class="comment">// 依次判断</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) {</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt;= button[i][j]) {</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (flag) {</span><br><span class="line">            cout &lt;&lt; <span class="string">"YES"</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; <span class="string">"NO"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="可删除的点">可删除的点</h3><p>  分别统计横坐标大于零和小于零的点的数量，并记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>，只要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 不全大于 1 则有解</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> L = <span class="number">0</span>, R = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">int</span> x, _;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; _;</span><br><span class="line">        x &gt; <span class="number">0</span> ? R++ : L++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>((L &lt;= <span class="number">1</span> || R &lt;= <span class="number">1</span>) ? <span class="string">"Yes"</span> : <span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="字符串反转3">字符串反转3</h3><p>  最初的实现方式，直接用了 Python 现成的语法特性和内置函数：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">' '</span>.join(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x[::-<span class="number">1</span>], <span class="built_in">input</span>().split())))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  提交之后有一个点报超时，猜测可能存在卡常，遂改用 C++ 实现。维护一个字符栈，每次读入一个字符，如果不是空格或回车，则直接入栈；否则边出栈边输出，直到将整个栈清空，然后如果是回车，则退出循环</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="built_in">getchar</span>();  <span class="comment">// 读掉换行符</span></span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        stack&lt;<span class="keyword">char</span>&gt; st; <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">            ch = <span class="built_in">getchar</span>();  <span class="comment">// 读一个字符</span></span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'\n'</span> || ch == <span class="string">' '</span>) {  <span class="comment">// 如果是空格或回车则反转输出</span></span><br><span class="line">                <span class="keyword">while</span> (!st.<span class="built_in">empty</span>()) {</span><br><span class="line">                    <span class="built_in">putchar</span>(st.<span class="built_in">top</span>());</span><br><span class="line">                    st.<span class="built_in">pop</span>();</span><br><span class="line">                }</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">                <span class="keyword">if</span> (ch == <span class="string">'\n'</span>) {</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {  <span class="comment">// 否则直接入栈</span></span><br><span class="line">                st.<span class="built_in">push</span>(ch);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="n，-还是n">n， 还是n</h3><p>  <s>STL 真好用</s>，直接暴搜就能过（话说一百万真的不会超时嘛</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    string n_str = <span class="built_in">to_string</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) {</span><br><span class="line">        <span class="keyword">if</span> (i % n == <span class="number">0</span>) {</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (~<span class="built_in">to_string</span>(i).<span class="built_in">find</span>(n_str)) {  </span><br><span class="line">            <span class="comment">// find 找不到时会返回 -1，整数中只有 -1 经过按位取反（~）结果为 0</span></span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="字符串排序">字符串排序</h3><p>  虽然 n, m 都不大，但是保险起见，还是用一下缓存优化（防止 cmp 函数每次都计算无序度导致超时），外加 STL 中的 stable_sort（稳定排序）即可 AC</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pack</span> {</span></span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">int</span> chaos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line">                <span class="keyword">if</span> (str[j] &lt; str[i]) {</span><br><span class="line">                    chaos += <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> pack&amp; other) <span class="keyword">const</span> {  </span><br><span class="line">        <span class="comment">// 定义小于号，sort 默认按字典序排序，这里改为按「无序度」</span></span><br><span class="line">        <span class="keyword">return</span> chaos &lt; other.chaos;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> pack&amp; other) <span class="keyword">const</span> {  <span class="comment">// 定义等于号</span></span><br><span class="line">        <span class="keyword">return</span> str == other.str;</span><br><span class="line">    }</span><br><span class="line">} arr[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m ; i++) {</span><br><span class="line">        cin &gt;&gt; arr[i].str;</span><br><span class="line">        arr[i].<span class="built_in">init</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">stable_sort</span>(arr, arr+m);  <span class="comment">// STL 中的稳定排序，不会改变相同元素的顺序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line">        cout &lt;&lt; arr[i].str &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="三角形的面积">三角形的面积</h3><p>  简单计算几何，下面给出计算公式（可计算任意多边形）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mfrac><mrow><mover accent="true"><mrow><mi>O</mi><msub><mi>P</mi><mi>i</mi></msub></mrow><mo stretchy="true">→</mo></mover><mo>×</mo><mover accent="true"><mrow><mi>O</mi><msub><mi>P</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><mo stretchy="true">→</mo></mover></mrow><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">S = |\frac{\overrightarrow{OP_i}\times\overrightarrow{OP_{i+1}}}{2}| </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5683em;vertical-align:-0.686em;"></span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8823em;"><span style="top:-2.5193em;"><span class="pstrut" style="height:3.2053em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.4353em;"><span class="pstrut" style="height:3.2053em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8823em;"><span class="pstrut" style="height:3.2053em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为该多边形第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个顶点的坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>P</mi><mi>n</mi></msub><mo>=</mo><msub><mi>P</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i\in[0, n), P_n = P_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，直接套用公式算出答案：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> P[<span class="number">3</span>][<span class="number">2</span>];  <span class="comment">// 每个点的坐标</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) {</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;P[i][j]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (!(P[<span class="number">0</span>][<span class="number">0</span>] || P[<span class="number">0</span>][<span class="number">1</span>] || P[<span class="number">1</span>][<span class="number">0</span>] || P[<span class="number">1</span>][<span class="number">1</span>] || P[<span class="number">2</span>][<span class="number">0</span>] || P[<span class="number">2</span>][<span class="number">1</span>])) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) {</span><br><span class="line">            sum += P[i][<span class="number">0</span>] * P[(i+<span class="number">1</span>)%<span class="number">3</span>][<span class="number">1</span>] - P[(i+<span class="number">1</span>)%<span class="number">3</span>][<span class="number">0</span>] * P[i][<span class="number">1</span>];  <span class="comment">// 算叉乘</span></span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>, <span class="built_in">abs</span>(sum / <span class="number">2</span>));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  或者直接对三角形的两条边做叉乘：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">        <span class="keyword">double</span> x1, y1, x2, y2, x3, y3;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf %lf %lf %lf"</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2, &amp;x3, &amp;y3);</span><br><span class="line">        <span class="keyword">if</span> (!(x1 || y1 || x2 || y2 || x3 || y3)) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">double</span> sum = (x2-x1) * (y3-y1) - (x3-x1) * (y2-y1);  <span class="comment">// 三角形任意两边作向量叉乘</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>, <span class="built_in">abs</span>(sum) / <span class="number">2</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="循环数">循环数</h3><p>  根据循环数的性质判断，循环数乘上它自己的 位数+1 会得到一串 9 【<a href="https://zh.wikipedia.org/zh-hans/%E5%BE%AA%E7%8E%AF%E6%95%B0">Wiki 传送门</a>】，另外特判一个 0 即可：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(num):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">set</span>(<span class="built_in">str</span>(<span class="built_in">int</span>(num) * (<span class="built_in">len</span>(num)+<span class="number">1</span>))) == {<span class="string">'9'</span>}:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'Yes'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'No'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Yes'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="电能消耗">电能消耗</h3><p>  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">l_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 均不大于 1440，无需使用数学计算加速，直接暴力模拟每分钟的电量消耗即可。此外题目描述有误，汤姆使用电脑的时间周期应为左闭合区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>l</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[l_1, r_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>l</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[l_2, r_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>、……、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>l</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[l_n, r_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> work[<span class="number">2000</span>] = {<span class="number">0</span>};  <span class="comment">// 标记每分钟电脑的使用情况</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, p1, p2, p3, t1, t2;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p1 &gt;&gt; p2 &gt;&gt; p3 &gt;&gt; t1 &gt;&gt; t2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> L, R;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">int</span> l, r; cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        (i == <span class="number">0</span>) &amp;&amp; (L = l);</span><br><span class="line">        (i == n<span class="number">-1</span>) &amp;&amp; (R = r);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l; j &lt; r; j++) {</span><br><span class="line">            work[j] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, idle;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = L; i &lt; R; i++) {</span><br><span class="line">        <span class="keyword">if</span> (work[i]) {</span><br><span class="line">            idle = <span class="number">0</span>;</span><br><span class="line">            sum += p1;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">if</span> (idle &gt;= t1 + t2) {  <span class="comment">// 进入睡眠模式</span></span><br><span class="line">                sum += p3;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (idle &gt;= t1) {  <span class="comment">// 屏幕保护程序启动</span></span><br><span class="line">                sum += p2;</span><br><span class="line">            } <span class="keyword">else</span> {  <span class="comment">// 标准模式</span></span><br><span class="line">                sum += p1;</span><br><span class="line">            }</span><br><span class="line">            idle++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="计算校验码">计算校验码</h3><p>  根据题目最后的 Tips，不难发现无论输入的 <code>N</code> 是几进制数，都不会对各位数字之和产生影响，不妨设各位数字之和为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，校验码为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>，可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>B</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi><mtext>&nbsp;mod&nbsp;</mtext><mo stretchy="false">(</mo><mi>B</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mtext>&nbsp;mod&nbsp;</mtext><mo stretchy="false">(</mo><mi>B</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m = [(B-1) - x \text{ mod } (B-1) ]\text{ mod }(B-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord text"><span class="mord">&nbsp;mod&nbsp;</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)]</span><span class="mord text"><span class="mord">&nbsp;mod&nbsp;</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>  据此编写代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum_count</span><span class="params">(string str)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'0'</span> &lt;= ch &amp;&amp; ch &lt;= <span class="string">'9'</span>) {</span><br><span class="line">            sum += ch - <span class="string">'0'</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            sum += <span class="number">10</span> + ch - <span class="string">'a'</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">const</span> string digits = <span class="string">"0123456789abcdef"</span>;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        <span class="keyword">int</span> B;</span><br><span class="line">        string N;</span><br><span class="line">        cin &gt;&gt; B &gt;&gt; N;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m = ((B<span class="number">-1</span>) - <span class="built_in">sum_count</span>(N) % (B<span class="number">-1</span>)) % (B<span class="number">-1</span>);</span><br><span class="line">        cout &lt;&lt; digits[m] &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="训练作业二">训练作业二</h2><h3 id="字符串反转2">字符串反转2</h3><p>  依旧先试 Python 硬怼，这一次没有超时：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">' '</span>.join(<span class="built_in">input</span>().split()[::-<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></tbody></table></figure><h3 id="487-3279">487-3279</h3><p>  每次输入电话号码后先格式化，然后使用 STL 中的 map 统计频次，最后选取频次大于 1 的输出即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    map&lt;string, <span class="keyword">int</span>&gt; count;</span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        string str, wrap;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">'A'</span> &lt;= ch &amp;&amp; ch &lt;= <span class="string">'Z'</span>) {</span><br><span class="line">                (ch &gt;= <span class="string">'Q'</span>) &amp;&amp; ch--;</span><br><span class="line">                wrap += (ch-<span class="string">'A'</span>)/<span class="number">3</span> + <span class="string">'2'</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">'0'</span> &lt;= ch &amp;&amp; ch &lt;= <span class="string">'9'</span>) {</span><br><span class="line">                wrap += ch;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        count[wrap] += <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : count) {</span><br><span class="line">        <span class="keyword">if</span> (item.second &gt; <span class="number">1</span>) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) {  <span class="comment">// 分段输出</span></span><br><span class="line">                <span class="built_in">putchar</span>(item.first[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; <span class="number">7</span>; i++) {</span><br><span class="line">                <span class="built_in">putchar</span>(item.first[i]);</span><br><span class="line">            }</span><br><span class="line">            cout &lt;&lt; <span class="string">" "</span> &lt;&lt; item.second &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="缺席考试的是谁？">缺席考试的是谁？</h3><p>  对所有名字作一次异或运算，最后剩下的即为缺席学生的姓名，很神奇吧</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">64</span>] = {<span class="number">0</span>};</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>*n<span class="number">-1</span>; i++) {</span><br><span class="line">            <span class="keyword">char</span> tmp[<span class="number">64</span>];</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, tmp);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; tmp[j]; j++) {</span><br><span class="line">                name[j] ^= tmp[j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, name);</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="电话号码">电话号码</h3><p>  使用字典树存储电话号码的逆，可以很方便的去除重复的电话号码，对所有朋友分别建一棵字典树，存入逆序的电话号码后直接排序输出即可（注意题目要求是先按长度，再按数字大小排序）。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Trie</span> {</span>  <span class="comment">// 字典树</span></span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">'\0'</span>;</span><br><span class="line">    Trie* next[<span class="number">10</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; str, <span class="keyword">int</span> pos=<span class="number">0</span>)</span> </span>{  <span class="comment">// 递归插入</span></span><br><span class="line">        <span class="keyword">if</span> (pos &lt; str.<span class="built_in">size</span>()) {</span><br><span class="line">            <span class="keyword">int</span> index = str[pos] - <span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">if</span> (!next[index]) {</span><br><span class="line">                next[index] = <span class="keyword">new</span> Trie;</span><br><span class="line">                next[index] -&gt; ch = str[pos];</span><br><span class="line">            }</span><br><span class="line">            next[index] -&gt; <span class="built_in">insert</span>(str, pos+<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">count</span><span class="params">(vector&lt;string&gt;&amp; arr, string str=<span class="string">""</span>)</span> </span>{  <span class="comment">// 将字典树中的所有单词放入 arr 中</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span> (next[i]) {</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="comment">// 这里的三目运算符用于去除根节点的空字符</span></span><br><span class="line">                next[i] -&gt; <span class="built_in">count</span>(arr, ch ? ch + str : str);   </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (!flag) {</span><br><span class="line">            arr.<span class="built_in">push_back</span>(ch+str);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">map&lt;string, Trie&gt; book;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        string name; <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            string phone; cin &gt;&gt; phone;</span><br><span class="line">            <span class="comment">// 反转后插入字符串</span></span><br><span class="line">            <span class="built_in">reverse</span>(phone.<span class="built_in">begin</span>(), phone.<span class="built_in">end</span>());</span><br><span class="line">            book[name].<span class="built_in">insert</span>(phone);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; book.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> record : book) {  <span class="comment">// map 中默认 key 按从小到大排序，这里不需要额外的排序过程</span></span><br><span class="line">        vector&lt;string&gt; arr;</span><br><span class="line">        record.second.<span class="built_in">count</span>(arr);</span><br><span class="line">        <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>(), [] (<span class="keyword">const</span> string&amp; a, <span class="keyword">const</span> string&amp; b) {  <span class="comment">// 按题目要求对号码排序</span></span><br><span class="line">            <span class="keyword">if</span> (a.<span class="built_in">size</span>() &lt; b.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">atoi</span>(a.<span class="built_in">c_str</span>()) &lt; <span class="built_in">atoi</span>(b.<span class="built_in">c_str</span>());</span><br><span class="line">        });</span><br><span class="line">        cout &lt;&lt; record.first &lt;&lt; <span class="string">" "</span> &lt;&lt; arr.<span class="built_in">size</span>() &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> name : arr) {</span><br><span class="line">            cout &lt;&lt; name &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="点球大战">点球大战</h3><p>  模拟即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        <span class="keyword">char</span> result[<span class="number">10</span>][<span class="number">2</span>] = {<span class="number">0</span>};</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {  <span class="comment">// 统计结果</span></span><br><span class="line">            string str;</span><br><span class="line">            <span class="keyword">do</span> {</span><br><span class="line">                cin &gt;&gt; str;</span><br><span class="line">            } <span class="keyword">while</span>(str != <span class="string">"no"</span> &amp;&amp; str != <span class="string">"good"</span>);</span><br><span class="line">            <span class="keyword">if</span> (str == <span class="string">"no"</span>) {</span><br><span class="line">                result[i &gt;&gt; <span class="number">1</span>][i &amp; <span class="number">1</span>] = <span class="string">'X'</span>;</span><br><span class="line">                cin &gt;&gt; str;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                result[i &gt;&gt; <span class="number">1</span>][i &amp; <span class="number">1</span>] = <span class="string">'O'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (n + <span class="number">1</span>)/<span class="number">2</span>; i++) {  <span class="comment">// 输出场次</span></span><br><span class="line">            cout &lt;&lt; (i + <span class="number">1</span>) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; <span class="string">"Score"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) {  <span class="comment">// 打印</span></span><br><span class="line">            <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (n + <span class="number">1</span>)/<span class="number">2</span>; j++) {</span><br><span class="line">                <span class="keyword">if</span> (result[j][i]) {</span><br><span class="line">                    cnt += result[j][i] == <span class="string">'O'</span>;</span><br><span class="line">                    cout &lt;&lt; result[j][i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    cout &lt;&lt; <span class="string">"- "</span>;</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="飞行棋">飞行棋</h3><p>  模拟题，一个比较方便的技巧是将棋盘直接初始化为应该跳转到的格</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Random</span> {</span>  <span class="comment">// 骰子类</span></span><br><span class="line">    <span class="keyword">int</span> a, b, f;</span><br><span class="line">    <span class="built_in">Random</span>(<span class="keyword">int</span> a_, <span class="keyword">int</span> b_, <span class="keyword">int</span> c_) {</span><br><span class="line">        a = a_, b = b_, f = c_;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span> <span class="params">()</span> </span>{</span><br><span class="line">        f = (a*f + b) % <span class="number">6</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, a, b, c;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; c) {</span><br><span class="line">        <span class="keyword">int</span> gmap[<span class="number">200</span>] = {<span class="number">0</span>};  <span class="comment">// 生成「游戏地图」</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            string str; cin &gt;&gt; str;</span><br><span class="line">            <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">'N'</span>) {</span><br><span class="line">                gmap[i] = i;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                gmap[i] = <span class="built_in">atoi</span>(str.<span class="built_in">substr</span>(<span class="number">1</span>, string::npos).<span class="built_in">c_str</span>());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">auto</span> dice = <span class="built_in">Random</span>(a, b, c);  <span class="comment">// 生成一个骰子</span></span><br><span class="line">        <span class="keyword">int</span> pos[<span class="number">2</span>] = {<span class="number">0</span>};  <span class="comment">// 两人的位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, i_ = <span class="number">0</span>; ; i_++, i = i_ &amp; <span class="number">1</span>) {</span><br><span class="line">            pos[i] += <span class="built_in">dice</span>();  <span class="comment">// 摇骰子</span></span><br><span class="line">            <span class="keyword">while</span> (pos[i] &gt;= n || pos[i] &lt; <span class="number">0</span>) {  <span class="comment">// 处理坐标超范围的情况</span></span><br><span class="line">                (pos[i] &gt;= n) &amp;&amp; (pos[i] = <span class="number">2</span>*(n<span class="number">-1</span>)-pos[i]);</span><br><span class="line">                (pos[i] &lt; <span class="number">0</span>) &amp;&amp; (pos[i] = -pos[i]);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 跳转（如果该格子为 N 就是原地跳转，上面生成地图的部分有相关代码）</span></span><br><span class="line">            pos[i] = gmap[pos[i]];  </span><br><span class="line">            <span class="keyword">if</span> (pos[i] == n<span class="number">-1</span>) {  <span class="comment">// 如果有人赢了则结束游戏</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, i &amp; <span class="number">1</span> ? <span class="string">"Yueyue"</span> : <span class="string">"Lele"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (pos[i] == pos[!i]) {  <span class="comment">// 处理相遇时踢回起点的情况</span></span><br><span class="line">                pos[!i] = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="棋盘">棋盘</h3><p>  动态规划题，用 <code>map[][]</code> 存储输入数据，数组 <code>F1[i][j]</code> 表示以 <code>[i, j]</code> 为右下角的最大黑色网格（主对角线为黑色）大小，类似地 <code>F2[i][j]</code> 表示最大白色网格的大小，那么可以导出递推式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F_1[i, 0] = F_1[0, j] = F_2[i, 0] = F_2[0, j] = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F_1[i, j] = \begin{cases}\min(F_1[i-1, j-1], F_2[i-1, j], F_2[i, j-1]) + 1 \\0, (map[i][j] = 0)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F_2[i][j] =  \begin{cases}\min(F_2[i-1, j-1], F_1[i-1, j], F_1[i, j-1]) + 1 \\0, (map[i][j] = 0)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> gmap[<span class="number">2001</span>][<span class="number">2001</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> F1[<span class="number">2001</span>][<span class="number">2001</span>] = {<span class="number">0</span>},  <span class="comment">// 黑色 - 1</span></span><br><span class="line">    F2[<span class="number">2001</span>][<span class="number">2001</span>] = {<span class="number">0</span>};  <span class="comment">// 白色 - 0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n; <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) {</span><br><span class="line">            gmap[i][j] = <span class="built_in">getchar</span>() - <span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> max_size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 按状态转移方程做动态规划</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) {</span><br><span class="line">            <span class="keyword">if</span> (gmap[i][j]) {  <span class="comment">// 黑色</span></span><br><span class="line">                F1[i][j] = <span class="built_in">min</span>(F1[i<span class="number">-1</span>][j<span class="number">-1</span>], <span class="built_in">min</span>(F2[i<span class="number">-1</span>][j], F2[i][j<span class="number">-1</span>])) + <span class="number">1</span>;</span><br><span class="line">                F2[i][j] = <span class="number">0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                F2[i][j] = <span class="built_in">min</span>(F2[i<span class="number">-1</span>][j<span class="number">-1</span>], <span class="built_in">min</span>(F1[i<span class="number">-1</span>][j], F1[i][j<span class="number">-1</span>])) + <span class="number">1</span>;</span><br><span class="line">                F1[i][j] = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            max_size = <span class="built_in">max</span>(max_size, F1[i][j]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 此时已经知道最大的棋盘大小，最后用双重循环统计数量</span></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) {</span><br><span class="line">            <span class="keyword">if</span> (F1[i][j] == max_size) {</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; max_size &lt;&lt; <span class="string">" "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="Engine-字符串">Engine-字符串</h3><p>  模拟题，直接 Python 过了</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Paper</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.title = <span class="built_in">input</span>()</span><br><span class="line">        self.keys = <span class="built_in">set</span>(s.lower() <span class="keyword">for</span> s <span class="keyword">in</span> self.title.split())</span><br><span class="line">        self.refers = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query</span>(<span class="params">keywords</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> p: <span class="built_in">all</span>(word <span class="keyword">in</span> p.keys <span class="keyword">for</span> word <span class="keyword">in</span> keywords)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="keyword">while</span> n:</span><br><span class="line">        papers = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            papers.append(Paper())</span><br><span class="line">        m = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            title = <span class="built_in">input</span>()</span><br><span class="line">            keywords = [word.lower() <span class="keyword">for</span> word <span class="keyword">in</span> title.split()]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">sorted</span>(<span class="built_in">filter</span>(query(keywords), papers), key=<span class="keyword">lambda</span> x: -x.refers):</span><br><span class="line">                <span class="built_in">print</span>(p.title)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'***'</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'---'</span>)</span><br><span class="line">        n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><h3 id="字符串压缩">字符串压缩</h3><p>  动态规划题，如果用数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F_1[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 表示以第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个字符结尾的子串所需的最小钱币数，那么不难想到下面的递推式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>a</mi><mo separator="true">,</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">{</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">}</mo><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F[i] = \min(F[i-1] + a, \min\{F[i-len]\} + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mclose">]}</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p><p><strong>解释：</strong></p><ul><li><p> 如果添加第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个字符后不能构成前面字符串的子串，则花费 a 金币将其直接编码</p></li><li><p> 如果添加第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个字符后，新串的最后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">len</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span></span></span> 位为前面的子串，则可以先编码前面的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">i-len</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span></span></span> 个字符，再花费 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 金币编码最后的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">len</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span></span></span> 位字符</p></li></ul><p>  此时发现题目的一个 bug 点，题目描述中没有说明 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>≤</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">b\leq a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>，那么如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>&gt;</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">b &gt; a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>，就没有办法证明取最长公共后缀的最优子结构性质，于是没法在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的时间内解决问题，导致超时（也许是我太菜了没想到）</p><p>  由于我太懒了，不想慢慢研究最长公共后缀的 DP（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 解法），这里放一个<a href="https://heartlessly.github.io/problems/codeforces-1120c/">传送门</a>，然后我将使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的暴力方法求解：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, a, b;</span><br><span class="line">    string str;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; str;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">F</span><span class="params">(n)</span></span>;</span><br><span class="line">    F[<span class="number">0</span>] = a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">        F[i] = F[i<span class="number">-1</span>] + a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j*<span class="number">2</span> &lt;= i+<span class="number">1</span>; j++) {</span><br><span class="line">            <span class="comment">// 右值引用避免字符串复制开销</span></span><br><span class="line">            string&amp;&amp; L = str.<span class="built_in">substr</span>(<span class="number">0</span>, i+<span class="number">1</span>-j);</span><br><span class="line">            string&amp;&amp; R = str.<span class="built_in">substr</span>(i+<span class="number">1</span>-j, j);</span><br><span class="line">            <span class="keyword">if</span> (L.<span class="built_in">find</span>(R) != string::npos) {</span><br><span class="line">                F[i] = <span class="built_in">min</span>(F[i], F[i-j] + b);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; F[str.<span class="built_in">size</span>() - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="拼写检查">拼写检查</h3><p>  经典动态规划问题——编辑距离，稍微做些优化直接搬上来用就行了，它的状态转移方程为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">F[0, i] = F[i, 0] = i </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">!</mo><mo>=</mo><mi>b</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F[i, j] = \min(F[i-1][j] + 1, F[i][j-1] + 1, F[i-1][j-1] + (a[i] != b[j])) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]))</span></span></span></span></span></p><p>  其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F[i,j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 表示字符串 <code>a</code> 的前 <code>i</code> 个字符组成的子串和字符串 <code>b+1</code> 的前 <code>j+1</code> 个字符</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">canfix</span><span class="params">(string src, string dst)</span> </span>{  <span class="comment">// 计算字符串编辑距离</span></span><br><span class="line">    <span class="keyword">int</span> F[<span class="number">20</span>][<span class="number">20</span>] = {<span class="number">0</span>};</span><br><span class="line">    <span class="keyword">int</span> s_len = src.<span class="built_in">size</span>(), d_len = dst.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) {</span><br><span class="line">        F[i][<span class="number">0</span>] = F[<span class="number">0</span>][i] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s_len; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; d_len; j++) {</span><br><span class="line">            F[i+<span class="number">1</span>][j+<span class="number">1</span>] = <span class="built_in">min</span>(F[i][j], <span class="built_in">min</span>(F[i][j+<span class="number">1</span>], F[i+<span class="number">1</span>][j])) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (src[i] == dst[j]) {</span><br><span class="line">                F[i+<span class="number">1</span>][j+<span class="number">1</span>] = <span class="built_in">min</span>(F[i+<span class="number">1</span>][j+<span class="number">1</span>], F[i][j]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> F[s_len][d_len] &lt;= <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">vector&lt;string&gt; dict;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string word; cin &gt;&gt; word;</span><br><span class="line">    <span class="keyword">while</span> (word != <span class="string">"#"</span>) {</span><br><span class="line">        dict.<span class="built_in">push_back</span>(word);</span><br><span class="line">        cin &gt;&gt; word;</span><br><span class="line">    }</span><br><span class="line">    cin &gt;&gt; word;</span><br><span class="line">    <span class="keyword">while</span> (word != <span class="string">"#"</span>) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">find</span>(dict.<span class="built_in">begin</span>(), dict.<span class="built_in">end</span>(), word) != dict.<span class="built_in">end</span>()) {  <span class="comment">// 如果字典中有则认为正确</span></span><br><span class="line">            cout &lt;&lt; word &lt;&lt; <span class="string">" is correct"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> {  <span class="comment">// 否则尝试纠错</span></span><br><span class="line">            cout &lt;&lt; word &lt;&lt; <span class="string">": "</span>;</span><br><span class="line">            <span class="keyword">for</span> (string str : dict) {</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">canfix</span>(word, str)) {  <span class="comment">// 编辑距离为 1 则输出该替换</span></span><br><span class="line">                    cout &lt;&lt; str &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">        cin &gt;&gt; word;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ul><li>更新：BK 树解法（最后一个排序做得比较随意，懒得慢慢改树了）</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">edt</span><span class="params">(<span class="keyword">const</span> string&amp; src, <span class="keyword">const</span> string&amp; dst)</span> </span>{  <span class="comment">// 计算字符串编辑距离</span></span><br><span class="line">    <span class="keyword">int</span> F[<span class="number">20</span>][<span class="number">20</span>] = {<span class="number">0</span>};</span><br><span class="line">    <span class="keyword">int</span> s_len = src.<span class="built_in">size</span>(), d_len = dst.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) {</span><br><span class="line">        F[i][<span class="number">0</span>] = F[<span class="number">0</span>][i] = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s_len; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; d_len; j++) {</span><br><span class="line">            F[i+<span class="number">1</span>][j+<span class="number">1</span>] = <span class="built_in">min</span>(F[i][j], <span class="built_in">min</span>(F[i][j+<span class="number">1</span>], F[i+<span class="number">1</span>][j])) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (src[i] == dst[j]) {</span><br><span class="line">                F[i+<span class="number">1</span>][j+<span class="number">1</span>] = <span class="built_in">min</span>(F[i+<span class="number">1</span>][j+<span class="number">1</span>], F[i][j]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> F[s_len][d_len];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bk_tree</span> {</span></span><br><span class="line">    string word;</span><br><span class="line">    map&lt;<span class="keyword">int</span>, bk_tree&gt; child;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; str)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ed_root = <span class="built_in">edt</span>(word, str);  <span class="comment">// 计算到根节点的编辑距离</span></span><br><span class="line">        <span class="keyword">if</span> (child.<span class="built_in">find</span>(ed_root) == child.<span class="built_in">end</span>()) {</span><br><span class="line">            child[ed_root] = {str};</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            child[ed_root].<span class="built_in">insert</span>(str);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">const</span> string&amp; str, vector&lt;string&gt;&amp; res)</span> </span>{  <span class="comment">// 查询</span></span><br><span class="line">        <span class="keyword">int</span> ed_root = <span class="built_in">edt</span>(word, str);</span><br><span class="line">        <span class="keyword">if</span> (ed_root &lt;= <span class="number">1</span>) res.<span class="built_in">push_back</span>(word);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> item : child) {</span><br><span class="line">            <span class="keyword">if</span> (item.first &gt;= ed_root - <span class="number">1</span> &amp;&amp; ed_root &lt;= ed_root + <span class="number">1</span>) {</span><br><span class="line">                item.second.<span class="built_in">query</span>(str, res);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string str; cin &gt;&gt; str;</span><br><span class="line">    bk_tree dict = {<span class="string">"#:#:#"</span>};</span><br><span class="line">    set&lt;string&gt; cnt;</span><br><span class="line">    map&lt;string, <span class="keyword">int</span>&gt; weight; <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str != <span class="string">"#"</span>) {</span><br><span class="line">        dict.<span class="built_in">insert</span>(str), cnt.<span class="built_in">insert</span>(str);</span><br><span class="line">        weight[str] = index++;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">    }</span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    <span class="keyword">while</span> (str != <span class="string">"#"</span>) {</span><br><span class="line">        <span class="keyword">if</span> (cnt.<span class="built_in">find</span>(str) != cnt.<span class="built_in">end</span>()) {</span><br><span class="line">            cout &lt;&lt; str &lt;&lt; <span class="string">" is correct"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cout &lt;&lt; str &lt;&lt; <span class="string">": "</span>;</span><br><span class="line">            vector&lt;string&gt; arr;</span><br><span class="line">            dict.<span class="built_in">query</span>(str, arr);</span><br><span class="line">            <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>(), [&amp;weight] (<span class="keyword">const</span> string&amp; a, <span class="keyword">const</span> string&amp; b) {</span><br><span class="line">                <span class="keyword">return</span> weight[a] &lt; weight[b];</span><br><span class="line">            });</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> fix : arr) {</span><br><span class="line">                cout &lt;&lt; fix &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            }</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="最小的-K-个数">最小的 K 个数</h3><p>  按题目提示做即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">set&lt;<span class="keyword">int</span>&gt; data;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        <span class="keyword">int</span> tmp; cin &gt;&gt; tmp;</span><br><span class="line">        data.<span class="built_in">insert</span>(tmp);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = data.<span class="built_in">begin</span>(); k-- &amp;&amp; it != data.<span class="built_in">end</span>(); it++) {</span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="绩点计算">绩点计算</h3><p>  按题目意思算即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">mark2point</span><span class="params">(<span class="keyword">int</span> mark)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">90</span>) <span class="keyword">return</span> <span class="number">4.0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">85</span>) <span class="keyword">return</span> <span class="number">3.7</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">82</span>) <span class="keyword">return</span> <span class="number">3.3</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">78</span>) <span class="keyword">return</span> <span class="number">3.0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">75</span>) <span class="keyword">return</span> <span class="number">2.7</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">72</span>) <span class="keyword">return</span> <span class="number">2.3</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">68</span>) <span class="keyword">return</span> <span class="number">2.0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">64</span>) <span class="keyword">return</span> <span class="number">1.5</span>;</span><br><span class="line">    <span class="keyword">if</span> (mark &gt;= <span class="number">60</span>) <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> weight[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">float</span> sum_weight = <span class="number">0</span>, sum_mp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; weight[i];</span><br><span class="line">        sum_weight += weight[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">int</span> mark; cin &gt;&gt; mark;</span><br><span class="line">        sum_mp += weight[i] * <span class="built_in">mark2point</span>(mark);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f"</span>, sum_mp / sum_weight);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="xxx定律">xxx定律</h3><p>  直接模拟</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        <span class="keyword">int</span> step = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">1</span>) {</span><br><span class="line">            <span class="keyword">if</span> (n &amp; <span class="number">1</span>) {</span><br><span class="line">                n = <span class="number">3</span>*n + <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            step++;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; step &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="数的距离差">数的距离差</h3><p>  对题中距离差定义简单整理，可知 x 是数组中与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>+</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{max+min}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2007em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8557em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 最接近的那个数，这里直接 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 求解：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; arr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">int</span> tmp; cin &gt;&gt; tmp;</span><br><span class="line">        arr.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">float</span> m = (<span class="keyword">float</span>) (arr[<span class="number">0</span>] + arr[arr.<span class="built_in">size</span>()<span class="number">-1</span>]) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = arr.<span class="built_in">rbegin</span>(); it != arr.<span class="built_in">rend</span>(); it++) {</span><br><span class="line">        <span class="keyword">if</span> (*it &lt;= m) {</span><br><span class="line">            cout &lt;&lt; *it &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="亲和数">亲和数</h3><p>  直接暴力：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factor_sum</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i*<span class="number">2</span> &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) {</span><br><span class="line">            sum += i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> A, B;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; A &gt;&gt; B) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">factor_sum</span>(B) == A &amp;&amp; <span class="built_in">factor_sum</span>(A) == B) {</span><br><span class="line">            cout &lt;&lt; <span class="string">"YES"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cout &lt;&lt; <span class="string">"NO"</span> &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="金币">金币</h3><p>  暴力计算即可，但要注意将之前的计算结果保存下来，防止重复计算导致超时</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; arr = {<span class="number">0</span>};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{  <span class="comment">// 向后算到至少第 n 天</span></span><br><span class="line">    <span class="keyword">while</span> (arr.<span class="built_in">size</span>() &lt;= n) {</span><br><span class="line">        now += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; now; i++) {</span><br><span class="line">            arr.<span class="built_in">push_back</span>(*arr.<span class="built_in">rbegin</span>() + now);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) {</span><br><span class="line">        <span class="built_in">update</span>(n);</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">" "</span> &lt;&lt; arr[n] &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="小-A-的计算器">小 A 的计算器</h3><p>  不必写进制转换，直接在数组上做加法，逆序存储（个位在最前）可以大幅优化进位效率</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        string a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">int</span> len_a = a.<span class="built_in">size</span>(), len_b = b.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans[<span class="number">1000</span>] = {<span class="number">0</span>};</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len_a; i++) {</span><br><span class="line">            ans[i] += a[len_a-i<span class="number">-1</span>] - <span class="string">'a'</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len_b; i++) {</span><br><span class="line">            ans[i] += b[len_b-i<span class="number">-1</span>] - <span class="string">'a'</span>;</span><br><span class="line">        }</span><br><span class="line">        stack&lt;<span class="keyword">char</span>&gt; st;  <span class="comment">// 反转后输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ans[i]; i++) {</span><br><span class="line">            <span class="keyword">if</span> (ans[i] &gt;= <span class="number">26</span>) {</span><br><span class="line">                ans[i+<span class="number">1</span>] += ans[i] / <span class="number">26</span>;</span><br><span class="line">                ans[i] %= <span class="number">26</span>;</span><br><span class="line">            }</span><br><span class="line">            st.<span class="built_in">push</span>(ans[i] + <span class="string">'a'</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (!st.<span class="built_in">empty</span>()) {</span><br><span class="line">            <span class="built_in">putchar</span>(st.<span class="built_in">top</span>());</span><br><span class="line">            st.<span class="built_in">pop</span>();</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="小丑排序">小丑排序</h3><p>  从头开始，每次走两步并输出，碰到数组尾端后返回，继续输出之前没输出过的名字：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string arr[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> n, T = <span class="number">1</span>; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n) {</span><br><span class="line">        cout &lt;&lt; <span class="string">"set-"</span> &lt;&lt; T++ &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; arr[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> vst[<span class="number">20</span>] = {<span class="number">0</span>};</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span>) {</span><br><span class="line">            cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">            vst[i] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt; <span class="number">0</span>; i--) {</span><br><span class="line">            <span class="keyword">if</span> (!vst[i]) {</span><br><span class="line">                cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="数圈">数圈</h3><p>  先求出中心坐标，然后向外旋转填数，最后整体输出</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">11</span>][<span class="number">11</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> ways[<span class="number">4</span>][<span class="number">2</span>] = {{<span class="number">1</span>, <span class="number">0</span>}, {<span class="number">0</span>, <span class="number">-1</span>}, {<span class="number">-1</span>, <span class="number">0</span>}, {<span class="number">0</span>, <span class="number">1</span>}}, dir = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fill</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> x, y, cnt = <span class="number">1</span>;</span><br><span class="line">    x = y = (n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; ; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++) {</span><br><span class="line">                arr[x][y] = cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt; n * n) {</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                }</span><br><span class="line">                x +=  ways[dir][<span class="number">0</span>], y += ways[dir][<span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            dir = (dir + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">fill</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) {</span><br><span class="line">            cout &lt;&lt; arr[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="锤子剪刀布">锤子剪刀布</h3><p>  直接模拟并记录比赛结果，这题代码写得比较长，但应该逻辑都挺清晰</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'A'</span> || ch &gt; <span class="string">'Z'</span>) {</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> win_A[<span class="number">3</span>] = {<span class="number">0</span>}, win_B[<span class="number">3</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">char</span> A = <span class="built_in">read</span>(), B = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span> (A == <span class="string">'B'</span> &amp;&amp; B == <span class="string">'C'</span>) {</span><br><span class="line">            win_A[<span class="number">0</span>]++;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (A == <span class="string">'C'</span> &amp;&amp; B == <span class="string">'J'</span>) {</span><br><span class="line">            win_A[<span class="number">1</span>]++;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (A == <span class="string">'J'</span> &amp;&amp; B == <span class="string">'B'</span>) {</span><br><span class="line">            win_A[<span class="number">2</span>]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (B == <span class="string">'B'</span> &amp;&amp; A == <span class="string">'C'</span>) {</span><br><span class="line">            win_B[<span class="number">0</span>]++;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (B == <span class="string">'C'</span> &amp;&amp; A == <span class="string">'J'</span>) {</span><br><span class="line">            win_B[<span class="number">1</span>]++;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (B == <span class="string">'J'</span> &amp;&amp; A == <span class="string">'B'</span>) {</span><br><span class="line">            win_B[<span class="number">2</span>]++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> sum_A = win_A[<span class="number">0</span>] + win_A[<span class="number">1</span>] + win_A[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> sum_B = win_B[<span class="number">0</span>] + win_B[<span class="number">1</span>] + win_B[<span class="number">2</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, sum_A, n-sum_A-sum_B, sum_B);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>, sum_B, n-sum_A-sum_B, sum_A);</span><br><span class="line">    <span class="keyword">char</span> most_A, most_B;</span><br><span class="line">    <span class="keyword">int</span> max_A = <span class="number">-1</span>, max_B = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) {</span><br><span class="line">        <span class="keyword">if</span> (win_A[i] &gt; max_A) {</span><br><span class="line">            max_A = win_A[i];</span><br><span class="line">            most_A = <span class="string">"BCJ"</span>[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (win_B[i] &gt; max_B) {</span><br><span class="line">            max_B = win_B[i];</span><br><span class="line">            most_B = <span class="string">"BCJ"</span>[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; most_A &lt;&lt; <span class="string">" "</span> &lt;&lt; most_B;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="新型冠状病毒（COVID19）传播">新型冠状病毒（COVID19）传播</h3><p>  想要直接计算出所有的感染者难度过大，那么不妨反向思考，找出不可能被感染的人，然后用总人数减去，同样也可以得到最终答案</p><p>  不难发现，以下两类人一定会被感染：</p><ul><li><p>开始时跑在感染者后面，且速度大于感染者</p></li><li><p>开始时跑在感染者前面，且速度小于感染者</p></li></ul><p>  当这两类人被感染之后，又成为新的感染者，随着时间的推进，已经被感染的人又会去感染其他人；有没有新的人被感染，是根据当前已经被感染的人的最大和最小速度决定的，随之可以注意到，以下两类人永远不会被感染：</p><ul><li><p>开始时跑在感染者前面，且比感染者和他后面所有人跑得都快</p></li><li><p>开始时跑在感染者后面，且比感染者和他前面所有人跑的都慢</p></li></ul><p>  通过一次循环统计出最大和最小速度，然后再用一重循环统计不可能感染的人数即可：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">// 输入部分</span></span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k; k--;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">s</span><span class="params">(n)</span>, <span class="title">v</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; v[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> v_min = inf, v_max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">if</span> (s[i] &lt;= s[k]) {  <span class="comment">// 感染者和他后面的人中的最大速度</span></span><br><span class="line">            v_max = <span class="built_in">max</span>(v_max, v[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt;= s[k]) {  <span class="comment">// 感染者和他前面的人中的最小速度</span></span><br><span class="line">            v_min = <span class="built_in">min</span>(v_min, v[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> impossible = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt; s[k] &amp;&amp; v[i] &gt;= v_max) {  <span class="comment">// 跑在前面，且比最快的感染者跑得还快</span></span><br><span class="line">            impossible++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (s[i] &lt; s[k] &amp;&amp; v[i] &lt;= v_min) {  <span class="comment">// 跑在后面，且比最慢的感染者跑得还慢</span></span><br><span class="line">            impossible++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; (n - impossible) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="训练作业三">训练作业三</h2><h3 id="部分-A-B">部分 A + B</h3><p>  先按字符串读入，然后遍历取出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">P_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">P_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，最后相加</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string sA, dA, sB, dB;</span><br><span class="line">    cin &gt;&gt; sA &gt;&gt; dA &gt;&gt; sB &gt;&gt; dB;</span><br><span class="line">    <span class="keyword">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : sA) {</span><br><span class="line">        <span class="keyword">if</span> (ch == dA[<span class="number">0</span>]) {</span><br><span class="line">            A = A * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : sB) {</span><br><span class="line">        <span class="keyword">if</span> (ch == dB[<span class="number">0</span>]) {</span><br><span class="line">            B = B * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; A + B &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="导弹防御系统">导弹防御系统</h3><p>  经典动态规划问题，定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 表示必须拦截第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 颗导弹的前提下最多能拦截的导弹数，易得状态转移方程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>a</mi><mi>r</mi><mi>r</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>&gt;</mo><mo>=</mo><mi>a</mi><mi>r</mi><mi>r</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F[i] = \max(1, \max(F[i-j]) + 1), (arr[j] &gt;= arr[i])) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]))</span></span></span></span></span></p><p>  初始化数组 <code>F[]</code> 为 1，然后按上述方程演算：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">arr</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; arr[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">F</span><span class="params">(n, <span class="number">1</span>)</span></span>;  <span class="comment">// F[i] 表示在必须拦截第 i 枚导弹的情况下所能取到的最大长度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) {</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt;= arr[i]) {</span><br><span class="line">                F[i] = <span class="built_in">max</span>(F[i], F[j] + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; *<span class="built_in">max_element</span>(F.<span class="built_in">begin</span>(), F.<span class="built_in">end</span>()) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="魔咒词典">魔咒词典</h3><p>  <s>字符串处理的题当然要用 Python 啦</s>，使用<a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F">正则表达式</a>从输入字符串提取出魔咒和功能说明，然后正反向均建立映射，查询时输出即可（其实 C++ 也有正则表达式相关的库澳）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">book = {}</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    line = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> line == <span class="string">'@END@'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    word, func = re.findall(<span class="string">r'(\[.*]) (.*)'</span>, line)[<span class="number">0</span>]</span><br><span class="line">    book[word] = func</span><br><span class="line">    book[func] = word[<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    line = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> line <span class="keyword">in</span> book:</span><br><span class="line">        <span class="built_in">print</span>(book[line])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'what?'</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="打牌">打牌</h3><p>  首先统计每种牌的数量，然后每次输入一行对手的出牌，如果不是顺子（长度 &lt; 5），则按普通规则，否则按顺子规则判断，具体实现看下面代码中的注释：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">raw = <span class="built_in">input</span>()</span><br><span class="line">my_cards = [raw.count(<span class="built_in">str</span>(x)) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>)]  <span class="comment"># 统计每种牌的数量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:  <span class="comment">#: T3-4</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        line = <span class="built_in">input</span>()</span><br><span class="line">        first, length, ans = line[<span class="number">0</span>], <span class="built_in">len</span>(line), []</span><br><span class="line">        <span class="keyword">if</span> length &lt; <span class="number">5</span>:  <span class="comment"># 不是顺子时的规则</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(first), <span class="number">9</span>):</span><br><span class="line">                <span class="keyword">if</span> my_cards[i] &gt;= length:  <span class="comment"># 如果数量足够则判断能压过</span></span><br><span class="line">                    ans.append(<span class="built_in">str</span>(i+<span class="number">1</span>) * length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(first), <span class="number">5</span>):  <span class="comment"># 顺子最多以 5 开头</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">all</span>(my_cards[i:i+<span class="number">5</span>]):  <span class="comment"># 判断是否能出顺子</span></span><br><span class="line">                    ans.append(<span class="built_in">str</span>(i * <span class="number">11111</span> + <span class="number">12345</span>))</span><br><span class="line">        <span class="keyword">if</span> ans:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'YES'</span>, <span class="string">' '</span>.join(ans))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'NO'</span>)</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></tbody></table></figure><h3 id="最大报销额">最大报销额</h3><p>  题目描述不清不楚的，不想写了</p><h3 id="带通配符的数">带通配符的数</h3><p>  递归求解，主要逻辑有三条（其实就是整数比较大小的规则）：</p><ul><li><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的某一位与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的相同，那么他们的大小由后面的位决定</p></li><li><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的某一位比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的小，那么后面无论怎么取都不可能使 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>&gt;</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">W &gt; X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></p></li><li><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的某一位比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的大，那么后面的所有「?」都可以随意取值（0 ~ 9）</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">const</span> string&amp; str, <span class="keyword">const</span> string&amp; raw, <span class="keyword">int</span> index=<span class="number">0</span>)</span> </span>{  <span class="comment">// 返回可能的情况数</span></span><br><span class="line">    <span class="keyword">if</span> (index &gt; str.<span class="built_in">size</span>()) {  <span class="comment">// 边界条件</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (str[index] == <span class="string">'?'</span>) {</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = index + <span class="number">1</span>; i &lt; str.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            (str[i] == <span class="string">'?'</span>) &amp;&amp; (cnt *= <span class="number">10</span>);</span><br><span class="line">        }</span><br><span class="line">        sum += cnt * (<span class="string">'9'</span> - raw[index]);</span><br><span class="line">        sum += <span class="built_in">dfs</span>(str, raw, index + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">if</span> (str[index] == raw[index]) {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">dfs</span>(str, raw, index + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (str[index] &gt; raw[index]) {</span><br><span class="line">            <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = index + <span class="number">1</span>; i &lt; str.<span class="built_in">size</span>(); i++) {</span><br><span class="line">                (str[i] == <span class="string">'?'</span>) &amp;&amp; (cnt *= <span class="number">10</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> cnt;  <span class="comment">// str[index] &lt; raw[index]</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string str, raw;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; str &gt;&gt; raw) {</span><br><span class="line">        cout &lt;&lt; <span class="built_in">dfs</span>(str, raw) &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="愚人节的礼物">愚人节的礼物</h3><p>  遍历字符串，遇左括号计数器 +1，右括号 -1，礼物 B 出现时计数器的值即为层数：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unpack</span><span class="params">(string str)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'('</span>) {</span><br><span class="line">            cnt += <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">')'</span>) {</span><br><span class="line">            cnt -= <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; str) {</span><br><span class="line">        <span class="built_in">unpack</span>(str);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="ab-串">ab 串</h3><p>  这是一道动态规划题（虽然不知道为啥算法标签是前缀和，可能有更妙的方法？）。将 dp 过程中查找的字符串分为 3 个状态，状态 A 为只有 a 的串（aa……a），状态 B 为 a 和 b 的串（aa……aabb……bb），状态 C 为题目要求的串（aaa……aabb……bbaa……aaa）。</p><p>  设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F[i, j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 表示在状态 i 下，前 j 个字符中所能取到的最大长度，那么对于状态 A，从 0 到 j 位中字符 <code>'a'</code> 的个数即为其值；而对于状态 B 和 C，分两种情况讨论：</p><ul><li>第 j 个字符为对应状态的最后一个字符（状态 B 为 <code>'b'</code>，状态 C 为 <code>'a'</code>）：</li></ul><p>  直接从左边转移，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">F[i, j] = F[i, j-1] + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><ul><li>第 j 个字符与状态最后一个字符不同：</li></ul><p>  从左边和上一状态转移，即： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F[i, j] = \max(F[i, j-1], F[i-1, j])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">])</span></span></span></span></p><p>  依照上述三条规则，将数组 <code>F[][]</code> 推演到 <code>F[2][len]</code> 即可得到答案：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> F[<span class="number">3</span>][<span class="number">5001</span>] = {<span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string str; cin &gt;&gt; str;</span><br><span class="line">    <span class="keyword">int</span> length = str.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= length; i++) {  <span class="comment">// 状态 A</span></span><br><span class="line">        F[<span class="number">0</span>][i] = F[<span class="number">0</span>][i<span class="number">-1</span>] + (str[i<span class="number">-1</span>] == <span class="string">'a'</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= length; i++) {  <span class="comment">// 状态 B</span></span><br><span class="line">        <span class="keyword">if</span> (str[i<span class="number">-1</span>] == <span class="string">'b'</span>) {</span><br><span class="line">            F[<span class="number">1</span>][i] = F[<span class="number">1</span>][i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            F[<span class="number">1</span>][i] = <span class="built_in">max</span>(F[<span class="number">1</span>][i<span class="number">-1</span>], F[<span class="number">0</span>][i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= length; i++) {  <span class="comment">// 状态 C</span></span><br><span class="line">        <span class="keyword">if</span> (str[i<span class="number">-1</span>] == <span class="string">'a'</span>) {</span><br><span class="line">            F[<span class="number">2</span>][i] = F[<span class="number">2</span>][i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            F[<span class="number">2</span>][i] = <span class="built_in">max</span>(F[<span class="number">2</span>][i<span class="number">-1</span>], F[<span class="number">1</span>][i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; F[<span class="number">2</span>][length] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="占座位">占座位</h3><p>  与 1-10 的<a href="#%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86">内存管理</a>几乎如出一辙，直接拿来改改交了</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">block</span> {</span></span><br><span class="line">    <span class="keyword">int</span> id, L, R;  <span class="comment">// 经典左闭合</span></span><br><span class="line">    block* next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">block</span>(<span class="keyword">int</span> id_, <span class="keyword">int</span> L_, <span class="keyword">int</span> R_) {</span><br><span class="line">        id = id_, L = L_, R = R_;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> n, _, T;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; _ &gt;&gt; T;</span><br><span class="line"></span><br><span class="line">    block* head = <span class="keyword">new</span> <span class="built_in">block</span>(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">    set&lt;<span class="keyword">int</span>&gt; record;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        string opt; <span class="keyword">int</span> id;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; id;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="string">"in"</span>) {</span><br><span class="line">            <span class="keyword">int</span> arg; cin &gt;&gt; arg;</span><br><span class="line">            <span class="keyword">if</span> (record.<span class="built_in">find</span>(id) != record.<span class="built_in">end</span>()) {  <span class="comment">// 判断是否已经占过座位</span></span><br><span class="line">                cout &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            record.<span class="built_in">insert</span>(id);  <span class="comment">// 打上标记</span></span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;  <span class="comment">// 标记是否分配成功</span></span><br><span class="line">            <span class="keyword">for</span> (block* ptr = head; ptr; ptr = ptr-&gt;next) {  <span class="comment">// 从表头向后查找，每次检查是否能在当前位置之后分配座位</span></span><br><span class="line">                <span class="keyword">if</span> (ptr -&gt; next) {  <span class="comment">// 在 “中间” 插入块</span></span><br><span class="line">                    <span class="keyword">if</span> (ptr-&gt;next-&gt;L - ptr-&gt;R &gt;= arg) {  <span class="comment">// 如果空间足够则新建一个块</span></span><br><span class="line">                        block* tmp = <span class="keyword">new</span> <span class="built_in">block</span>(id, ptr-&gt;R, ptr-&gt;R + arg);</span><br><span class="line">                        tmp -&gt; next = ptr -&gt; next;</span><br><span class="line">                        ptr -&gt; next = tmp;</span><br><span class="line"></span><br><span class="line">                        cout &lt;&lt; <span class="string">"yes"</span> &lt;&lt; endl;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                } <span class="keyword">else</span> {  <span class="comment">// 在最后追加块</span></span><br><span class="line">                    <span class="keyword">if</span> (ptr-&gt;R + arg &lt;= n*n) {  <span class="comment">// 否则尝试在最后添加块</span></span><br><span class="line">                        block* tmp = <span class="keyword">new</span> <span class="built_in">block</span>(id, ptr-&gt;R, ptr-&gt;R + arg);</span><br><span class="line">                        ptr -&gt; next = tmp;</span><br><span class="line"></span><br><span class="line">                        cout &lt;&lt; <span class="string">"yes"</span> &lt;&lt; endl;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (!flag) {</span><br><span class="line">                record.<span class="built_in">erase</span>(id);  <span class="comment">// 一个也不要了</span></span><br><span class="line">                cout &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="string">"out"</span>) {  <span class="comment">// 删除块</span></span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;  <span class="comment">// 标记是否找到目标块</span></span><br><span class="line">            <span class="keyword">for</span> (block* ptr = head; ptr-&gt;next; ptr = ptr-&gt;next) {</span><br><span class="line">                <span class="keyword">if</span> (ptr-&gt;next-&gt;id == id) {</span><br><span class="line">                    block* tmp = ptr-&gt;next;</span><br><span class="line">                    ptr -&gt; next = ptr -&gt; next -&gt; next;</span><br><span class="line">                    <span class="keyword">delete</span> tmp;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    record.<span class="built_in">erase</span>(id);  <span class="comment">// 删除标记</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag) {</span><br><span class="line">                cout &lt;&lt; <span class="string">"yes"</span> &lt;&lt; endl;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                cout &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="Maya-历法">Maya 历法</h3><p>  字符串题怎么能不用 Python 呢？先根据 Haab 历法的日期算出从世界的开始到现在的总天数，然后再转为 Tzolkin 历法的日期输出：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">Haab = [  <span class="comment"># Haab 历法的月份</span></span><br><span class="line">    <span class="string">'pop'</span>, <span class="string">'no'</span>, <span class="string">'zip'</span>, <span class="string">'zotz'</span>, <span class="string">'tzec'</span>, <span class="string">'xul'</span>, <span class="string">'yoxkin'</span>, <span class="string">'mol'</span>, <span class="string">'chen'</span>, <span class="string">'yax'</span>,</span><br><span class="line">    <span class="string">'zac'</span>, <span class="string">'ceh'</span>, <span class="string">'mac'</span>, <span class="string">'kankin'</span>, <span class="string">'muan'</span>, <span class="string">'pax'</span>, <span class="string">'koyab'</span>, <span class="string">'cumhu'</span>, <span class="string">'uayet'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">Tzolkin = [  <span class="comment"># Tzolkin 历法的名字</span></span><br><span class="line">    <span class="string">'imix'</span>, <span class="string">'ik'</span>, <span class="string">'akbal'</span>, <span class="string">'kan'</span>, <span class="string">'chicchan'</span>, <span class="string">'cimi'</span>, <span class="string">'manik'</span>, <span class="string">'lamat'</span>, <span class="string">'muluk'</span>, <span class="string">'ok'</span>,</span><br><span class="line">    <span class="string">'chuen'</span>, <span class="string">'eb'</span>, <span class="string">'ben'</span>, <span class="string">'ix'</span>, <span class="string">'mem'</span>, <span class="string">'cib'</span>, <span class="string">'caban'</span>, <span class="string">'eznab'</span>, <span class="string">'canac'</span>, <span class="string">'ahau'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    day, month, year = re.search(<span class="string">r'(\d+)\.([a-z]+) (\d+)'</span>, <span class="built_in">input</span>()).groups()</span><br><span class="line">    total = <span class="built_in">int</span>(year)*<span class="number">365</span> + <span class="number">20</span>*Haab.index(month) + <span class="built_in">int</span>(day)</span><br><span class="line"></span><br><span class="line">    day, month, year = total % <span class="number">13</span> + <span class="number">1</span>, Tzolkin[total % <span class="number">20</span>], total // <span class="number">260</span></span><br><span class="line">    <span class="built_in">print</span>(day, month, year)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="数码管">数码管</h3><p><img src="%E6%95%B0%E7%A0%81%E7%AE%A1.png" alt=""></p><p>  使用一个<strong>七位二进制数</strong>表示字符在数码管中的形状（对应位点亮为 1，否则为 0），然后若两个数字仅通过加减笔画的方式转换，设它们的段码分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，则有：</p> A\text{ | }B = \max(A, B)\qquadA\text{ &amp; }B = \min(A, B) <p>  依此性质编写代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按七段显示器模式编码</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> digits[] = {</span><br><span class="line">    <span class="number">0b1110111</span>, <span class="number">0b0100100</span>, <span class="number">0b1011101</span>, <span class="number">0b1101101</span>, <span class="number">0b0101110</span>,</span><br><span class="line">    <span class="number">0b1101011</span>, <span class="number">0b1111011</span>, <span class="number">0b0100101</span>, <span class="number">0b1111111</span>, <span class="number">0b1101111</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">        <span class="keyword">int</span> now; cin &gt;&gt; now;</span><br><span class="line">        <span class="keyword">if</span> (!~now) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) {</span><br><span class="line">            <span class="keyword">int</span> tmp; cin &gt;&gt; tmp;</span><br><span class="line">            <span class="keyword">if</span> ((digits[now] &amp; digits[tmp]) != <span class="built_in">min</span>(digits[now], digits[tmp]) ||</span><br><span class="line">                    (digits[now] | digits[tmp]) != <span class="built_in">max</span>(digits[now], digits[tmp])) {</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            now = tmp;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; (flag ? <span class="string">"YES"</span> : <span class="string">"NO"</span>) &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="多项式加法">多项式加法</h3><p>  用 map 处理次数和系数的对应关系，注意输出的时候排除掉相加后正好为 0 的项即可：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> x, c;</span><br><span class="line">    map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, greater&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) {  <span class="comment">// 有两组数据</span></span><br><span class="line">        cin &gt;&gt; x &gt;&gt; c;</span><br><span class="line">        <span class="keyword">while</span> (x | c) {  <span class="comment">// 不全为 0 则继续读</span></span><br><span class="line">            ans[x] += c;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; c;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : ans) {</span><br><span class="line">        <span class="keyword">if</span> (item.second) {  <span class="comment">// 如果相加后为 0 则不输出</span></span><br><span class="line">            cout &lt;&lt; item.first &lt;&lt; <span class="string">" "</span> &lt;&lt; item.second &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="数字统计">数字统计</h3><p>  直接用 map 计数</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string str; cin &gt;&gt; str;</span><br><span class="line">    map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; cnt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">        cnt[ch]++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : cnt) {</span><br><span class="line">        cout &lt;&lt; item.first &lt;&lt; <span class="string">":"</span> &lt;&lt; item.second &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="A-除以-B">A 除以 B</h3><p>  不会吧不会还有人不知道 Python 的 int 没有上限吧（</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="built_in">print</span>(a // b, a % b)</span><br></pre></td></tr></tbody></table></figure><h3 id="公交系统">公交系统</h3><p>  假设原来车上有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 个人，在某站有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 个人上车，车厢容量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>；不难推出：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>∈</mo><mo stretchy="false">[</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>w</mi><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x \in [\max(0, -p), min(w, w-p)] </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mop">max</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)]</span></span></span></span></span></p><p>  按此规则，将上车的人数序列从左到右依次累加，每次将加和 sum 作为上面的 p 值更新上下限：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T3-15</span></span><br><span class="line">    <span class="keyword">int</span> n, w; cin &gt;&gt; n &gt;&gt; w;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">arr</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; arr[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, L = <span class="number">0</span>, R = w;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x : arr) {</span><br><span class="line">        sum += x;</span><br><span class="line">        L = <span class="built_in">max</span>(L, <span class="built_in">max</span>(<span class="number">0</span>, -sum));</span><br><span class="line">        R = <span class="built_in">min</span>(R, <span class="built_in">min</span>(w, w-sum));</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; <span class="built_in">max</span>(R-L+<span class="number">1</span>, <span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="成绩大排队">成绩大排队</h3><p>  结构体排序……</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> {</span></span><br><span class="line">    string name, id;</span><br><span class="line">    <span class="keyword">int</span> mark;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T3-16</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;Student&gt; <span class="title">arr</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; arr[i].name &gt;&gt; arr[i].id &gt;&gt; arr[i].mark;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>(), [] (<span class="keyword">const</span> Student&amp; a, <span class="keyword">const</span> Student&amp; b) {</span><br><span class="line">        <span class="keyword">return</span> a.mark &gt; b.mark;</span><br><span class="line">    });</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>].name &lt;&lt; <span class="string">" "</span> &lt;&lt; arr[<span class="number">0</span>].id &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; arr[n<span class="number">-1</span>].name &lt;&lt; <span class="string">" "</span> &lt;&lt; arr[n<span class="number">-1</span>].id &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="字符串数字置换">字符串数字置换</h3><p>  用 stringstream 做缓冲，构造出目标字符串：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string num[] = {<span class="string">"(Zero)"</span>, <span class="string">"(One)"</span>, <span class="string">"(Two)"</span>, <span class="string">"(Three)"</span>, <span class="string">"(Four)"</span>, <span class="string">"(Five)"</span>, <span class="string">"(Six)"</span>, <span class="string">"(Seven)"</span>, <span class="string">"(Eight)"</span>, <span class="string">"(Nine)"</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    string str; <span class="built_in">getline</span>(cin, str);</span><br><span class="line">    stringstream out;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">repl</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'0'</span> &lt;= ch &amp;&amp; ch &lt;= <span class="string">'9'</span>) {</span><br><span class="line">            out &lt;&lt; num[ch - <span class="string">'0'</span>];</span><br><span class="line">            repl[ch - <span class="string">'0'</span>]++;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            out &lt;&lt; ch;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; out.<span class="built_in">str</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) {</span><br><span class="line">        cout &lt;&lt; repl[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="写出来吧">写出来吧</h3><p>  Python 直接怼</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pinyin = [<span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>, <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span>]</span><br><span class="line"></span><br><span class="line">total = <span class="built_in">sum</span>(<span class="built_in">int</span>(ch) <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">' '</span>.join(pinyin[<span class="built_in">int</span>(i)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>(total)))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="到底买不买">到底买不买</h3><p>  分别统计商家提供的和小红需要的珠子数量，依次比对即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T3-19</span></span><br><span class="line">    string str[<span class="number">2</span>];</span><br><span class="line">    map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; material, target;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; str[<span class="number">0</span>];  <span class="comment">// 统计摊主提供的珠子数量</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str[<span class="number">0</span>]) {</span><br><span class="line">        material[ch] += <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    cin &gt;&gt; str[<span class="number">1</span>];  <span class="comment">// 统计需要的珠子数量</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch : str[<span class="number">1</span>]) {</span><br><span class="line">        target[ch] += <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> diff = <span class="number">0</span>, flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : target) {</span><br><span class="line">        <span class="keyword">if</span> (item.second &gt; material[item.first]) {</span><br><span class="line">            diff += item.second - material[item.first];</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (flag) {</span><br><span class="line">        cout &lt;&lt; <span class="string">"Yes "</span> &lt;&lt; (str[<span class="number">0</span>].<span class="built_in">size</span>() - str[<span class="number">1</span>].<span class="built_in">size</span>()) &lt;&lt; endl;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        cout &lt;&lt; <span class="string">"No "</span> &lt;&lt; diff;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="挖掘机技术哪家强">挖掘机技术哪家强</h3><p>  依题意使用 map 实现</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T3-20</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; count;</span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        <span class="keyword">int</span> id, mark;</span><br><span class="line">        cin &gt;&gt; id &gt;&gt; mark;</span><br><span class="line">        count[id] += mark;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> winner, score = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : count) {</span><br><span class="line">        <span class="keyword">if</span> (item.second &gt; score) {</span><br><span class="line">            winner = item.first;</span><br><span class="line">            score = item.second;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; winner &lt;&lt; <span class="string">" "</span> &lt;&lt; score;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="Web-导航">Web 导航</h3><p>  模拟题，直接按题意写</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T3-21</span></span><br><span class="line">    stack&lt;string&gt; front, back;</span><br><span class="line">    string url = <span class="string">"http://www.game.org/"</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {  <span class="comment">// 死循环起手</span></span><br><span class="line">        string opt; cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="string">"VISIT"</span>) {</span><br><span class="line">            back.<span class="built_in">push</span>(url);</span><br><span class="line">            stack&lt;string&gt;().<span class="built_in">swap</span>(front);  <span class="comment">// 清空前向堆栈</span></span><br><span class="line">            cin &gt;&gt; url;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="string">"BACK"</span>) {</span><br><span class="line">            <span class="keyword">if</span> (back.<span class="built_in">empty</span>()) {</span><br><span class="line">                cout &lt;&lt; <span class="string">"Ignored"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            front.<span class="built_in">push</span>(url);</span><br><span class="line">            url = back.<span class="built_in">top</span>(), back.<span class="built_in">pop</span>();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="string">"FORWARD"</span>) {</span><br><span class="line">            <span class="keyword">if</span> (front.<span class="built_in">empty</span>()) {</span><br><span class="line">                cout &lt;&lt; <span class="string">"Ignored"</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            back.<span class="built_in">push</span>(url);</span><br><span class="line">            url = front.<span class="built_in">top</span>(), front.<span class="built_in">pop</span>();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="string">"QUIT"</span>) {  <span class="comment">// 设置退出条件</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; url &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="训练作业四">训练作业四</h2><h3 id="在霍格沃茨找零钱">在霍格沃茨找零钱</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">gp, sp, kp, ga, sa, ka = <span class="built_in">map</span>(<span class="built_in">int</span>, re.findall(<span class="string">r'(\d+)\.(\d+)\.(\d+) (\d+)\.(\d+)\.(\d+)'</span>, <span class="built_in">input</span>())[<span class="number">0</span>])</span><br><span class="line">diff = (<span class="number">17</span>*<span class="number">29</span>*ga + <span class="number">29</span>*sa + ka) - (<span class="number">17</span>*<span class="number">29</span>*gp + <span class="number">29</span>*sp + kp)</span><br><span class="line"><span class="keyword">if</span> diff &lt; <span class="number">0</span>:</span><br><span class="line">    pre = <span class="string">'-'</span></span><br><span class="line">    diff = -diff</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    pre = <span class="string">''</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f'<span class="subst">{pre}</span><span class="subst">{diff // (<span class="number">17</span>*<span class="number">29</span>)}</span>.<span class="subst">{diff % (<span class="number">17</span>*<span class="number">29</span>) // <span class="number">29</span>}</span>.<span class="subst">{diff % <span class="number">29</span>}</span>'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="最简单的计算机">最简单的计算机</h3><p>  先建立好 5 个变量 M1、M2、R1、R2、R3，然后依题意模拟：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-2</span></span><br><span class="line">    <span class="keyword">int</span> M1, M2, R1, R2, R3;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; M1 &gt;&gt; M2) {</span><br><span class="line">        R1 = R2 = R3 = <span class="number">0</span>;</span><br><span class="line">        string cmd; cin &gt;&gt; cmd;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> ch : cmd) {</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (ch) {</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'A'</span>: {</span><br><span class="line">                    R1 = M1;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'B'</span>: {</span><br><span class="line">                    R2 = M2;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'C'</span>: {</span><br><span class="line">                    M1 = R3;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'D'</span>: {</span><br><span class="line">                    M2 = R3;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'E'</span>: {</span><br><span class="line">                    R3 = R1 + R2;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'F'</span>: {</span><br><span class="line">                    R3 = R1 - R2;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>, M1, M2);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="相同生日">相同生日</h3><p>  很适合用 map 的一道题，将月和日组合进一个 <code>int</code> 中即可自动按日期顺序排序：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-3</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="keyword">int</span>, vector&lt;string&gt;&gt; record;</span><br><span class="line">    <span class="keyword">while</span> (n--) {</span><br><span class="line">        string id;</span><br><span class="line">        <span class="keyword">int</span> month, date;</span><br><span class="line">        cin &gt;&gt; id &gt;&gt; month &gt;&gt; date;</span><br><span class="line">        record[(month &lt;&lt; <span class="number">8</span>) | date].<span class="built_in">push_back</span>(id);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> item : record) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d "</span>, item.first &gt;&gt; <span class="number">8</span>, item.first &amp; <span class="number">0xff</span>);</span><br><span class="line">        <span class="keyword">for</span> (string str : item.second) {</span><br><span class="line">            cout &lt;&lt; str &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="日历问题">日历问题</h3><p>  为什么不用神奇的 Python 呢？（狗头）</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">start = datetime(<span class="number">2000</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">delta = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">while</span> delta != -<span class="number">1</span>:  <span class="comment">#: T4-4</span></span><br><span class="line">    future = start + timedelta(days=delta)</span><br><span class="line">    <span class="built_in">print</span>(future.date(), calendar.day_name[future.weekday()])</span><br><span class="line">    delta = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="小希的数表">小希的数表</h3><p>  暂时没想到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的解法</p><h3 id="数塔">数塔</h3><p>  经典动态规划问题，由倒数第二层向上计算，将下层的最大值累加到自身：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-6</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; arr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">line</span><span class="params">(i)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) {</span><br><span class="line">            cin &gt;&gt; line[j];</span><br><span class="line">        }</span><br><span class="line">        arr.<span class="built_in">push_back</span>(line);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">from</span>(n, vector&lt;<span class="keyword">int</span>&gt;(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) {</span><br><span class="line">            <span class="keyword">if</span> (arr[i+<span class="number">1</span>][j] &lt; arr[i+<span class="number">1</span>][j+<span class="number">1</span>]) {  <span class="comment">// 记录来源</span></span><br><span class="line">                from[i][j] = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            arr[i][j] += <span class="built_in">max</span>(arr[i+<span class="number">1</span>][j], arr[i+<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> next = index + from[i][index];</span><br><span class="line">        cout &lt;&lt; (arr[i][index] - arr[i+<span class="number">1</span>][next]) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        index = next;</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; arr[n<span class="number">-1</span>][index] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="斯诺克台球-——-🈚️">斯诺克台球 —— 🈚️</h3><h3 id="最少钱币数">最少钱币数</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1e9</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-8</span></span><br><span class="line">    <span class="keyword">int</span> money;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; money, money) {</span><br><span class="line">        <span class="keyword">int</span> K; cin &gt;&gt; K;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">val</span><span class="params">(K)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++) {</span><br><span class="line">            cin &gt;&gt; val[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">sort</span>(val.<span class="built_in">begin</span>(), val.<span class="built_in">end</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * F[i] 表示凑成 i 元所需要的最少钱币数</span></span><br><span class="line"><span class="comment">         * F[0] = 0;</span></span><br><span class="line"><span class="comment">         * F[i] = min({{ F[i-val[j]] + 1 }})</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">F</span><span class="params">(money + <span class="number">1</span>, inf)</span></span>;</span><br><span class="line">        F[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= money; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x : val) {</span><br><span class="line">                <span class="keyword">if</span> (i - x &lt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                F[i] = <span class="built_in">min</span>(F[i], F[i - x] + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (F[money] &gt;= inf) {</span><br><span class="line">            cout &lt;&lt; <span class="string">"Impossible"</span> &lt;&lt; endl;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cout &lt;&lt; F[money] &lt;&lt; endl;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="相等的多项式">相等的多项式</h3><p>  把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x = -1, 0, 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span></span></span></span> 代进去，如果全部成立则判断小明计算正确（骗，都可以骗）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pi</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">const</span> vector&lt;<span class="keyword">int</span>&gt;&amp; arr)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n : arr) {</span><br><span class="line">        ans *= (x + n);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sigma</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">const</span> vector&lt;<span class="keyword">int</span>&gt;&amp; arr)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n : arr) {</span><br><span class="line">        ans = ans * x + n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-9</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n, n) {</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">A</span><span class="params">(n)</span>, <span class="title">B</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; A[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; B[i];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">-1</span>; x &lt;= <span class="number">1</span>; x++) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">pi</span>(x, A) != <span class="built_in">sigma</span>(x, B)) {</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; (flag ? <span class="string">"Y"</span> : <span class="string">"N"</span>) &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="选美比赛">选美比赛</h3><h3 id="蛇行矩阵">蛇行矩阵</h3><p>  将输出矩阵顺时针旋转 45°，不难发现规律</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">102</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-11</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> arr[maxn][maxn] = {<span class="number">0</span>}, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) {</span><br><span class="line">            arr[i][j] = ++cnt;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; i + j &lt; n; j++) {</span><br><span class="line">            cout &lt;&lt; arr[i+j][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="疫情期间">疫情期间</h3><p>  动态规划，<code>F[i][j]</code> 表示第 <code>i+1</code> 天进行了活动 <code>j</code>，前 <code>i+1</code> 天的最少休息天数</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-12</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">arr</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        cin &gt;&gt; arr[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* F[i][j] 表示第 i+1 天进行了活动 j，前 i+1 天的最少休息天数</span></span><br><span class="line"><span class="comment">     * 00-休息 | 01-编程 | 10-健身 | 11-皆可</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">F</span>(n + <span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">3</span>, n));</span><br><span class="line">    <span class="comment">// Init</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : {<span class="number">1</span>, <span class="number">2</span>}) {</span><br><span class="line">        (arr[<span class="number">0</span>] &amp; i) &amp;&amp; (F[<span class="number">0</span>][i] = <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    F[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j : {<span class="number">1</span>, <span class="number">2</span>}) {  <span class="comment">// 编程 | 健身</span></span><br><span class="line">            <span class="keyword">if</span> (arr[i] &amp; j) {</span><br><span class="line">                F[i][j] = <span class="built_in">min</span>(F[i - <span class="number">1</span>][<span class="number">0</span>], F[i - <span class="number">1</span>][j ^ <span class="number">3</span>]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 休息 (min_element 返回迭代器)</span></span><br><span class="line">        F[i][<span class="number">0</span>] = *<span class="built_in">min_element</span>(F[i - <span class="number">1</span>].<span class="built_in">begin</span>(), F[i - <span class="number">1</span>].<span class="built_in">end</span>()) + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; *<span class="built_in">min_element</span>(F[n - <span class="number">1</span>].<span class="built_in">begin</span>(), F[n - <span class="number">1</span>].<span class="built_in">end</span>()) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="7，还是-7">7，还是 7</h3><h3 id="组个最小数">组个最小数</h3><h3 id="字频统计">字频统计</h3><h3 id="逆序数">逆序数</h3><h3 id="最小钱币数">最小钱币数</h3><h3 id="身份证校验">身份证校验</h3><h3 id="最长连续递增子序列">最长连续递增子序列</h3><h3 id="恺撒-Caesar-密码">恺撒 Caesar 密码</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T4-20</span></span><br><span class="line">    string str, _;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; _, _ != <span class="string">"ENDOFINPUT"</span>) {</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="built_in">getline</span>(cin, str);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            <span class="keyword">if</span> (str[i] &lt; <span class="string">'A'</span> || str[i] &gt; <span class="string">'Z'</span>) {</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">int</span> ord = str[i] - <span class="string">'A'</span>;</span><br><span class="line">            ord = (ord + <span class="number">21</span>) % <span class="number">26</span>;</span><br><span class="line">            str[i] = <span class="string">'A'</span> + ord;</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; _;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="回文串">回文串</h3><h2 id="训练作业五">训练作业五</h2><h3 id="Dijkstra？">Dijkstra？</h3><p>  算法以传统 dijkstra 为基础，但在优先队列中以 <code>pair&lt;int, string&gt;</code> 代替原本的 <code>int</code> 形式存储当前距离最短的未探索节点。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100002</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> {</span></span><br><span class="line">    <span class="keyword">int</span> to, val;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">vector&lt;vector&lt;Edge&gt;&gt; <span class="built_in">head</span>(maxn);</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">from</span><span class="params">(maxn)</span></span>;  <span class="comment">// 记录每个点的「来源」</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">        <span class="keyword">int</span> dst;</span><br><span class="line">        pair&lt;<span class="keyword">int</span>, string&gt; val;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Node&amp; other) <span class="keyword">const</span> {</span><br><span class="line">            <span class="keyword">return</span> val &lt; other.val;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    priority_queue&lt;Node&gt; task;</span><br><span class="line">    vector&lt;pair&lt;<span class="keyword">int</span>, string&gt;&gt; <span class="built_in">dis</span>(maxn, {<span class="number">0x7fffffff</span>, <span class="string">""</span>});</span><br><span class="line">    task.<span class="built_in">push</span>({<span class="number">1</span>, {<span class="number">0</span>, <span class="string">"1"</span>}}); dis[<span class="number">1</span>] = {<span class="number">0</span>, <span class="string">"1"</span>};</span><br><span class="line">    <span class="keyword">while</span> (!task.<span class="built_in">empty</span>()) {</span><br><span class="line">        Node top = task.<span class="built_in">top</span>(); task.<span class="built_in">pop</span>();  <span class="comment">// 取出距离最短的点</span></span><br><span class="line">        <span class="keyword">if</span> (top.val &gt; dis[top.dst]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (Edge edg : head[top.dst]) {</span><br><span class="line">            pair&lt;<span class="keyword">int</span>, string&gt; nxt = {top.val.first + edg.val, top.val.second + (<span class="keyword">char</span>)(edg.to + <span class="string">'0'</span>)};</span><br><span class="line">            <span class="keyword">if</span> (nxt &lt; dis[edg.to]) {</span><br><span class="line">                from[edg.to] = top.dst;  <span class="comment">// 更新来源</span></span><br><span class="line">                dis[edg.to] = nxt;</span><br><span class="line">                task.<span class="built_in">push</span>({edg.to, nxt});</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> index)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (from[index] == <span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, index);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">output</span>(from[index]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, index);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-1</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line">        <span class="keyword">int</span> src, dst, val;</span><br><span class="line">        cin &gt;&gt; src &gt;&gt; dst &gt;&gt; val;</span><br><span class="line">        head[src].<span class="built_in">push_back</span>({dst, val});  <span class="comment">// 无向图需要建双向边</span></span><br><span class="line">        head[dst].<span class="built_in">push_back</span>({src, val});</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">dijkstra</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果走不到则节点 n 的「来源」为 0</span></span><br><span class="line">    from[n] ? <span class="built_in">output</span>(n) : <span class="built_in">printf</span>(<span class="string">"-1"</span>);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="0-1-串">0-1 串</h3><p>  使用前缀和数组，能将求某个区间中 0 或 1 的数量的操作优化到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，接下来暴力遍历所有区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[L, R]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">]</span></span></span></span> 求解即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="function">git</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-2</span></span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">sum</span><span class="params">(n+<span class="number">1</span>)</span></span>;  <span class="comment">// 前缀和数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        cin &gt;&gt; sum[i];</span><br><span class="line">        sum[i] += sum[i<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> max_z = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n; j++) {</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 「翻转」选定区间后 1 的总数</span></span><br><span class="line"><span class="comment">             * = 原来 1 的总数 + 翻转区间中 0 的数量 - 翻转区间中 1 的数量</span></span><br><span class="line"><span class="comment">             * = 总和 + (区间长 - 区间求和) - 区间求和</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">             max_z = <span class="built_in">max</span>(max_z, sum[n] + (j-i+<span class="number">1</span>) - <span class="number">2</span>*(sum[j]-sum[i<span class="number">-1</span>]));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; max_z &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="良心树">良心树</h3><p>  简单观察可以发现，删除一个节点时，并不会改变其父节点和所有儿子的「可删除」状态（即可删除节点的数量不会因为删除一个节点而增加或减少），那么先按照输入数据建树，建树后通过一次深度优先遍历找出所有待删除的节点，排序后输出即可 AC</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> id, flag;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; child;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Node&amp; other) <span class="keyword">const</span> {</span><br><span class="line">        <span class="keyword">return</span> id &gt; other.id;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">vector&lt;Node&gt; arr;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> index)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (!arr[index].flag) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> ptr : arr[index].child) {</span><br><span class="line">        <span class="keyword">if</span> (!arr[ptr].flag) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-3</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    arr = vector&lt;Node&gt;(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {  <span class="comment">// 读入 &amp; 建树</span></span><br><span class="line">        <span class="keyword">int</span> p, c; cin &gt;&gt; p &gt;&gt; c;</span><br><span class="line">        arr[i].id = i, arr[i].flag = c;</span><br><span class="line">        <span class="keyword">if</span> (~p) arr[p].child.<span class="built_in">push_back</span>(i);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    priority_queue&lt;Node&gt; task;</span><br><span class="line">    <span class="comment">// 遍历整棵树判断节点是否可以删除</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">judge</span>(i)) task.<span class="built_in">push</span>(arr[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (task.<span class="built_in">empty</span>()) {</span><br><span class="line">        cout &lt;&lt; <span class="string">"-1"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (!task.<span class="built_in">empty</span>()) {</span><br><span class="line">        cout &lt;&lt; task.<span class="built_in">top</span>().id &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        task.<span class="built_in">pop</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="最昂贵的旅行">最昂贵的旅行</h3><p>  从「<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个城市，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 条边，没有环」可以推出该国所有城市间道路为树形结构，将编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的城市作为根，执行一次 dfs 找出最「远」的城市即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> {</span></span><br><span class="line">    <span class="keyword">int</span> to, val;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">vector&lt;vector&lt;Edge&gt;&gt; head;</span><br><span class="line">vector&lt;<span class="keyword">bool</span>&gt; vst;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> src, <span class="keyword">int</span> cost=<span class="number">0</span>)</span> </span>{</span><br><span class="line">    vst[src] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> max_len = cost;</span><br><span class="line">    <span class="keyword">for</span> (Edge nxt : head[src]) {</span><br><span class="line">        <span class="keyword">if</span> (!vst[nxt.to]) {</span><br><span class="line">            max_len = <span class="built_in">max</span>(max_len, <span class="built_in">dfs</span>(nxt.to, cost + nxt.val));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> max_len;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-4</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    head = vector&lt;vector&lt;Edge&gt;&gt;(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> src, dst, val;</span><br><span class="line">        cin &gt;&gt; src &gt;&gt; dst &gt;&gt; val;</span><br><span class="line">        head[src].<span class="built_in">push_back</span>({dst, val});</span><br><span class="line">        head[dst].<span class="built_in">push_back</span>({src, val});</span><br><span class="line">    }</span><br><span class="line">    vst = vector&lt;<span class="keyword">bool</span>&gt;(n);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">dfs</span>(<span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="猫与餐厅的故事">猫与餐厅的故事</h3><p>  对于非叶子节点，统计其路径上连续有猫的节点数量，如果大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 则返回 0；对于叶子节点，直接返回 1</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100002</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">cat</span><span class="params">(maxn)</span></span>;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">head</span>(maxn);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> cnt, <span class="keyword">int</span> par)</span> </span>{  <span class="comment">// cnt: 之前 连续的有猫的节点数</span></span><br><span class="line">    <span class="keyword">if</span> (cnt + cat[now] &gt; m) <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">// 如果连续有猫的数量大于 m 就不走了</span></span><br><span class="line">    <span class="keyword">if</span> (head[now].<span class="built_in">size</span>() &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> nxt : head[now]) {</span><br><span class="line">        <span class="keyword">if</span> (nxt != par) {</span><br><span class="line">            sum += <span class="built_in">dfs</span>(nxt, cat[now] ? cnt + <span class="number">1</span> : <span class="number">0</span>, now);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-5</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        cin &gt;&gt; cat[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> src, dst;</span><br><span class="line">        cin &gt;&gt; src &gt;&gt; dst;</span><br><span class="line">        head[src].<span class="built_in">push_back</span>(dst);</span><br><span class="line">        head[dst].<span class="built_in">push_back</span>(src);</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="旅行的期望值">旅行的期望值</h3><p>  建树，递归。对于某个节点，其期望值为「其所有孩子节点的期望值取平均 + 1」，对于叶子节点，期望值为 0</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100002</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">head</span>(maxn);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> src, <span class="keyword">int</span> par)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head[src].<span class="built_in">size</span>() &lt;= <span class="number">1</span> &amp;&amp; src != <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0</span>;  <span class="comment">// 孩子节点的期望之和</span></span><br><span class="line">    <span class="keyword">int</span> child = <span class="number">0</span>;  <span class="comment">// 孩子节点个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> nxt : head[src]) {</span><br><span class="line">        <span class="keyword">if</span> (nxt == par) <span class="keyword">continue</span>;</span><br><span class="line">        (sum += <span class="built_in">dfs</span>(nxt, src));</span><br><span class="line">        child += <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum / child + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-6</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> src, dst; cin &gt;&gt; src &gt;&gt; dst;</span><br><span class="line">        head[src].<span class="built_in">push_back</span>(dst);</span><br><span class="line">        head[dst].<span class="built_in">push_back</span>(src);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.7lf"</span>, <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="有效的-BFS">有效的 BFS</h3><p>  模拟 bfs 的过程，每次都试图选择输入中给出的节点，如果存在某时刻无法选择，则说明输入不是一个有效的 bfs 序（说白了就是直接模拟）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100002</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">vector&lt;set&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">head</span>(maxn);</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">parent</span><span class="params">(maxn)</span></span>;  <span class="comment">// 标记父节点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> par)</span> </span>{</span><br><span class="line">    parent[now] = par;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> nxt : head[now]) {</span><br><span class="line">        <span class="keyword">if</span> (nxt == par) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(nxt, now);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span> </span>{  <span class="comment">// 直接模拟 bfs</span></span><br><span class="line">    queue&lt;<span class="keyword">int</span>&gt; task;</span><br><span class="line">    task.<span class="built_in">push</span>(<span class="built_in">read</span>());</span><br><span class="line">    <span class="keyword">while</span> (!task.<span class="built_in">empty</span>()) {</span><br><span class="line">        <span class="keyword">int</span> now = task.<span class="built_in">front</span>(); task.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> nxt : head[now]) {</span><br><span class="line">            <span class="keyword">if</span> (nxt == parent[now]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> except = <span class="built_in">read</span>();</span><br><span class="line">            <span class="keyword">if</span> (head[now].<span class="built_in">find</span>(except) == head[now].<span class="built_in">end</span>()) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            task.<span class="built_in">push</span>(except);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-7</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> src, dst;</span><br><span class="line">        cin &gt;&gt; src &gt;&gt; dst;</span><br><span class="line">        head[src].<span class="built_in">insert</span>(dst);</span><br><span class="line">        head[dst].<span class="built_in">insert</span>(src);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="built_in">bfs</span>() ? <span class="string">"Yes"</span> : <span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="数组跳远">数组跳远</h3><p>  从后向前倒推</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-8</span></span><br><span class="line">    <span class="keyword">int</span> T; cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) {</span><br><span class="line">        <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">arr</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            cin &gt;&gt; arr[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">sum</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">            sum[i] = arr[i];</span><br><span class="line">            <span class="keyword">if</span> (i + arr[i] &lt; n) {</span><br><span class="line">                sum[i] += sum[i + arr[i]];</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, sum[i]);</span><br><span class="line">        }</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="踩点上课">踩点上课</h3><p>  将「不使用折跃门而能互相到达的块」称为一个连通区域，考虑以下两种情况：</p><ul><li>起点和终点在<strong>不同</strong>连通块内</li></ul><p>  1. 对起点和终点所在的连通块分别做 BFS，找出「路径长 + 折跃代价」最小的折跃门</p><p>  2. 将上述两次 BFS 的结果相加即为答案，如果没有这样的折跃门，输出 -1</p><ul><li>起点和终点在<strong>同一</strong>连通块内</li></ul><p>  1. 与在不同连通块时相同</p><p>  2. 计算从起点直接走到终点的代价（即不使用折跃门）</p><p>  3. 在第 1 步和第 2 步中选择最小的代价输出</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1LL &lt;&lt; 60)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ways[<span class="number">4</span>][<span class="number">2</span>] = {{<span class="number">0</span>, <span class="number">1</span>}, {<span class="number">0</span>, <span class="number">-1</span>}, {<span class="number">1</span>, <span class="number">0</span>}, {<span class="number">-1</span>, <span class="number">0</span>}};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, w;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; gmap;</span><br><span class="line">vector&lt;vector&lt;LL&gt;&gt; dst;</span><br><span class="line">LL direct = inf;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;w);</span><br><span class="line">    gmap = vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; (n + <span class="number">2</span>, vector&lt;<span class="keyword">int</span>&gt;(m + <span class="number">2</span>, <span class="number">-1</span>));</span><br><span class="line">    dst = vector&lt;vector&lt;LL&gt;&gt;(n + <span class="number">2</span>, vector&lt;LL&gt;(m + <span class="number">2</span>, inf));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;gmap[i][j]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x0, <span class="keyword">int</span> y0)</span> </span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">pos</span> {</span></span><br><span class="line">        <span class="keyword">int</span> x, y;;</span><br><span class="line">    };</span><br><span class="line">    LL min_cost = inf;</span><br><span class="line">    queue&lt;pos&gt; task;</span><br><span class="line">    task.<span class="built_in">push</span>({x0, y0}); dst[x0][y0] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!task.<span class="built_in">empty</span>()) {</span><br><span class="line">        <span class="keyword">auto</span> now = task.<span class="built_in">front</span>(); task.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> x = now.x, y = now.y;</span><br><span class="line">        <span class="keyword">if</span> (gmap[x][y] &amp;&amp; gmap[x][y] + dst[x][y] &lt; min_cost) {</span><br><span class="line">            min_cost = gmap[x][y] + dst[x][y];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) {</span><br><span class="line">            <span class="keyword">int</span> nx = x + ways[i][<span class="number">0</span>], ny = y + ways[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (~gmap[nx][ny] &amp;&amp;  dst[x][y] + w &lt; dst[nx][ny]) {</span><br><span class="line">                dst[nx][ny] = dst[x][y] + w;</span><br><span class="line">                task.<span class="built_in">push</span>({nx, ny});</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> min_cost;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-9</span></span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    LL path = <span class="number">0</span>;</span><br><span class="line">    path += <span class="built_in">bfs</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    direct = dst[n][m];</span><br><span class="line">    path += <span class="built_in">bfs</span>(n, m);</span><br><span class="line">    LL ans = <span class="built_in">min</span>(path, direct);</span><br><span class="line">    <span class="keyword">if</span> (ans &gt;= inf) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="树的优化">树的优化</h3><p>  参考「最大子段和」算法，进行第一次 dfs，统计从根节点开始的每一条路径上的最大子段和，找出所有「导致瑕疵」的节点；再进行第二次 dfs，统计数中不包含「导致瑕疵」节点的最大部分，即为删除后剩下节点的数量；最后与 n 作减法输出即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100002</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> {</span></span><br><span class="line">    <span class="keyword">int</span> dst, val;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">vector&lt;vector&lt;Edge&gt;&gt; <span class="built_in">head</span>(maxn);</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">arr</span><span class="params">(maxn)</span></span>;  <span class="comment">// 顶点上的数字</span></span><br><span class="line"><span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">flag</span><span class="params">(maxn)</span></span>;  <span class="comment">// 标记该节点是否有瑕疵</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_all_bad</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> par, <span class="keyword">int</span> sum)</span> </span>{  <span class="comment">// 找出所有有瑕疵的节点</span></span><br><span class="line">    flag[now] = sum &gt; arr[now];</span><br><span class="line">    <span class="keyword">for</span> (Edge nxt : head[now]) {</span><br><span class="line">        <span class="keyword">if</span> (nxt.dst == par) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">find_all_bad</span>(nxt.dst, now, <span class="built_in">max</span>(sum + nxt.val, nxt.val));  <span class="comment">// 参考「最大子段和」算法</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count_not_bad</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> par)</span> </span>{  <span class="comment">// 统计剩余没有瑕疵的节点</span></span><br><span class="line">    <span class="keyword">if</span> (flag[now]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (Edge nxt : head[now]) {</span><br><span class="line">        <span class="keyword">if</span> (nxt.dst == par) <span class="keyword">continue</span>;</span><br><span class="line">        sum += <span class="built_in">count_not_bad</span>(nxt.dst, now);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum + <span class="number">1</span>;  <span class="comment">// 最后加上自己</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">//: T5-10</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        cin &gt;&gt; arr[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">int</span> src = i + <span class="number">1</span>, dst, val;</span><br><span class="line">        cin &gt;&gt; dst &gt;&gt; val;</span><br><span class="line">        head[src].<span class="built_in">push_back</span>({dst, val});</span><br><span class="line">        head[dst].<span class="built_in">push_back</span>({src, val});</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">find_all_bad</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; (n - <span class="built_in">count_not_bad</span>(<span class="number">1</span>, <span class="number">0</span>)) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>中国近代史 —— 雨课堂题库</title>
      <link href="/posts/9936/"/>
      <url>/posts/9936/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><img src="help-wanted.png" alt=""></p><hr><script src="https://unpkg.com/current-device/umd/current-device.min.js"></script><style>table {    table-layout: fixed;}thead {    display: none;}td:first-child {    width: 2em;}.answer {    color: transparent;    text-shadow: 0 0 1em green;    transition: .1s all ease-in-out;}.answer:hover {    text-shadow: 0 0 0 green;    transition: .2s all ease-in-out;}tr {    user-select: none;}html.desktop tr[correct]:active, html:not(.desktop) tr[correct]:hover{    animation: .1s correct ease-out;}@keyframes correct {    from {        background: #67E667;    }    to {        background: transparent;    }}html.desktop tr[wrong]:active, html:not(.desktop) tr[wrong]:hover {    animation: .1s wrong ease-out;}@keyframes wrong {    from {        background: #FF4040;    }    to {        background: transparent;    }}</style><ul><li><strong>（多选）</strong>&nbsp;《南京条约》、《黄埔条约》是清政与（<b class="answer">AC</b>）签订的？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">英国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">美国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">法国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">俄国</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="wrong">日本</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;中国的半殖民地半封建社会是一种从属于资本主义世界体系的畸形的社会形态。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;标志着中国开始进入半殖民地半封建社会的事件是（<b class="answer">A</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">鸦片战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第二次鸦片战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">甲午中日战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八国联军侵华战争</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;太平天国革命的失败充分说明旧式农民战争不能完成近代中国的历史任务  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;《辛丑条约》标志着中国半殖民地半封建社会的（<b class="answer">D</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">开始形成</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">进一步加深</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">再次深化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">完全形成</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;八国联军侵华战争时，德国元帅瓦德西说：“无论欧、美、日本各国，皆无此脑力与兵力，可以统治此天下生灵四分之一，故（<b class="answer">A</b>）一事，实为下策”。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">瓜分</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">称霸</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">共管</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">共处</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代中国半殖民地半封建性社会的特征之一是，封建时代的自给自足的自然经济基础被破坏了，但（<b class="answer">A</b>）不但存在，而且在中国经济生活中占据着明显的优势。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">封建地主土地所有制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">皇帝</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">贵族</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资产阶级</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;近代中国半殖民地半封建性社会的特征之一是，帝国主义列强经过借款给中国政府，并在中国开设银行，垄断了中国的金融和财政。因此，它们就不但在商品竞争上压倒了中国的民族资本主义，而且在金融上、财政上扼住了中国的咽喉。  [<b class="answer">T</b>]</p></li><li><p><strong>（多选）</strong>&nbsp;民族资本主义有了某些发展，但处于（<b class="answer">ABC</b>）（<b class="answer">ABC</b>）（<b class="answer">ABC</b>）的夹缝中，始终没有成为中国社会经济的主要形式。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">封建势力</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">外国资本主义势力</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">本国官僚资本势力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;鸦片战争后，中国社会最主要的矛盾是（<b class="answer">BC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">地主阶级和农民阶级的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">帝国主义和中华民族的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">封建主义与人民大众的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">清朝统治和汉族的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;鸦片战争后中国成为半殖民地半封建社会，中华民族面对的历史任务:一是求得民族独立和人民解放;二是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">实现国家的繁荣富强和人民的共同富裕</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">走向小康</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">实现现代化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">推翻清朝统治</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国失败的根本原因是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">农民阶级的局限性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">遭到中外反动势力的联合绞杀</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">战略失误导致北伐失利</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有无产阶级政党的领导</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;洋务运动失败的原因主要是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">具有封建性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">对外国具有依赖性</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">洋务企业的管理具有腐朽性</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">外国资本的大量输入</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代中国中华民族第一次普遍觉醒是在（<b class="answer">C</b>）战争后。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中法战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">鸦片战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中日甲午战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八国联军侵华战争</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;魏源编纂了《海国图志》提出了“师夷长技以制夷”的思想主张学习外国先进的军事和科学技术以期国家富强来抵御侵略开创了中国近代向西方学习的新风。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;2.19世纪70年代以后马建忠、王韬等人不仅主张学习西方的科学技术同时也要求吸纳某些西方的政治、经济学说。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;资本–帝国主义透过不平等条约的特权，控制中国的通商口岸，剥夺中国的关税自主权，实行商品倾销和资本输出，操纵中国的经济命脉，使中国在经济上构成了对它们的依附而丧失了自我的独立性，中国被纳入资本主义的世界经济体系，成了西方大国的经济附庸。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;资本—帝国主义的入侵，给中华民族带来了巨大的历史灾难，屠杀中国人民，侵占中国领土，划分势力范围，了索赔款，抢掠财富，使中国的经济和社会发展受到了严重的阻碍。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;鸦片战争前中国封建社会的主要矛盾是（<b class="answer">A</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">地主阶级和农民阶级的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">帝国主义和中华民族的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">资产阶级和工人阶级的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">封建主义和资本主义的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国运动发生的最主要原因是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">民族矛盾的激化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">阶级矛盾的激化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">洪秀全的组织发动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">自然灾害的发生</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;3.1843年，洪秀全创立了（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">捻党</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">太平天国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">拜上帝教</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">强国会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洪秀全创立拜上帝教，其理论特点是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">把西方基督教教义同中国农民平均主义结合起来</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">把西方资本主义的政治学说同传统的儒家思想相结合</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">把西方基督教教义、中国儒家大同思想和农民平均主义结合起来</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">把西方资本主义的政治学说同中国农民平均主义结合起来</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;太平天国农民起义爆发的时间是1853年。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;1.1851年1月11日，洪秀全在广西领导农民起义的地点是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">广西永安</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">广西金田村</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">安徽安庆</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">江苏南京</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国天京被攻陷是在（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1851年3月</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1856年7月</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1853年5月</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1864年7月</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国农民战争具有鲜明反封建意义的系统纲领是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《四洲志》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《定国是诏》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《应诏统筹全局折》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《天朝田亩制度》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;《天朝田亩制度》要解决的中心问题是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">政治问题</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">经济问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">军事问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">土地问题</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国后期，由洪仁玕提出的带有鲜明资本主义色彩的改革与建设方案是 （<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《原道觉世训》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《原道醒世训》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《资政新篇》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《天朝田亩制度》</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;太平天国的诸活动中，最能反应其与当时世界历史潮流同步的是颁布了《天朝田亩制度》。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;中国旧式农民战争的最高峰是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">三元里人民抗英斗争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">太平天国农民战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">义和团运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;太平天国失败的根本原因是由于战略失误导致北伐失利以及遭到中外反动势力的联合绞杀。    [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;太平天国是以基督教来发动、组织群众的，它不仅不能正确指导斗争，而且给农民战争带来了极大的危害。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;太平天国由盛而衰的转折点是（<b class="answer">C</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">永安建制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">北伐失利</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">天京事变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">洪秀全病逝</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国运动面对着中国历史上历次农民战争所不曾有的新情况，“新情况”是指（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">尖锐的阶级矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">满汉地主阶级的共同镇压</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">内讧导致内部力量削弱</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中外反动势力的联合镇压</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1.19世纪60年代，面对内忧外患，封建统治阶级中的部分成员如奕、曾国藩、李鸿章、左宗棠、张之洞等，以“自强”、“求富”为目标，主张学习西方的武器装备和科学技术，这些官员被称为 （<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">改革派</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洋务派</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">维新派</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">顽固派</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中央电视台播出的系列记录片《幼童》，追述了清政府派出的詹天佑等第一批留学生的求学生涯。他们出洋留学是在（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">鸦片战争时期</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">太平天国运动时期</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">洋务运动时期</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">辛亥革命时期</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务运动时期洋务派首先兴办的是 （<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">军事工业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">民用工业</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">新式学堂</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">编练新军</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;由李鸿章管辖的清政府海军主力是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">广东水师</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">南洋水师</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">北洋水师</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">福建水师</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;5.19世纪60年代，清朝统治集团中满清贵族中倡导洋务的核心人物是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">文祥</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">奕䜣</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">李鸿章</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">桂良</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;洋务运动时期最早创办的翻译学堂是京师同文馆。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;标志着洋务运动破产的是（<b class="answer">C</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">鸦片战争失败</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中法战争失败</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">甲午战争中北洋海军全军覆没</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八国联军侵华战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务运动的指导思想是 （<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">富国强兵</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中体西用</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">均贫富</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">等贵贱</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“上海轮船招商局创办三年内外轮就损失1300万两，湖北官办织布局开办后，江南海关每年洋布进口减少10万匹。”以上材料说明洋务运动的兴办（<b class="answer">C</b>） 。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">引进了资本主义的一些先进技术</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">客观上刺激了中国民族资本主义的产生</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">在一定程度上抵制了外国资本主义的经济侵略</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">使中国走上了富强的道路</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;提出“三纲四维之道不可变"，”择西学之可以补吾阙者用之"主张的是维新派。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;洋务派的主要主张是利用西方先进技术维护风雨飘摇的封建统治。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;甲午战争后指出“吾国四千余年大梦之唤醒，实自甲午战败割台湾偿二百兆以后始也”的人是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">梁启超</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">严复</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">谭嗣同</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;大大刺激帝国主义列强瓜分中国领土的野心，并激化了列强争夺中国的矛盾的条约是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“……欲自强，必先致富，欲致富，必首在振工商，欲振工商必先讲求学校，速定立法，尊重道德，改良政治。”这是哪一派的观点（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">顽固派</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洋务派</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">维新派</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">革命派</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌维新时期，维新派在上海创办的影响较大的报刊是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《时务报》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《国闻报》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《万国公报》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中外纪闻》</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;梁启超在戊戌维新时期撰写的宣传变法维新主张的著作是《仁学》。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;1.1898年6月下“明定国是”诏，宣布变法维新的皇帝是（<b class="answer">C</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">康熙</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">同治</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">光绪</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">宣统</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;维新派的政治实践和思想理论，不仅贯穿着强烈的爱国主义精神，而且推动了中华民族的觉醒，这鲜明体现出戊戌维新运动是一场（<b class="answer">[‘C’]</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资产阶级性质的政治改良运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">思想启蒙运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">爱国救亡运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">教育革新运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“有心杀贼，无力回天”，这是谭嗣同慷慨就义前的临终语。“回天之力”存在于（<b class="answer">D</b>）之中，这是维新派的志士们所没有认识到的。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">朝廷实力派</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">袁氏军队</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">改良派</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">亿万民众</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌政变后，新政中被保留下来的只有（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">农工商总局</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">京师大学堂</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">译书局</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">铁路矿务局</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;戊戌维新是一场资产阶级性质的革命运动。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;1.1908年，清政府颁布（<b class="answer">B</b>），制定了一个学习日本、实现君主立宪的方案。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《立宪法案》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《钦定宪法大纲》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《政府宣言》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《定国是诏》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;清政府正式废除科举考试是从（<b class="answer">B</b>）年开始的。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1905年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1906年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1907年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1908年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以下哪一项内容不是20世纪初期清政府新政的内容？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">编练湖北新军</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">鼓励留学教育</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">编练北洋海军</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">设立外务部</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1.1904—1905年，帝国主义列强为了争夺中国东北而进行的一场侵略战争是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中法战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">甲午战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">日俄战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">英俄战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志着清政府成为“洋人的朝廷”的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《北京条约》的订立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《马关条约》的订立</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《天津条约》的订立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《辛丑条约》的订立</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;3.1911年，清政府推出一个内阁，它的出台，导致（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国走上了君主立宪的道路</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">清政府解决了自己的统治危机</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">清政府的预备立宪成为了一场骗局</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">清政府的改良取得了成功</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以孙中山为代表的革命派形成的阶级基础是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">工人阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民族资产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">官僚资本家</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国资产阶级革命派的骨干力量是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">大地主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">大商人</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">大资产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资产阶级和小资产阶级知识分子</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在20世纪初期民主革命思想的传播过程中，著有《猛回头》和《警世钟》的是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">陈天华</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">邹容</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">黄兴</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;孙中山第一次尝试用武装斗争推翻清政府的统治是在（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1894年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1895年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1896年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1900年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2.1905年，孙中山、黄兴以及部分革命团体在（<b class="answer">D</b>）成立第一个资产阶级革政党，它的名称是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">美国旧金山  华兴会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新加坡   兴中会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">上海   光复会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">日本 东京     同盟会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;曾在1911年的黄花岗起义中英勇牺牲，并留下《与妻书》的革命烈士是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">方声洞</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">徐锡麟</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">林觉民</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">喻培伦</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;孙中山的三民主义学说中，社会革命指的是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">驱除鞑虏</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">平均地权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">创立民国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">恢复中华</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;孙中山是在（<b class="answer">C</b>）中首次提出了三民主义学说。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《新民丛报》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《新国民》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《民报》发刊词</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《二十世纪之支那》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;孙中山的三民主义学说中，政治革命指的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">驱除鞑虏，恢复中华</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">平均地权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">节制资本</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">创立民国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在20世纪初期资产阶级革命派与改良派的论战中，改良派的主要舆论阵地是（<b class="answer">C</b>），改良派的主要代表人物是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《时务报》   谭嗣同</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《民报》    汪精卫</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《新民丛报》   梁启超</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《民国日报》   朱执信</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列哪一项内容不是20世纪初期资产阶级革命派与改良派论战的基本内容？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">要不要实行民族革命，推翻清政府的封建专制统治</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">要不要实行政治革命，建立民主共和政体</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">要不要实行政治革命，推翻北洋军阀的专制统治</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">要不要实行社会革命，实现民生主义</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;20世纪初期，中国资产阶级革命派与改良派的论战的实质是民族资产阶级与地主阶级矛盾的反映。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;1.1911年9月下旬（<b class="answer">C</b>）和（<b class="answer">C</b>）两个革命团体的首脑（<b class="answer">C</b>）筹划在湖北发动反清武装起义，揭开了辛亥革命的序幕。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">兴中会  华兴会    孙中山和黄兴</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">光复会  日知会   陶成章和孙武</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">文学社  共进会   蒋翊武和孙武</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">同盟会   光复会   焦达峰和徐锡麟</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;武昌起义后，资产阶级革命党人成立的政权组织是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">武汉国民政府</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">湖北省政府</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">湖北军政府</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">湖北都督府</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;武昌起义爆发后，最先响应这场革命运动并成功发动武装起义的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">江苏省</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">湖南省</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">山西省</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">浙江省</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列哪一项不属于辛亥革命的历史意义？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">推翻了清政府的封建专制统治。</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">推动了亚洲民族解放运东的发展。</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">打击了帝国主义的势力。</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">完成了近代中国反帝反封建的历史任务。</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;南京临时政府的性质是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">立宪派控制的政权。</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">旧官僚控制的政权。</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">资产阶级革命派占主导地位的政权。</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">地主阶级政权。</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1.1913年宋教仁被刺后，孙中山等人发起了（<b class="answer">C</b>），以维护民主共和。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">护国运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">护法运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">二次革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">驱张运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2.1916—1917年，北京政府内部出现了所谓的“府院之争”，这指的是哪两位人物之间的争斗？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">冯国璋与段祺瑞</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">段祺瑞和张作霖</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">冯玉祥与黎元洪</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">吴佩孚与曹锟</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;袁世凯之所以能够在辛亥革命后夺取革命果实，根源在于他得到帝国主义列强的支持。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;辛亥革命失败的根源在于袁世凯的政治欺骗和军事实力的强大。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;新文化运动时期对封建礼教作出有力揭露和控诉，使反对“吃人的礼教”成为许多人共同呼声的人是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">钱玄同</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">鲁迅</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">胡适</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">李大钊</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在上海创办《青年杂志》发起新文化运动的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">陈独秀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">胡适</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">李大钊</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">鲁迅</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新文化运动的基本口号是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">科学、进步</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">独立、富强</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民主、科学</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">自由、民主</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新文化运动最重要的旗手是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">陈独秀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">胡适</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">钱玄同</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">鲁迅</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新文化运动中力主以白话文取代文言文的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">刘半农</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">胡适</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">钱玄同</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">鲁迅</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 3.新文化运动旗手中被毛泽东称颂为“现代中国的圣人”的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">刘半农</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">胡适</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">钱玄同</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">鲁迅</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新文化运动中被称为文言文转向白话文的第一篇正式宣言是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《多研究些问题，少谈一些主义》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《狂人日记》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《文学改良刍议》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《朝花夕拾》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;五四运动爆发的直接原因是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">爱国学生不满北洋军阀的黑暗统治</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新文化运动民主思想在中国的传播与影响</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">俄国十月革命对中国的影响</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国在巴黎和会上外交的失败</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下面不属于五四运动期间学生在示威游行时高呼的口号的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“打倒列强，除军阀”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“废除二十一条”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“拒绝在和约上签字”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“外争国权，内惩国贼”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新民主主义革命开端的标志是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新文化运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">五四运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国共产党成立</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;最能说明五四运动性质的口号是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“外争国权，内除国贼”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“废除二十一条”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“誓死力争，还我青岛”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“拒绝在和约上签字”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;五四运动后期斗争的中心由北京转到（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">上海</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">南京</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">广州</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">天津</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;第一个在中国比较系统地阐述马克思主义唯物史观、政治经济学和科学社会主义基本原理的作者和作品是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陈独秀的《谈政治》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">李大钊的《我的马克思主义观》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">杨达的翻译著作《唯物史观解说》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">杨匏安的《马克思主义》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;俄国十月革命后，最早在我国宣传马克思主义、赞扬十月革命的是 （<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陈独秀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">毛泽东</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">李达</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">李大钊</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;马克思主义在中国传播开来是在（<b class="answer">A</b>）的推动之下。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">五四运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新文化运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">十月革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在中国大地上率先举起马克思主义旗帜的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陈独秀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">李大钊</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">毛泽东</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">王明</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;推动中国先进分子把自己的目光从西方转向东方，从资产阶级民主主义转向社会主义的重大历史事件是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">俄国十月革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国新文化运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国五四运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">俄国二月革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国早期信仰马克思主义的人物中，属于五四以前的新文化运动精神领袖的，除了李大钊以外，就是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">刘半农</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">鲁迅</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">陈独秀</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">胡适</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于中国共产党成立的历史特点说法错误的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">所接受的是马克思主义的完整的科学世界观和社会革命论</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">在半殖民地半封建中国的工人运动的基础上产生的</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">小资产阶级出身的党员占大多数，阶级基础不稳固</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">给灾难深重的中国人民带来了光明和希望</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于中国共产党成立的伟大意义说法错误的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">标志着中国革命终于有了一个坚强的领导核心</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">标志着中国革命从此有了一个科学的指导思想</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">标志着中国近代反帝反封建的历史任务已经完成</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">标志着中国革命从此有了新的前途</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党决定全体共产党员以个人名义加入国民党，以建立各民主阶级的统一战线的大会是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中共三大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共二大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共四大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共五大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在共产党早期组织的成员中，最早提出建立“共产党”组织，并认为它是革命运动的发动者、宣传者、先锋队、作战部的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">毛泽东</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">蔡和森</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">周恩来</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">李大钊</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2.1921年7月出席中共一大的长沙代表是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">李达、李汉俊</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">毛泽东、李达</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">毛泽东、何叔衡</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">毛泽东、董必武</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;孙中山逝世后，提出建立“纯正三民主义”，反对国共合作的代表人物是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">戴季陶</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">邹鲁</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">林森</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">张继</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国共两党第—次合作的政治基础是（<b class="answer">C</b>） 。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">共产主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">旧三民主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">新三民主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">联俄、联共、扶助农工的三大政策</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党第一次明确提出反帝反封建的民主革命纲领是在（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共一大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中共二大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国三大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共四大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;第一次国内革命战争失败的最深刻的教训是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">无产阶级必须掌握革命的领导权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">共产党必须有明确的革命纲领</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">要有科学的革命理论作指导</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">无产阶级必须警惕统一战线内部的野心家</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;第一次国共合作正式形成的标志是  （<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共杭州西湖会议的召开</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共“三大”的召开</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国国民党“一大”的召开</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国国民党“二大”的召开</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;北伐战争胜利进军的原因不包括（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民革命统一战线的建立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">广大工农群众的大力支持</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">北洋军阀自动放弃抵抗</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">苏联政府的多方面援助</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年蒋介石发动“四•一二”反革命政变的地点是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">广州</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">武汉</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南京</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">上海</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年4月建立的国民党南京政府所代表的阶级是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">工人阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">民族资产阶级和城市小资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">地主阶级和买办性的大资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;表明蒋介石彻底叛变革命的是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“整理党务案”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中山舰事件</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“四—二”反革命政变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“七—五”反革命政变</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民党政府建立后，国民经济缓慢发展的根本原因是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">封建主义势力阻挠</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">受官僚资本控制</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">受帝国主义的侵略</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">农业生产时有起伏</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;蒋介石反动政权的经济基础是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">封建地主经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资本主义经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">国家垄断资本</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">官僚私人资本</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民党政府四大银行完成其金融垄断的具有决定性意义的步骤是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">发行“法币”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发行内债</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">商业投机</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">垄断工业</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民党在形式上完成对全国统一的标志性事件是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">宁汉合流</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">七一五武汉政变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南京国民政府建立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">张学良宣布改旗易帜</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列不属于国民党一党专政军事独裁统治表现的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">大力推行保甲制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">建立庞大的全国性特务系统</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">厉行文化专制主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">抗日战争全面爆发后与共产党合作抗日</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民党新军阀连年混战对中国政局的影响包括（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">导致了国民党内部的分化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">为红军的壮大创造了有利条件</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">使蒋介石的地位日益提高</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">给帝国主义侵略造成可乘之机</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;南京国民政府前期民族工业得到一定的发展，主要是由于（<b class="answer">AD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国民政府开展“国民经济建设运动”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">因反对“二十一条”掀起的“提倡国货”运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">官僚资本的形成</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">国民政府实行的“币制改革”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;南京国民政府“改订新约运动”的实质目的是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">争取独立自主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">取消帝国主义在华特权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">巩固自身统治地位</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">争取帝国主义国家支持</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民党在全国的统治建立后，官僚资本的垄断活动首先和主要是从（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">重工业方面开始的</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">商业方面开始的</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">轻工业方面开始的</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">金融业方面开始的</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“共产党现时最主要的任务是有系统地有计划地尽可能在广大区域中准备农民总暴动，……工人阶级应时刻领导并参加武装暴动。”上述中共八七会议决议表明（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共的思想理论基础发生了根本变化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共的工作重心由城市转入农村</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中共确立武装反抗国民党的方针</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共正式确定了工人阶级的领导地位</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年，中共八七会议确定的总方针是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">建立工农民主统一战线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">开展土地革命和武装斗争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">开辟农村革命根据地</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">推翻北洋军阀黑暗统治</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;大革命失败后，被杀害的共产党员有（<b class="answer">BCDE</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">李汉俊</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">陈延年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">熊雄</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">汪寿华</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="correct">肖楚女</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;大革命失败后，在革命危急时刻加入共产党的有（<b class="answer">[‘A’, ‘C’, ‘D’, ‘E’]</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">彭德怀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">叶挺</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">徐特立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">贺龙</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="correct">郭沫若</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;南昌起义的领导人包括（<b class="answer">ABCE</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">朱德</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">叶挺</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">周恩来</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">毛泽东</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="correct">贺龙</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1927年7月中旬，中共中央临时常委会决定了三件大事，包括（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">召开党的六大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">发动南昌起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">召集中央会议讨论决定新时期的方针政策</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">发动秋收暴动</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="wrong">发动广州起义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（2015年考研真题）1929年12月下旬，红四军党的第九次代表大会在福建上杭县古田村召开，会议总结了红军创立以来的经验，通过了著名的古田会议决议。决议的中心思想是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">用无产阶级思想进行军队和党的建设</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">在农村根据地广泛开展土地革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武装斗争是中国革命的主要形式</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国共产党必须服从共产国际的领导</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;从1927年到1930年上半年，中国共产党领导的农村革命根据地和红军得到了迅速发展，其根本措施是( &nbsp; )</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">纠正“左”倾军事冒险计划</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">开展打土豪分田地的土地革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">肃清右倾投降主义路线</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“工农武装割据”波浪式推向全国</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1930年初，中国共产党领导的主要根据地有（<b class="answer">ADE</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">闽西根据地</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">晋察冀根据地</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">井冈山革命根据地</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">鄂豫皖革命根据地</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="correct">赣南根据地</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;井冈山时期，毛泽东提出红色政权存在与发展必须坚持（<b class="answer">BCE</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">政治建设</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">土地革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">根据地建设</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">党的建设</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="correct">武装斗争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（2014年考研真题）1930年1月，毛泽东在《星星之火，可以燎原》一文中写道：“我所说的中国革命高潮快要到来，决不是如有些人所谓‘有到来之可能’那样完全没有行动意义的、可望而不可即的一种空的东西。它是站在海岸遥望海中已经看得见桅杆尖头了的一只航船，它是立于高山之巅远看东方已见光芒四射喷薄欲出的一轮朝日，它是躁动于母腹中的快要成熟了的一个婴儿。”这段话是针对当时党内和红军中存在的</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“一省或数省的首先胜利”的设想</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“红旗到底打得多久”的疑问</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“御敌于国门之外”的主张</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“在全国范围内先争取群众后建立政权”的理论</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东提出“中国革命斗争的胜利要靠中国同志了解中国情况”重要思想的文章是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《井冈山的斗争》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《中国的红色政权为什么能够存在？》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《反对本本主义》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《星星之火，可以燎原》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东提出“没有调查，就没有发言权”著名论断的文章是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《反对本本主义》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《中国的红色政权为什么能够存在？》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《井冈山的斗争》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《星星之火，可以燎原》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在大革命失败、白色恐怖极其严重的条件下，中国革命之所以能够得到坚持和发展，最根本的原因在于（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">党成功打破了国民党的四次“围剿”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">党紧紧依靠农民开展土地革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">党始终加强自身建设</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">党紧紧掌握武装斗争这个武器</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;兴国土地法对井冈山土地法进行的一个原则性改动保护了中农利益的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">改“没收地主土地”为“减租减息”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">改“禁止土地买卖”为“可以自主租借买卖”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">改“土地归苏维埃所有”为“农民已经分得的田块归农民个人所有”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">改“没收一切土地”为“没收一切公共土地及地主阶级的土地”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1931年中华苏维埃第一次全国代表大会召开的地点是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陕西省延安</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">江西省兴国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">江西省吉安</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">江西省瑞金</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;临时中央政治局迁到中央根据地后，全面推行“左”倾教条主义错误，在福建开展的运动是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反对“罗明路线”的斗争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">整风运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">肃反运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">反对“邓、毛、谢、古”的斗争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;王明等人“左”倾教条主义错误对中国革命造成的最大恶果是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">红军第五次反“围剿”失败，被迫实行战略转移</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">错误开展反对“罗明路线”的斗争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">毛泽东对中央根据地红军的领导权被剥夺</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">党的民主集中制遭到严重破坏</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;5【多选题】 1927年7月大革命失败到1935年遵义会议召开，左倾错误先后三次在党中央取得统治地位，它们的代表人物分别是（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">秦邦宪</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">李立三</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">王明</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">瞿秋白</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="wrong">洛甫</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在遵义会议上集中全力解决的主要问题是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">政治和组织问题</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">军事和组织问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">内容思想和作风问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">政治和军事问题</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中央红军和中共中央机关长征开始于（ &nbsp;）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1937年10月</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1936年10月</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1935年10月</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1934年10月</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;遵义会议后代替博古对党负总责的是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">张闻天</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">王稼祥</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">周恩来</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">毛泽东</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1935年10月中共中央和红十五军团回合于（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">甘肃会宁</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">四川甘孜</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">陕北吴起镇</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">四川懋功</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在政治上达到成熟是在（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">解放战争时期</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">抗日战争时期</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">第二次国内革命战争时期</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民大革命时期</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;大革命时期，毛泽东先后发表《中国社会各阶级的分析》、《中国革命与中国共产党》《湖南农民运动考察报告》等著作。  [<b class="answer">F</b>]</p></li><li><p><strong>（多选）</strong>&nbsp;中国共产党内在如何运用马克思主义基本原理来解决中国革命实践中的问题上，曾经出现过的主要错误倾向是</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">教条主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">盲动主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">经验主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">实用主义</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="wrong">自由主义</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;毛泽东思想有多方面的丰富内容，除了关于新民主主义革命理论外，还包括</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">关于社会主义革命和社会主义建设的理论</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">关于革命军队建设和军事战略的理论</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">关于思想政治工作和文化工作的理论</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">关于政策和策略的理论</div></td></tr><tr><td style="text-align:center">E</td><td style="text-align:left"><div solution="correct">关于党的建设的理论</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;3.20世纪中国产生了两位伟大人物，他们是（<b class="answer">AC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">孙中山</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">袁世凯</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">毛泽东</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">曾国藩</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;明治维新后，日本推行的政策是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">大陆政策</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中立政策</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">均衡政策</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">门户开放政策</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本开始走上资本主义道路，并逐渐发展成为军国主义国家是在（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">明治维新后</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发动甲午战争后</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">第一次世界大战后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">第二次世界大战后</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年日本召开“东方会议”，声称“惟欲政府之支那，必先征服满蒙；如欲征服满蒙，必先征服支那”，会议通过了（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《大陆政策》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《反共产国际协定》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《昭和十二年度对华作战计划》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《对华政策纲领》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;明治维新后，日本推行的政策是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">大陆政策</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中立政策</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">均衡政策</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">门户开放政策</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本开始走上资本主义道路，并逐渐发展成为军国主义国家是在（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">明治维新后</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发动甲午战争后</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">第一次世界大战后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">第二次世界大战后</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年日本召开“东方会议”，声称“惟欲政府之支那，必先征服满蒙；如欲征服满蒙，必先征服支那”，会议通过了（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《反共产国际协定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《对华政策纲领》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《昭和十二年度对华作战计划》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《大陆政策》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本制造的策动华北五省二市“防共自治”运动的事变是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“九一八”事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">华北事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">皇姑屯事变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">卢沟桥事变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本变中国为其独占殖民地的起点是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">九一八事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">一二八事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">七七事变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八一三事变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本挑起“九一八”事变的借口是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">士兵失踪</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">诬蔑中国军队炸毁“南满”铁路柳条湖铁路一段路轨</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">大山事件</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">保护侨民</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本制造的策动华北五省二市“防共自治”运动的事变是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“九一八”事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">华北事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">皇姑屯事变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">卢沟桥事变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本变中国为其独占殖民地的起点是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">九一八事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">一二八事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">七七事变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八一三事变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本挑起“九一八”事变的借口是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">士兵失踪</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">诬蔑中国军队炸毁“南满”铁路柳条湖铁路一段路轨</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">大山事件</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">保护侨民</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国人民的抗日民族统一战线初步形成的标志是（<b class="answer">[‘B’]</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民党召开五届三中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">西安事变的和平解决</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">七七事变发生</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民党中央通讯社发表《中国共产党为公布国共合作宣言》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;根据国共两党协议，红军主力改编为（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国民革命军第八路军</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">抗日义勇军</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国民革命军新编第四军</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">抗日同盟军</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在抗日民族统一战线中坚持独立自主原则的实质是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">巩固和发展抗日民族统一战线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">力争共产党对抗日战争的领导权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">粉碎国民党顽固派反共投降逆流</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">争取民主，防止国民党一党专政</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国人民的抗日民族统一战线初步形成的标志是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民党召开五届三中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">西安事变的和平解决</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">七七事变发生</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民党中央通讯社发表《中国共产党为公布国共合作宣言》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;根据国共两党协议，红军主力改编为（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国民革命军第八路军</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">抗日义勇军</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国民革命军新编第四军</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">抗日同盟军</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在抗日民族统一战线中坚持独立自主原则的实质是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">巩固和发展抗日民族统一战线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">力争共产党对抗日战争的领导权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">粉碎国民党顽固派反共投降逆流</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">争取民主，防止国民党一党专政</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东在《论持久战》中分析交战的中日双方存在的相互矛盾的特点是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">抗日战争是持久战，最后胜利属于中国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">敌强我弱；敌退步我进步；敌小我大；敌寡助我多助</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">战争要经过战略防御、战略相持、战略反攻三个阶段</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国是正义战争，日本是侵略战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志着抗日战争进入相持阶段的事件是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">卢沟桥事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">八一三事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">豫湘桂战役</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">广州、武汉失陷</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;体现彻底的人民战争路线的抗日纲领是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《抗战建国纲领》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《抗日救国十大纲领》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《为抗日救国告全国同胞书》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《论持久战》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1932年3月，在日本侵略者阴谋策划下建立的傀儡政权是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">伪“满洲国”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">伪“华北自治政府”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">伪“中华民国维新政府”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">伪“中华民国国民政府”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1937年12月，在日本侵略军制造的“南京大屠杀”中惨遭屠杀的中国军民达（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">10万人以上</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">15万人以上</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">20万人以上</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">30万人以上</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争时期，在关内占领区，日本军国主义者允许“中华民国”国号的存在，所谓“中华民国”是指以（<b class="answer">C</b>）为首的政府。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">袁世凯</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">蒋介石</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">汪精卫</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">溥仪</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在抗日战争战略防御阶段，国民党军队组织了系列大战役，其中不包括（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">淞沪会战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">徐州会战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武汉会战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">第三次长沙会战</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在入缅作战中为国牺牲的中国陆军将领是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">佟麟阁</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">张自忠</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">赵登禹</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">戴安澜</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在抗日战争战略相持阶段，国民党军队大溃败的战役是指（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">长沙会战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">豫湘桂战役</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">淞沪会战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">武汉会战</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争全面爆发后，中国军队取得第一次重大胜利的战役是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">平型关战役</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">雁门关战役</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">阳明堡战役</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">台儿庄战役</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东在《论持久战》中分析交战的中日双方存在的相互矛盾的特点是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">抗日战争是持久战，最后胜利属于中国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">敌强我弱；敌退步我进步；敌小我大；敌寡助我多助</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">战争要经过战略防御、战略相持、战略反攻三个阶段</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国是正义战争，日本是侵略战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1938年5月，毛泽东发表了（<b class="answer">D</b>）一文,从战略高度，论述了抗日游击战争的地位、作用，以及与正规战争相配合、建立根据地、战略防御和战略进攻、向运动战发展、正确的指挥关系等一系列具体的战略问题。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《论反对日本帝国主义的策略》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《论抗日游击战争》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《论持久战》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《抗日游击战争的战略问题》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;第二次世界大战中反对日本法西斯的主战场是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国战场</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">苏联战场</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南亚战场</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">缅甸战场</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;敦促日本无条件投降的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">开罗公告</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">雅尔塔公告</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">波茨坦公告</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">德黑兰公告</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1945年4月，出席联合国制宪会议中国代表团中的解放区代表是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">周恩来</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">刘少奇</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">董必武</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">王若飞</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 《雅尔塔协定》是哪三个国家的元首签订的？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">美、苏、中</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">美、苏、英</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">美、英、中</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">美、苏、中</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 下列哪一项不属于《中苏友好同盟条约》苏联方面的保证？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">苏联保证与中国国民党一起镇压中国共产党</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">苏联保证尊重中国对东三省之充分主权及领土、行政完整</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">苏联保证在新疆事变中不干涉中国内政</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">苏联保证其道义支持和物资援助完全供给中国国民政府</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 二战后期，通过1943年《莫斯科宣言》以及1944年敦巴顿橡树园会议，哪几个国家成为世界“四强”？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中、美、苏、英</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中、美、苏、法</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">美、苏、英、法</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">美、苏、英、德</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 关于全国解放战争时期美国不对中国进行大规模军事干涉的原因，下列哪一项不正确？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">美国国内反对对中国内部事务进行军事干涉的声音甚为炽烈</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">战后美国在华没有直接的利益关系</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">美国担心对中国进行军事干涉会导致与苏联发生直接对抗</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">战后美国全球战略的重点不在亚洲而在欧洲</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 毛泽东提出“中间地带”论断的意义在于</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">与国民党进行和平谈判</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">与国内中间力量建立统一战线</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">廓清美苏冷战与国共内战的界限</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">廓清美苏两大阵营的界限</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 1945年9月，中共中央正式确定的战略方针是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“向南发展，向北防御”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“向东发展，向西防御”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“向西发展，向东防御”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“向北发展，向南防御”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 毛泽东庄严宣告“中国人从此站起来了”是在</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1949年10月1日开国大典</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1949年9月21日中国人民政治协商会议开幕词</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1949年9月30日中国人民政治协商会议闭幕词</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1949年6月30日毛泽东发表的《论人民民主专政》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 全国解放战争中战略决战阶段的三大战役是指</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">济南战役、辽沈战役、淮海战役</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">济南战役、淮海战役、平津战役</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">辽沈战役、淮海战役、平津战役</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">淮海战役、平津战役、渡江战役</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 人民解放军占领南京是在1949年</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1月23日</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">4月23日</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">10月23日</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">12月23日</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 1945年10月10日，国共双方签署了《政府与中共代表会谈纪要》，即“双十协定”，确认</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">实行第二次合作</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">实行第三次合作</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">地方自治的基本方针</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">和平建国的基本方针</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 关于全国解放战争中人民解放军的战略战术，下列说法不正确的是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">以争城夺地及确保城镇和土地为作战目标</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">以歼灭敌人有生力量为主要目标</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">在战役上打歼灭战、速决战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">未经过战略相持即转入战略进攻</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列人名中，被称为“特工之王”的是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">林彪</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">彭德怀</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">粟裕</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">李克农</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;全国解放战争时期，中国共产党制定的土地改革政策文件有</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《兴国土地法》和《延安土地法》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《五四指示》和《中国土地法大纲》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《解放区土地法》和《中国土地法大纲》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《减租减息条例》和《五四指示》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 下列说法不正确的是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">解放军不需发工资</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共干部没有私产</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共领导了土地改革</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">解放军的后勤补给主要依靠苏联</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 1948年8月国民党政府主持币制改革的财政部长是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">翁文灏</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">宋子文</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">王云五</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">司徒雷登</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 关于解放战争时期国统区通货膨胀和经济崩溃的原因，下列说法不正确的是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">军费开支庞大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">投机奸商大发战争财</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">美国放弃援助国民政府</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">官僚腐败</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 毛泽东认为，在全国解放战争中，蒋介石军事力量的优势和美国的援助只是临时起作用的因素，而经常起作用的因素是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">蒋介石发动的战争的反人民性质，人心的向背</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">蒋介石作战方针和用人的失误</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">人民解放军的军事优势和苏联的帮助</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">蒋介石国民党对美国的援助利用效率太低</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1945年的“一二一”运动的基本口号是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“反对内战，争取自由”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“抗议驻华美军暴行”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“反饥饿、反内战”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“反饥饿、反内战、反迫害”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;配合人民解放战争的第二条战线是指</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国统区民主党派的斗争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国统区广大人民的起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国民党与共产党的军事对立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">国统区的人民民主运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 针对美国国务院白皮书和艾奇逊信件，1949年8、9月间毛泽东为新华社写了几篇评论文章。下列哪一篇不是？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《美帝国主义和一切反动派都是纸老虎》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《丢掉幻想，准备斗争》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《别了，司徒雷登》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《“友谊”，还是侵略？》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 关于解放战争时期美国对待国民党的政策，下列哪种说法不正确？</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">美国旨在推动建立一个统一的亲美政府</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">为帮助国民党消灭共产党，美国不惜大规模出兵干涉</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">给予国民党经济、政治、军备等方面的援助</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">要求国民党实行某种程度上的改革，以实现中国在其领导下的统一</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 下列事件哪个不是雅尔塔体制中美苏两强安排的</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中苏友好同盟条约》的签订</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">美国承认外蒙古独立</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">苏联在抗战胜利后曾对中共不信任</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中共取得全国政权</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 毛泽东第一次完整提出并论述中国革命战胜敌人的三大法宝是在</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中国革命和中国共产党》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《发刊词》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《新民主主义论》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《论人民民主专政》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 中国共产党在中国革命中战胜敌人的三个主要的法宝是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">统一战线，武装斗争，党的建设</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">统一战线，武装斗争，铁的纪律</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武装斗争，党的建设，群众路线</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">独立自主，实事求是，群众路线</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp; 民主革命时期中国共产党领导的革命统一战线基本的、主要的是</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">工人阶级同农民和其他劳动人民的联盟</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工人阶级同民族资产阶级的联盟</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">工人阶级同小资产阶级的联盟</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">工人阶级同地主阶级和官僚资产阶级的联盟</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;世界上第一个与中华人民共和国建立外交关系的国家是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">朝鲜</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">苏联</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">法国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">越南</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国建立后，我国提出的过度时期总路线是在（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1950年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1951年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1952年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1953年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国建立初期，我国进行土地改革的指导性文件是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">五四指示</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国土地法大纲</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中华人民共和国土地改革法</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">关于土地改革问题的决定</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国建立后，我国土地改革的总路线和总政策是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">依靠贫农、雇农，打击地主阶级，实现耕种有其田</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">依靠农民协会，团结中农和富农，彻底消灭地主土地所有制</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">依靠贫农、雇农，团结中农，中立富农，有步骤、有分别地消灭封建剥削制度，发展农业生产</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">依靠贫农、雇农，团结中农，中立富农，实现耕者有其田</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;中国共产党领导的革命，包括新民主主义革命和社会主义革命两个阶段。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;我国的第一个发展国民经济的五年计划，时间是从1949年到1953年。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;过渡时期总路线的主体是工业化。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;中华人民共和国的成立标志着中国进入到（<b class="answer">C</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资本主义社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">社会主义社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">新民主主义社会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">共产主义社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国建立初期，我国社会主义国营经济建立的主要途径是通过（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">没收官僚资本</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">改造官僚资本</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">征用外国资本</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">赎买民族资本</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1951年底到1952年春，中国共产党在党政机构中开展了“三反”运动，“三反”指的是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反浪费、反行贿、反盗窃</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">反主观主义、反保守主义、反官僚主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">反贪污、反浪费、反官僚主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">反主观主义、反宗派主义、反党八股</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国对资本主义工商业的改造的主要形式是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">没收官僚资本</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">消灭资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">发展国家资本主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">改造资本家</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;公私合营企业的利润分配上采取了“四马分肥”的办法，即按照30%、30%、15%、25%的比例分别分配（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国家所得税、企业公积金、职工福利、资本家所得</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国家所得税、职工福利、企业公积金、资本家所得</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国家所得税、企业公积金、资本家所得、职工福利</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国家所得税、资本家所得、企业公积金、职工福利</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国社会主义改造在（<b class="answer">D</b>）基本完成。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1953年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1954年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1955年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1956年</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;社会主义改造是从私有制到公有制的变革，它的实质是生产力的革命。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;我国在社会主义改造中对资本主义工商业的改造政策是和平赎买。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;我国在（<b class="answer">B</b>）颁布了第一部中华人民共和国宪法</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1953年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1954年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1955年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1956年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国最先建立的民族自治的地区是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">广西</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新疆</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">宁夏</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">蒙古</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以下哪一项不属于我国基本的社会主义政治制度（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">人民代表大会制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国共产党领导的多党合作制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">村民自治制度</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民族区域自治制度</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国进入社会主义社会的最主要标志是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中华人民共和国宪法》的颁布</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第一次全国人民代表大会的召开</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">社会主义改造的基本完成</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民政治协商会议的召开</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;新中国建立后，我国最先起宪法作用的是《共同纲领》。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;我国是在没有完全实现工业化的情况下进入社会主义社会的。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;我进入社会主义社会最主要的标志是社会主义政治制度的确立。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;在1956年4月提出实现马克思主义同中国实际“第二次结合”任务的是（<b class="answer">B</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">刘少奇</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">毛泽东</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">周恩来</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">邓小平</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东在《论十大关系》中提出的社会主义建设基本方针是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">独立自主，艰苦创业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">自力更生为主，争取外援为辅</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">调动一切积极因素把中国建设成为一个强大的社会主义国家</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">走中国特色社会主义制度</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年中共八大提出，我国社会的主要矛盾是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">无产阶级与资产阶级之家的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">人民对于经济文化迅速发展的需要与当前经济文化不能满足人民需要的状况之间的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">人民对精神生活的追求与当前精神文明不能满足人民需要的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民内部的矛盾</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;我国进入社会主义后，人民政府与人民群众之间已经不存在矛盾了。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1956年八大提出了调整、巩固、充实、提高的国民经济调整方阵。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1957年开展的反右派斗争是维护共产党的领导和社会主义制度的必要举措，但它的扩大化是错误的，将阶级矛盾定性为主要矛盾，对社会政治生活造成严重危害，也是我们探索社会主义建设开局中的挫折。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1958年的中共八大二次会议上提出的“鼓足干劲，力争上游，多快好省地建设社会主义”的建设总路线是非常正确的一条路线。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;“大跃进”运动和人民公社化运动发生的根本原因在于社会主义制度不合理。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;人民公社化运动是我国农村生产关系和基层组织的一次重大变革。它的主要特点是一大二公。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;文化大革命在某种程度上来说还是一场革命和社会进步运动。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;新中国成功地爆炸第一颗原子弹的是在（<b class="answer">A</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">1964年10月</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1966年10月</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1965年10月</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1963年10月</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中华人民共和国在（<b class="answer">B</b>）恢复了联合国的合法席位。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1970年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1971年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1972年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1973年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;创造性地阐述了社会主义矛盾学说，发展了科学社会主义理论的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《论人民民主专政》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《论十大关系》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《矛盾论》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《关于正确处理人民内部矛盾的问题》</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;新中国建立后的十几年内，我国在经济建设上的最大成就是建立了完整的工业体系和国民经济体系。  [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新中国成立后的二十年里，我国的主要建设成就是经济领域，政治领域没有什么成绩。  [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;1978年，中国共产党重新确立实事求是思想路线是（<b class="answer">A</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">十一届三中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">十一届六中全会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">十二届三中全会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">十二届六中全会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;十一届三中全会的核心主题是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">解决“文化大革命”的错误</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">将党的工作重心转移到社会主义建设上来</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">审查和解决历史遗留问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">外交工作的安排和调整</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;十一届三中全会后，我国在农村进行经济体制改革主要是推行（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">个体经营制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">农村互助合作社制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">生产队为基础的集体经营制度</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">家庭联产承包责任制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2012年11月29日，习近平在参观《复兴之路》展览时首次提出（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国梦</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国精神</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">八项规定</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">从严治党</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在四个全面中，（<b class="answer">BCD</b>）是战略举措和路径方法。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">全面建成小康社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">全面深化改革</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">全面依法治国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">全面从严治党</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;十八大的召开，标志着我国已经进入全面建成小康社会的决定性阶段，开启了中国特色社会主义新时代。  [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中共十八大以来五年的成就是全方位的、开创性的，变革是深层次的、根本性的。  [<b class="answer">T</b>]</p></li><li><p><strong>（多选）</strong>&nbsp;十八大以来的5年，管党治党实现了从（<b class="answer">AB</b>）到（<b class="answer">AB</b>）的深刻转变。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">宽松软</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">严紧硬</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">疏于管理</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">严格管理</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;十八大以来的5年，我国经济保持（<b class="answer">D</b>）增长，在世界主要国家中名列前茅，国内生产总值从54万亿元增长到82.7万亿元，年均增长7.1%。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">低速</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中速</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">高速</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中高速</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;当前，我国社会主要矛盾已经转化为人民日益增长的（<b class="answer">AB</b>）和（<b class="answer">AB</b>）之间的矛盾。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">美好生活需要</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">不平衡不充分发展</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">物质文化需要</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">落后生产力</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;“八个明确”和“十四条坚持”是习近平新时代中国特色社会主义思想的核心内容。  [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;党的十九大概括和提出了（<b class="answer">D</b>），将之确立为党必须长期坚持的指导思想并写进党章，实现了党的指导思想的与时俱进。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">改革开放思想</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">科学发展观</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">三个代表</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">习近平新时代中国特色社会主义思想</div></td></tr></tbody></table><script>    for (const item of document.querySelectorAll('div[solution]')) {        item.parentNode.parentNode.setAttribute(item.getAttribute('solution'), '');    }</script></body></html>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>中国近代史 —— 题库</title>
      <link href="/posts/11205/"/>
      <url>/posts/11205/</url>
      
        <content type="html"><![CDATA[<html><head><script src="https://unpkg.com/current-device/umd/current-device.min.js"></script><style>table {    table-layout: fixed;}thead {    display: none;}td:first-child {    width: 2em;}.answer {    color: transparent;    text-shadow: 0 0 1em green;    transition: .1s all ease-in-out;}.answer:hover {    text-shadow: 0 0 0 green;    transition: .2s all ease-in-out;}tr {    user-select: none;}html.desktop tr[correct]:active, html:not(.desktop) tr[correct]:hover{    animation: .1s correct ease-out;}@keyframes correct {    from {        background: #67E667;    }    to {        background: transparent;    }}html.desktop tr[wrong]:active, html:not(.desktop) tr[wrong]:hover {    animation: .1s wrong ease-out;}@keyframes wrong {    from {        background: #FF4040;    }    to {        background: transparent;    }}</style></head><body><ul><li><strong>（单选）</strong>&nbsp;中国的封建社会前后延续了（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">一千多年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">二千多年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">三千多年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">四千多年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国封建社会政治的基本特征是高度中央集权的（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">封建君主专制制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">封建宗法等级制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">君主立宪制</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">宗族家长制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国封建社会的文化思想体系以（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">道家思想为核心</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">儒家思想为核心</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">墨家思想为核心</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">法家思想为核心</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志世界进入资本主义时代的事件是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">1640年英国资产阶级革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1680年俄国彼得一世改革</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1789年法国大革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1868年日本明治维新</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国进入近代社会的标志性事件是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">15世纪前期郑和下西洋</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1644年清兵入关，清王朝建立</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1840年鸦片战争爆发</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">19世纪六、七十年代中国资本主义产生</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;认识（<b class="answer">A</b>）是认识近代中国一切社会问题和革命问题的最基本的依据。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">近代中国的社会性质</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">近代中国社会的主要矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">近代中国社会的主要任务</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">近代中国社会的阶级结构</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;鸦片战争成为中国近代史的起点，这是因为随着西方列强的入侵，（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国逐步成为半殖民地半封建国家</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国社会主要矛盾发生变化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国逐渐开始了反帝反封建的资产阶级民主革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国革命属于世界无产阶级革命的组成部分</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国近代第一个不平等条约是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《天津条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《望厦条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《南京条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代中国的社会性质是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">封建社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">半殖民地半封建社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">资本主义社会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">旧民主主义社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;鸦片战争后，外国资本主义的入侵对中国经济的影响不包括（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">封建地主土地所有制迅速瓦解</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">自给自足的自然经济基础遭到破坏</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">卷入世界资本主义经济体系和世界市场之中</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国出现了资本主义生产关系</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代中国最革命的阶级是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">工人阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国民主革命的主力军是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工人阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国工人阶级最先出现于（<b class="answer">A</b>）中。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">19世纪四五十年代外国资本主义在华企业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">19世纪60年代洋务派创办的军用企业</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">19世纪70年代官僚买办资本家企业</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">19世纪70年代民族资本家企业</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国民族资本主义企业产生于（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">18世纪60年代</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">19世纪70年代</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">19世纪80年代</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">19世纪90年代</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在中国近代，在政治上表现出两面性的阶级是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工人阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代中国社会最主要的矛盾是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">帝国主义和中华民族的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">地主阶级和农民阶级的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">封建主义和人民大众的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">工人阶级和资产阶级的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国封建社会的基本生产结构是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">手工业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">农业经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">工业</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">小农经济</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;革命与现代化的关系是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">革命与现代化水火不相容</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">革命和现代化互为前提</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">革命为现代化开辟道路</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">现代化是革命后的必然结果</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;《南京条约》的签定时间是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1940年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1842年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1895年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1901年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;随着近代资本主义的发展，到1919年时中国无产阶级人数约有（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">100万人</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">200万人</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">300万人</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">400万人</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国封建社会的经济特征是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">自然经济占主体</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">市场交往份额较大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济高度垄断</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">商品经济较为发达</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代中国人民的斗争，主要是以（<b class="answer">B</b>）为出发点。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">捍卫中华文明</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">挽救中华民族的危亡</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">把外国侵略者赶出中国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">推翻封建统治制度</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;鸦片战争前夕中国社会的经济状况是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资本主义萌芽发展较快，自然经济开始解体</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">自给自足的自然经济占统治地位，土地高度集中</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">对外贸易发达，财政收支状况良好</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国已经开被卷入资本主义世界市场</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国近代史以鸦片战争为起点，主要是因为（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国第一次被西方国家侵略</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">长期闭关锁国的状况被打破</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">社会性质开始发生根本变化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民族矛盾取代了阶级矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;19世纪末资本主义进入帝国主义阶段后，（<b class="answer">D</b>）成为殖民剥削的重要形式，并出现瓜分世界的狂潮。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">贩卖奴隶</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">掠夺土地</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">商品输出</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资本输出</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;鸦片战争后，中国经济逐渐被卷入世界资本主义市场，其对中国的影响不包括（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">封建地主土地所有制瓦解</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">自给自足的自然经济逐步解体</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">西方的先进生产技术逐步传入</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">英国输华商品激增</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;有人说，英国是用三样武器打开中国大门的，其使用的先后顺序是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">商品→鸦片→炮舰</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">鸦片→商品→炮舰</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">商品→炮舰→鸦片</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">炮舰→鸦片→商品</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（<b class="answer">A</b>）不是中国工人阶级所特有的优点。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">不占有任何生产资料</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">身受帝国主义、封建主义、资产阶级三重压迫</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">与广大农民有天然联系</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">集中、便于组织</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;19世纪中叶，（<b class="answer">A</b>）生产的工业品约占世界工业总产量的45%，并占有世界商船舰队数量的1/3，拥有全世界国际贸易总量的1/5。为了对外扩张、掠夺殖民地、扩大商品市场，这个国家先后挫败了西班牙、荷兰、法国，成为“海上霸王”。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">英国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">法国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">美国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">德国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（<b class="answer">A</b>）不是西方列强发动殖民扩张的目的。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">传播资本主义文明</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">实现更多的剥削、掠夺</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">攫取巨额财富</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">获得经济上、政治上的附庸</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国人民的历史任务是（<b class="answer">AC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">争取民族独立和人民解放</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">建立民主共和国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">实行国家富强和人民解放</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">大力发展资本主义</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国逐步变成半殖民地的原因（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">西方列强通过发动侵略战争，中国已经丧失了完全独立的地位</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">西方列强侵略中国的目的，是要把它变成自己的殖民地，但中国仍然维持着独立国家和政府的名义，还有一定的主权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">外国资本主义列强把中国卷入世界资本主义经济体系和世界市场中</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">西方列强并不愿意中国成为独立的资本主义国家</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国是一个半殖民地半封建社会，其正确理解是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">是一种从属于资本主义世界体系的畸形的社会形态</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">是逐步从封建社会向资本主义社会过渡的社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">资本——帝国主义侵略势力逐渐成为支配中国的决定性力量</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">仍然维持着独立国家和政府，还有一定的主权</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;西方列强侵略中国是要把它变为自己的殖民地，但终未如愿。原因有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国长期是一个统一大国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国人民一直顽强持久反抗</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">帝国主义列强争夺中国矛盾无法协调</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">任何一个列强国家无法单独征服中国</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国半殖民地半封建社会经济上的特征是（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">自然经济的基础虽遭到破坏，但封建地主的土地所有制依然保持着</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国新兴的民族资本主义经济虽然已经产生，但始终不占主要地位</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国传统农业经济和外来资本主义经济所占比重差不多</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">各地区经济、政治和文化的发展是极不平衡的</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;鸦片战争失败后，清政府与列强签订的不平等条约有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《五口通商章程》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《望厦条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《黄埔条约》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国的新兴阶级是（<b class="answer">BD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">工人阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资产阶级</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国工人阶级的主要来源是（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">破产失业农民</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">手工业者</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">商人</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">城市贫民</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国资产阶级的来源有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">买办</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">商人</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">地主</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">官僚</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国的主要矛盾是（<b class="answer">AC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">帝国主义和中华民族的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">地主阶级和农民阶级的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">封建主义和人民大众的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">工人阶级和资产阶级的矛盾</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;近代中国的反侵略战争失败的根本原因在于（<b class="answer">BD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">抵抗决心不强</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">经济技术落后</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">军队战斗力差</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">社会制度腐败</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;鸦片战争以后，随着外国资本——帝国主义的入侵，中国社会发生的根本性的变化是（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">独立的中国逐步变成了半殖民地的中国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">封建的中国逐步变成了半封建的中国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">独立的中国逐步变成了殖民地的中国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">封建的中国逐步变成了资本主义的中国</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;改良主义道路在中国走不通的原因在于（<b class="answer">AC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">帝国主义不会自动放弃在中国攫取的特权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">革命是最快解决问题的方式</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">封建势力不会自动放弃自己控制的政权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">近代的改良主义运动统统失败</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国古代物质文明和精神文明丰富多彩、灿烂辉煌。古代中国的科学技术长期处于世界领先地位，在天文学、数学、农学、医药学等领域，取得过许多卓越成就。尤其是（<b class="answer">ABCD</b>）四大发明，更是中华民族奉献给人类的杰出科技成果。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">造纸术</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">印刷术</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">火药</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">指南针</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在两大历史任务的关系问题上，正确的理解是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">争取民族独立、人民解放和实现国家富强、人民富裕既互相区别又互相紧密联系。</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">争取民族独立、人民解放和实现国家富强、人民富裕互为前提。</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">争取民族独立、人民解放为实现国家富强、人民富裕创造前提，开辟道路。</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">只有争得民族独立、人民解放以后，中国人民才能集中力量进行现代化建设，才能实现国家的富强、人民的富裕。</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;两千多年来，国家的统一和各民族间经济文化的紧密联系和相互交流是中国历史的主流。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国封建社会的社会结构的特点是族权和政权相结合的封建宗法等级制度。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;鸦片战争后，中国社会经济仍然是封建经济。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国沦为半殖民地半封建社会的直接原因在于外国资本主义的入侵。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国的半殖民地半封建社会是一种从属于资本主义世界体系的畸形的社会形态。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;西方列强侵略中国的目的是要帮助中国走出封建社会，发展资本主义。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;近代中国表面上维持着独立国家和政府的名义，实际上已经丧失了拥有完整主权的独立国的地位。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在近代中国，资本主义经济发展迅速，逐渐成为中国社会经济的主要形式。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国的封建势力日益衰败并同外国侵略势力勾结，是近代中国发展的最大障碍。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国农民阶级是中国民主革命的主力军，是近代中国最革命的阶级。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国工人阶级最早产生于外国资本主义在华企业中，先于中国的资产阶级产生。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国的资产阶级也是近代中国新产生的阶级，分官僚买办资产阶级和民族资产阶级。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;必须首先进行反帝反封建的民主革命，才能争得民族独立和人民解放。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;革命和现代化是背道而驰的，两者无法相容。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;民族资本主义经济是近代中国社会经济的主要形式。 [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;在近代中国，侵占中国领土最多的国家是（<b class="answer">C</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">英国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">日本</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">沙俄</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">法国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1895年，日本强迫清政府签订（<b class="answer">C</b>），割去台湾全岛及所有附属岛屿和澎湖列岛。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;规定外国军队有权在中国领土上驻兵的条约是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在近代，通过战争向中国勒索赔款最多的国家是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">英国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">俄国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">法国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">日本</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在近代中国，规定中国向列强支付赔款最多的条约是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;火烧圆明园发生在（<b class="answer">B</b>）期间。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">鸦片战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">第二次鸦片战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">甲午战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八国联军侵华战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;规定外国人在中国享有领事裁判权的条约是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《五口通商章程》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《黄埔条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《天津条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;规定允许外国在中国办工厂的条约是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国近代中国人民第一次大规模的反侵略武装斗争是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">三元里人民抗英斗争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">太平天国农民战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">义和团运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">洋务运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;被称为“中国不败而败的战争是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">鸦片战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第二次鸦片战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中法战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中日甲午战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;帝国主义对中国的争夺和瓜分的图谋，在（<b class="answer">C</b>）后达到高潮。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">鸦片战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第二次鸦片战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">甲午战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八国联军侵华战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;列强未能瓜分中国的最根本原因是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">列强之间的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国际舆论的谴责</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中华民族不屈不饶的反侵略斗争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">清政府的妥协</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在粉碎帝国主义列强瓜分中国的斗争中发挥了重大的历史作用的事件是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">义和团运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">戊戌维新</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">太平天国运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;被誉而“中国近代睁眼看世界第一人”的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">林则徐</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">魏源</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">李鸿章</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“师夷长技以制夷”这一思想出自（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《四洲志》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《海国图志》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《资政新篇》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《盛世危言》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代以来中国反侵略战争失败的最根本原因是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">帝国主义的强大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">社会制度的腐败</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济技术的落后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国军队军事素质低下</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国人民的民族意识开始普遍觉醒是在（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">鸦片战争以后</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第二次鸦片战争以后</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中日甲午战争以后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八国联军侵华战争以后</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1895年，响亮喊出“救亡”口号是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">严复</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">孙中山</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（<b class="answer">C</b>）翻译的《天演论》中的社会进化论思想，为中国人民的危机意识和民族意识提供了理论根据。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">严复</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">孙中山</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“振兴中华”的口号的提出者是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">孙中山</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">周恩来</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">鲁迅</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;基督教在中国设立的最大出版机构广学会发行的报刊是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中国丛报》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北华捷报》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《字林西报》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《万国公报》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;造成近代中国贫穷落后的根本原因是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国落后的经济制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国落后的政治制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">资本—帝国主义的侵略</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">统治集团的腐败</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;到（<b class="answer">D</b>）的订立为止，庞杂的不平等条约体系已宣告中国半殖民地社会的完全形成。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《天津条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;帝国主义侵略中国的最终目的，是要（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">帮助中国发展资本主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">传播西方先进文化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">为本国与中国同步发展</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">瓜分中国，灭亡中国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;德国元帅瓦德西说：“无论欧、美、日本各国，皆无此脑力与兵力，可以统治此天下生灵四分之一，故瓜分一事，实为下策。”这表明（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">帝国主义已放弃灭亡中国的图谋</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">帝国主义之间相互勾结</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">帝国主义之间的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">帝国主义瓜分中国图谋的破产</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;帝国主义的经济侵略 （<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">促进了中国民族工商业的发展</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">对中国农业经济造成严重破坏</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">促进了中国在经济上具有独立性</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">促进了中国经济发展的地区均衡发展</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“三国干涉还辽”中的三国不包括（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">美国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">法国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">俄国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">德国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;不含有割地内容的不平等条约是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;资本——帝国主义对中国的侵略，首先和主要的是进行（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">军事侵略</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">政治控制</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济掠夺</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">文化渗透</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下面表述不正确的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国人民的反侵略战争，激起了帝国主义列强的侵华野心。</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国人民的反侵略战争，使我们的国家和民族历尽劫难、屡遭侵略而不亡。</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国人民的反侵略战争表现出来的爱国主义精神，铸成了中华民族的民族魂。</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国人民反侵略战争的失败，从反面教育了中国人民，极大地促进了中国人的思考、探索和奋起，反侵略战争的过程，是中华民族逐步觉醒的过程。</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;资本——帝国主义对中国军事侵略的手段主要有（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">发动战争，屠杀人民</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">操纵中国的经济命脉</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">勒索赔款，抢夺财富</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">侵占领土，划分势力范围</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;晚清时期，在抗击外国侵略的战争中，许多爱国官兵英勇献身，其中鸦片战争期间有（<b class="answer">BC</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">林则徐</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">关天培</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">陈化成</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">邓世昌</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;俄国主要通过（<b class="answer">ABCD</b>），侵占中国领土150万平方公里。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《瑷珲条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《勘分西北界约记》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《改订伊犁条约》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;关于租借地，下列说法正确的是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">1898年，德国强租山东的胶州湾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1898年，沙俄强租旅顺口、大连湾及其附近海面</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1898年，英国强租山东的威海卫及香港对岸的新界</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1899年，法国强租广东的广州湾及其附近海面</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;关于势力范围的划分，下列说法正确的有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">德国把山东划为其势力范围</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">沙俄以长城以北为其势力范围</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">英国以长江流域为其势力范围</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">法国把广东、广西、云南作为其势力范围</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;含有赔款内容的不平等条约有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《南京条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《北京条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《马关条约》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《辛丑条约》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;参加八国联军侵华战争的国家除了俄、日、英、法、美外，还有（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">奥地利</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">意大利</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">荷兰</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">德国</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;资本——帝国主义列强对中国进行经济掠夺的主要方式有（<b class="answer">ABCD</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">控制中国的通商口岸</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">掠夺中国的关税自主权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">实行商品倾销和资本输出</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">操纵中国的经济命脉</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;资本——帝国主义列强操纵中国经济命脉的主要方式有（<b class="answer">ABC</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">垄断近代工业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">设立银行</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">控制现代交通运输业</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">进行商品倾销</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;早期维新思想的代表人物包括（<b class="answer">BC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">林则徐 魏源</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">王韬 薛福成</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">马建忠 郑观应</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">李鸿章曾国藩</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;帝国主义对中国进行文化渗透的主要目的是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">宣扬殖民主义奴化思想</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">麻醉中国人民的精神</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">摧毁中国人的自尊心和自信心</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">灌输民主思想</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;19世纪70-80年代，中国陷入“边疆危机”，主要表现为（<b class="answer">ABCD</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">英国从印度侵入西藏</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">英国从缅甸入侵云南</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">法国从越南侵犯广西</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">俄国从中亚入侵新疆</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国近代反侵略斗争失败的主要原因是（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会制度的腐败</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">经济技术落后</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">敌人过于强大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有革命的领导力量</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;甲午战争后帝国主义掀起了瓜分中国的狂潮，主要形式为（<b class="answer">BD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">扶植收买代理人</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">租借港湾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">迫使中国举借外债</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">划分势力范围</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;列强最终没有瓜分中国的原因是（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">列强之间的矛盾和互相制约</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中华民族进行的不屈不挠的反侵略斗争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">清政府的存在有利于列强实现自己的利益</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">部分列强企图独占中国</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;民族危机激发了中华民族的觉醒，增强了中华民族的凝聚力。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;近代中国海关的行政权虽然掌握在外国人手里，但它仍是中国抵制外国进行经济侵略的重要工具。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;英国侵略中国的目的在于攫取经济利益，并有领土要求。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;外国人不仅仅在租界里享有领事裁判权。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;根据有关不平等条约，帝国主义有权在中国领土上驻兵。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;近代战争赔款直接破坏和阻碍中国的经济发展。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;近代外国在中国的投资相当部分是利用战争赔款等方式掠自中国。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;帝国主义列强通过对中国铁路的控制来确立和扩大自己在中国的势力范围。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;帝国主义列强对中国进行文化渗透的目的是加速中国文明进程。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;资本——帝国主义列强在中国的统治方式“是以华制华”。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;太平天国运动是中国近代史上中国人民第一次大规模的反侵略武装斗争。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;魏源提出了“师夷长技以制夷”的思想，所以是近代中国睁眼看世界的第一人。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;帝国主义列强之间的矛盾和妥协，是瓜分中国的阴谋破产的根本原因。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;帝国主义列强不能灭亡和瓜分中国，最根本的原因，是中华民族进行的不屈不饶的反侵略斗争。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;义和团运动貌似爱国，实则祸国、害国。 [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;太平天国农民战争的领导人是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">林则徐</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洪秀全</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">李鸿章</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;发动太平天国农民起义的宗教组织是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">白莲教</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">基督教</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">拜上帝教</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">天地会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国农民战争历时（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">10年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">14年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">18年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">20年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;最能体现太平天国社会理想和农民起义特色的文件是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《海国图志》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《天朝田亩制度》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《资政新篇》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《救亡决论》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国运动面临的以往农民运动从未遭遇的新情况是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">领导阶层的迅速腐化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">流动作战没有固定根据地</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中外反动势力的联合绞杀</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有正确的指导思想</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国历史上第一个比较系统的发展资本主义的方案是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《海国图志》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《天朝田亩制度》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《资政新篇》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《救亡决论》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务运动发端于（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">19世纪40年代</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">19世纪60年代</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">19世纪80年代</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">20世纪20年代</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务派代表的社会阶层是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">官僚资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">民族资产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;19世纪60年代后，洋务派开展洋务运动的指导思想是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">师夷长技以制夷</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中学为体，西学为用</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">自强、求富</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">托古改制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务派最先兴办的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">民用工业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">军事工业</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">新式学堂</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">新式军队</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务派创办的民用企业大多数采用（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">官办</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">商办</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">官督商办</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">官商合办</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌维新运动是一次（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">资产阶级改良运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资产阶级革命运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">地主阶级改良运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">地主阶级革命运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌维新运动的核心领导人是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">谭嗣同</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">严复</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1895年，康有为组织发动了（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">金田起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">公车上书</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">百日维新</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州起义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌维新运动的高潮是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">金田起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">公车上书</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">百日维新</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州起义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;百日维新发生于（<b class="answer">B</b>）时期。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">洋务运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">戊戌变法</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">新文化运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌变法中，表示要为变法而流血牺牲的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">谭嗣同</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">刘光第</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌变法期间，资产阶级维新派把实现变法的希望寄托在（<b class="answer">B</b>）身上。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">李鸿章</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">光绪皇帝</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">慈禧太后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">袁世凯</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“以中国之伦常名教为原本，辅以诸国富强之术”属于（<b class="answer">B</b>）的主张。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">维新派</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洋务派</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">革命派</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">立宪派</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌维新前维新派与守旧派的这场论战，实质上是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">资产阶级思想与封建主义思想在中国的第一次正面交锋</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">守旧派与洋务派之间的一次论战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">保皇派与革命派的一次论战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">帝党与后党的权力之争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国民族资产阶级登上政治舞台的第一次表演是在（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">洋务运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">戊戌维新</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">五四运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;太平天国由盛转衰的转折点是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">天京事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">永安建制</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">北伐、西征</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">定都南京</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;对洋务派兴办洋务事业的指导思想最先作出比较完整表述的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">冯桂芬</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">李鸿章</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">曾国藩</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">奕昕</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在近代不是对国家出路进行早期探索的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">太平天国农民战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">洋务运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">维新运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">新文化运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1853年3月，太平军占领南京，定为首都，改名为（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">西京</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">北京</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">天京</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">金陵</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌政变后，新政措施大都被废除，被保留下来的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">京师大学堂</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">准许旗人自谋生计</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">改革财政</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">改革行政机构</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务运动时期，主要培养翻译人才的学校是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">京师大学堂</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工艺学堂</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">船政学堂</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">京师同文馆</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;洋务运动后期，洋务派官僚张之洞反复强调封建的纲常伦理不可变的著述是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《劝学篇》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《醒世恒言》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《盛世危言》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《天演论》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;戊戌维新时期，康有为主持的重要学堂是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">京师大学堂</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">广方言馆</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">时务学堂</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">万木草堂</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列人员中，不属于“戊戌六君子”中的人物是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">梁启超</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">杨锐</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">谭嗣同</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">刘光第</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;属太平天国政权提出的社会发展方案是（<b class="answer">BD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《盛世危言》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《天朝田亩制度》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《海国图志》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《资政新篇》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列关于《天朝田亩制度》的说法，正确的有（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">主张平均分配土地，从根本上否定了封建地主的土地所有制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">主张发展资本主义，直接推动了民族资本主义的诞生</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">是一个以解决土地问题为中心的社会改革方案</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">没有超出农民小生产者的狭隘眼界，是一种绝对平均主义思想的体现</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;属于太平天国后期主要领导人的是（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">杨秀清</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">李秀成</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">洪仁玕</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">陈玉成</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;太平天国的历史意义有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">沉重打击了封建统治阶级，强烈撼动了清政府的统治根基</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">比较完整地表达了千百年来农民对拥有土地的渴望，是中国旧式农民战争的最高峰</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">冲击了孔子和儒家经典的正统权威，在一定程度是削弱了封建统治的精神支柱</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">有力打击了外国侵略势力，冲击了西方殖民主义在亚洲的统治</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;太平天国的失败原因在于（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">他们不是新的生产力和生产关系的代表,无法克服小生产者所固有的阶级局限性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中外反动势力的联合绞杀</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">他们无法从根本上提出完整的正确的政治纲领和社会改革方案</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">他们无法制止和克服领导集体自身腐败现象的滋长和长期保持领导集团的团结</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;太平天国的兴起和失败说明了（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">农民具有伟大的革命潜力</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">单纯的农民战争不可能完成争取民族独立和人民解放的历史任务</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">农民自身不能担负起领导反帝反封建斗争取得势力的重任</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">农民阶级是无产阶级最可靠的革命同盟军</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列人物，属于洋务派的有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">奕</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">李鸿章</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">曾国藩</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">张之洞</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;洋务派兴办的洋务事业有（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">兴办近代企业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">建立新式海陆军</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">创办新式学堂，派遣留学生</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">设议院，进行官制改革</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;洋务运动具有（<b class="answer">ABC</b>）等特点。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">依赖性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">封建性</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">洋务企业的管理具有腐朽性</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;洋务运动的历史作用在于（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">在客观上对中国的早期工业和民族资本主义的发展起了某些积极作用。</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">开始了近代教育，翻译了一批西学书籍，给当时中国带来了新知识，使人们开阔了眼界。</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">有利于社会风气和价值观念的转变。</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">初步达到了“自强”、“求富”的目标。</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;戊戌维新运动是一场（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">爱国救亡运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">政治改良运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济改革运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">思想启蒙运动</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;戊戌维新运动的代表人物有（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">谭嗣同</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">袁世凯</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">梁启超</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;顽固派和维新派论战的焦点是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">要不要变法</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">要不要发展资本主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">要不要兴民权、设议院，实行君主立宪</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">要不要废八股、改科举和兴西学</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;资产阶级维新派宣传维新主张的行动主要有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">向皇帝上书</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">著书立说</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">办学会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">设学堂</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;戊戌维新运动的失败，主要是由于维新派自身的局限和以慈禧太后为首的强大的守旧势力的反对，其中维新派的局限性体现在（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">不敢否定封建主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">对帝国主义抱有幻想</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">害怕人民群众</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民族资产阶级力量弱小</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;农民是外国侵略者和本国封建统治者主要的压迫对象，也是反抗外国侵略者和本国封建统治者的主要力量。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;太平天国农民起义首先爆发于广东地区。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《天朝田亩制度》实际上是一个以解决土地问题为中心的比较完整的社会改革方案。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《天朝田亩制度》的平分土地方案在并没有得到了贯彻和执行。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《资政新篇》是中国近代历史上第一个比较系统的发展资本主义的方案。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《天朝田亩制度》的颁布使太平天国起义具有了不同于以往农民战争的新的历史特点。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;太平天国把信奉上帝的西方人视为“洋兄弟”，说明他们对于西方资本主义侵略者缺乏理性认识。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;洋务运动是在清政府镇压太平天国的过程中和第二次鸦片战争结束后兴起的。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;洋务派兴办近代企业，目的是使中国朝着资本主义方向发展。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国近代教育始于维新运动时期。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;戊戌维新是一场资产阶级性质的政治改良运动，更是一场思想启蒙运动。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;甲午战争中北洋海军的全军覆没，标志着洋务运动的失败。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;戊戌维新运动的兴起说明中国资产阶级开始登上政治舞台。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;百日维新中，光绪皇帝采纳了维新派提出的开议会、实行君主立宪等政治主张。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;戊戌维新运动的失败，说明在半殖民地半封建的中国，企图通过统治者走自上而下的改良的道路，是根本行不通的。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;说三民主义是比较完整的资产阶级民主革命纲领，主要是因为它（<b class="answer">A</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">表达了资产阶级在政治和经济上的要求</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">提出了彻底的反帝反封建的革命要求</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">适应了近代中国历史发展的要求</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">提出了平均地权以解决农民土地问题</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1903年6月，（<b class="answer">C</b>）在上海《苏报》发表《驳康有为论革命书》，批驳康有为所谓“中国之可立宪，不可革命”的谬论</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陈天华</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">邹容</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">章炳麟</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">梁启超</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1903年邹容写的（<b class="answer">C</b>）是中国近代史上第一部宣传革命和资产阶级共和国思想的著作</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《猛回头》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《警世钟》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《革命军》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《驳康有为论革命书》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国近代第一个资产阶级革命政党是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">强学会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">兴中会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">同盟会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民党</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;武昌起义的主力是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">同盟会会员</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">留学生</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">新军</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民大众</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;清末“预备立宪”的根本目的在于（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">仿效欧美政体</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发展资本主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">延续反动统治</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">缓和阶级矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1905年11月，孙中山在《民报》发刊词中将中国同盟会的政治纲领概括为（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">创立民国、平均地权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">驱除鞑虏、恢复中华、创立合众政府</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民族主义、民权主义、民生主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">联俄、联共、扶助农工</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;武昌起义前同盟会领导的影响最大的武装起义是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">南昌起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">萍浏醴起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">镇南关起义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">黄花岗起义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;辛亥革命爆发前,长期深入湖北新军做宣传组织工作的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">日知会</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">兴中会</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">文学社</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">同盟会</td></tr><tr><td style="text-align:center">⑤</td><td style="text-align:left">共进会</td></tr><tr><td style="text-align:center">⑥</td><td style="text-align:left">保路同志会</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">①⑤</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">④⑥</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">③④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">③⑤</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;武昌起义的导火线是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">黄花岗起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">萍浏醴起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">保路运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州起义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1912年1月1日，孙中山在（<b class="answer">B</b>）宣誓就职，宣告中华民国正式成立</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">北京</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">南京</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">广州</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">上海</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国历史上第一部具有资产阶级共和国宪法性质的法典是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《钦定宪法大纲》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《中华民国临时约法》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《中华民国约法》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《试训政纲领》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中华民国元年是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1910年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1911年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1912年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1913年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;辛亥革命取得的最大成就是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">推翻了封建帝制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">促进了资本主义的发展</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">使人民获得了一些民主自由权利</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">打击了帝国主义的殖民势力</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于辛亥革命历史意义的表述，不正确的一项是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">推翻了清王朝，结束了中国两千多年的封建制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">打击了帝国主义侵略势力，使其难以在中国建立稳定的统治秩序</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">为民族资本主义的发展创造了条件</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">使民主共和观念深入人心</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;辛亥革命的失败是指（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">没有完成反帝反封建的任务</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">没有推翻清政府的统治</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">没有打击帝国主义的在华势力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有促进中国革命的向前发展</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1912年8月，宋教仁为推行政党政治和建立责任内阁制，以同盟会为基础，联合其他党派在北京组成（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中华革命党</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国民党</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">统一共和党</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民共进会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;二次革命失败的最重要原因是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">革命党人军队不足</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国民党力量涣散</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">袁世凯军队强大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">袁世凯得到帝国主义的支持</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1914年7月孙中山在东京成立了（<b class="answer">D</b>），组织武装反袁</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国同盟会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国民党</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">兴中会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中华革命党</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1915年，（<b class="answer">C</b>）在云南率先举起反袁护国的旗帜，发动护国战争</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">黄兴</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">段祺瑞</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">蔡锷</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">孙中山</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;资产阶级革命派开展护国运动的主要原因是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">袁世凯指使刺杀宋教仁</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">袁世凯强迫国会选举他为正式大总统</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">袁世凯解散国会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">袁世凯复辟帝制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1840年至1919年期间，比较完全意义上的资产阶级民主革命是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">辛亥革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">戊戌维新运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">太平天国革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">义和团运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;袁世凯为复辟帝制不惜出卖主权，与日本签订了卖国的（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中日共同防敌军事协定</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">承认外蒙自治</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“二十一条”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">出让川汉、粤汉铁路</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;袁世凯死后，中国出现军阀割据局面的社会根源是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">半殖民地半封建的社会性质</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">军阀拥有武装</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">帝国主义扶植军阀</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">军阀派系之间的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;辛亥革命的中坚力量是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资产阶级工商业者</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">华侨</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">会党</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">以留学生为骨干的青年知识分子</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;武昌起义后建立的湖北军政府是一个（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资产阶级革命派完全掌权的革命政权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资产阶级革命派建立的第一个地方革命政权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">包括革命派、立宪派、和旧官僚的联合政权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">立宪派占主体的资产阶级政权</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1917年孙中山针对（<b class="answer">D</b>）指出“以假共和之面孔，行真专制之手段”，并举起“护法”旗帜</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">黎元洪</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">张勋</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">张作霖</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">段祺瑞</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;南京临时政府中占领导和主体地位的派别是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资产阶级维新派</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资产阶级保皇派</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">资产阶级立宪派</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资产阶级革命派</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;辛亥革命爆发以后，英国乘机策动叛乱，企图分裂我国的（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">西藏</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新疆</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">蒙古</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">外蒙古</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国资产阶级领导的变法与革命失败的根本原因是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">传统儒家思想的影响</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">封建顽固势力的强大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">帝国主义的破坏</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">民族资产阶级自身的软弱性和妥协性</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;清末“新政”的内容包括（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">设立商部、学部、巡警部等中央行政机构</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">裁撤绿营，建立新军</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">颁布商法商律，奖励工商</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">颁布新的学制</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;20世纪初，宣传资产阶级民主革命思想的主要人物有（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">章炳麟</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">邹容</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">孙中山</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">陈天华</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在资产阶级革命思想的传播过程中，陆续成立的革命团体有（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">华兴会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">科学补习所</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">光复会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">岳王会</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;同盟会的政治纲领是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">驱除鞑虏</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">恢复中华</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">创立民国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">平均地权</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国同盟会纲领中涉及到的问题有（<b class="answer">ABD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">推翻满洲贵族的统治</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">建立资产阶级共和国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">驱逐占据中国的帝国主义势力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">提出了资本主义的土地纲领</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;《临时约法》的内容包括（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中华民国主权属于国民全体</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国内各民族一律平等</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">参议院对临时大总统有弹劾权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">增设国务总理，作为政府首脑</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;南京临时政府的局限性表现为（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">承认清政府与列强所订的一切不平等条约和一切外债有效</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">没有提出任何可以满足农民土地要求的政策和措施</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">维护封建土地制度以及官僚、地主所占有的土地财产</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">主体是资产阶级革命派</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;袁世凯篡夺辛亥革命胜利果实的主要原因是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">帝国主义的支持</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国内封建势力的支持</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">袁世凯拥有强大的军事力量</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资产阶级的软弱性</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;以袁世凯为首的北洋军阀投靠帝国主义的表现为（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">出卖路权、矿权，大肆借款，并签订众多不平等条约</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">与列强签订“善后大借款”合同，使列强控制和监督中国财政</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">基本接受日本提出的严重损害中国权益的“二十一条”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">以各种手段兼并土地，对农民征收苛捐杂税</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;革命党人为推翻北洋军阀而进行的斗争有（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">黄花岗起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">二次革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">护国运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">护法运动</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列运动中，孙中山亲自参加或领导的是（<b class="answer">BC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">武昌起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">二次革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">护法运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">护国运动</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1905年至1907年间，资产阶级革命派与改良派论战的主要议题是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">要不要以革命手段推翻清王朝</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">要不要推翻帝制，实行共和</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">要不要社会革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">要不要废科举和兴西学</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;为了防范袁世凯的独裁野心，1912年2月14日，临时大总统孙中山在给临时参议院的辞职咨文中提出辞职的附加条件是（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">袁世凯承认共和</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">临时政府设在南京</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">新总统到南京就职</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">新总统要遵守《中华民国临时约法》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列属于资产阶级革命派的人物有（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">康有为</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">黄兴</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">秋瑾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">宋教仁</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;辛亥革命失败的原因主要包括（<b class="answer">ABCD</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">没有彻底的反帝反封建纲领</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">不能充分发动和依靠群众</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">不能建立坚强的革命政党</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中外反动势力勾结，过于强大</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;科举制废除于洋务运动时期。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;兴中会是中国第一个资产阶级革命团体。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;谭嗣同是辛亥革命时期的著名革命者。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;20世纪初期推动中国发生历史性巨变的主要代表是孙中山。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;辛亥革命失败的根本原因在于革命党的妥协退让和袁世凯的势力强大。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;北洋军阀是中国近代史上代表大地主和买办资产阶级利益的军事政治集团。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;帝国主义与以袁世凯为代表的大地主大买办势力以及旧官僚、立宪派一起勾结起来，从外部和内部绞杀了辛亥革命。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《辛丑条约》的签订标志着清政府已经成为“洋人的朝廷”。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;革命派与改良派辩论的焦点是要不要推翻帝制，实行共和。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在进行革命前，孙中山曾北上向李鸿章上书，寄希望进行自上而下的改革， [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;资产阶级革命政党中国同盟会的机关报是《新民丛报》 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1911年4月27日发生的“黄花岗起义”的地点在黄花岗。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;组织“护国军”，发起护国运动的人是黄兴。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在资产阶级民主革命思潮广泛传播、革命形势日益成熟的时候，康有为、梁启超、谭嗣同等人坚持走改良道路，反对用革命手段推翻清朝统治。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;旧民主主义革命终结的标志是“二次革命”。 [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;新文化运动兴起的标志是（<b class="answer">C</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">蔡元培“兼容并包”办学方针的采用</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">民主与科学口号的提出</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">陈独秀在上海创办《青年》杂志</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">李大钊发表《庶民的胜利》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;前期新文化运动与资产阶级改良派、革命派思想相比，就其作用而言，主要“新”在（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">传播了资产阶级民权平等思想</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">动摇了封建正统思想的统治地位</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">绝对肯定了西方文化的进步性</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">深入研究和传播了马克思主义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东在《反对党八股》中指出，前期新文化运动的领导人物“对于现状，对于历史，对于外国事物，……所谓坏就是绝对的坏，一切皆坏；所谓的好，就是绝对的好，一切皆好”。造成这种状况的主要原因是他们（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">脱离广大人民群众</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">一定程度上受到封建思想的束缚</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">没有马克思主义的批判精神</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有接受俄国十月革命的经验</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新文化运动对中国革命产生的最深刻的影响是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">动摇封建思想的统治地位</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">弘扬了民主和科学，推动了自然科学发展</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">对五四运动的爆发起了宣传作用</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">后期传播社会主义思想，成为知识分子拯救国家改造社会的思想武器</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在20世纪第二个十年，堪称中国历史转折之里程碑的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">武昌起义、中华民国建立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《新青年》创办、武昌起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">五四运动、《新青年》创办</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中华民国建立、五四运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;最能体现五四运动性质的口号是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">废除“二十一条”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">还我青岛</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">外争国权，内惩国贼</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">拒绝在和约上签字</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在民主革命时期，知识分子走向社会、与工农群众结合开始于（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">戊戌变法时期</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">五四运动时期</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">五卅运动时期</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">一二·九运动时期</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在中国大地上率先举起马克思主义旗帜的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">李大钊</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">陈独秀</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">张国焘</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">毛泽东</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志着中国新民主主义革命开端的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">新文化运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">五四运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国共产党的诞生</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;著名学者胡绳说：“近代中国在20世纪初处于一个社会大变革时期，中国民主主义革命向新民主主义革命转折，这是诸多因素共同作用的结果。”下列诸多因素中起决定作用的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国民族资本主义的发展</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国无产阶级的壮大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">俄国十月革命的影响</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">马克思主义的传播</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1920年8月，陈独秀、李汉俊、李达等人在（<b class="answer">B</b>）成立了中国工人阶级政党最早的组织。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">北京</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">上海</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武汉</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;代表上海中国共产党的早期组织的机关理论刊物是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《共产党》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《劳动界》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《新青年》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《劳动音》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党早期组织领导的第一个工会是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">上海机器工会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">长辛店工人俱乐部</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武汉工会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">长沙工会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1921年9月，中国共产党在（<b class="answer">C</b>）领导创建了第一个农民协会。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">广东海丰县赤山约</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">广东陆丰县</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">浙江萧山县衙前村</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">湖南衡山县白果</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党第一次提出明确的反帝反封建的民主革命纲领是在（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《新青年》创刊号上</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共“一大”会议上</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中共“二大”会议上</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共“三大”会议上</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党正式决定与国民党合作是在（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共“一大”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共“二大”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“二七”罢工后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中共“三大”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;第一次国共合作采取了共产党以个人身份加入国民党的“党内合作”方式，最早提出这种方式的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">共产国际</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国共产党</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">孙中山</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">廖仲恺</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;对第一次国共合作起了促进的共产国际派遣人员是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">马林</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">越飞</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">鲍罗廷</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">李德</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“中国现有的各政党，只有国民党比较是革命的民主派，比较是真的民主派”，中共提出这一论断的主要依据是当时（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民党代表资产阶级和小资产阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国民党建立了革命根据地和军队</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">其领袖孙中山站在无产阶级立场上</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">孙中山领导国民党进行不屈不挠的反帝反封建斗争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;宋庆龄说：“孙中山和共产党之间具有历史意义的合作不是偶然的，它是当时的国际局势和中国本身的内部条件造成的。”这里说的“内部条件”，主要是指（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">一战后，中国民族工业重新受到列强压制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“打倒列强，除军阀”成为全国人民的共同心愿</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国共产党总结了经验教训正在积极寻找同盟者</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民党是中国各政党中比较革命的民主派</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;民主革命者吴玉章说：“从辛亥革命起，我们为了推翻清朝而迁就袁世凯，后来为了反对北洋军阀而利用西南军阀，再后来为了抵制西南军阀，而培植陈炯明，最后陈炯明叛变了。这样看来，从前的一套革命老方法非改变不可，我们要从头做起”。这表明资产阶级革命党人要改变（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">革命纲领</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">革命依靠力量</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">革命对象</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">革命方式</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;孙中山说：“国民党在堕落中死亡，因此要救活它，就需要新鲜血液。”为此他采取的主要措施是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">接受中共反帝反封建的主张</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">重新解释三民主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">以党内合作方式同共产党合作</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">建立黄埔军校，培养新式军事干部</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;革命统一战线正式建立的标志是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国民党“一大”的召开</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国民党改组</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">三民主义发展为新三民主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共“三大”的召开</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新三民主义之所以成为第一次国共合作的政治基础，主要原因是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">它与中国共产党的最高纲领一致</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">它适应了时代发展的潮流</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">它与中共的民主革命完全一致</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">它与中共民主革命纲领若干原则一致</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1924—1926年的中国国民党是一个（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">民族资产阶级的政党</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">官僚资产阶级的政党</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">工人、农民和小资产阶级的政治联盟</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">工人、农民、城市小资产阶级和民族资产阶级的革命联盟</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1925年5月，以（<b class="answer">D</b>）为起点，国共两党掀起了全国范围的大革命浪潮。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民党一大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">成立黄埔军校</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">广州国民政府成立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">五卅运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东发表《湖南农民运动考察报告》，热情歌颂农民运动“好得很”，其最主要的原因是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">促进了大革命运动的高涨</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">打击了几千年专制统治的基础</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">提出了“一切权力归农会”的口号</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">体现了农民觉悟的提高</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;北伐战争对准的军阀是（<b class="answer">A</b>）①吴佩孚 ②孙传芳 ③张作霖 ④段祺瑞</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">①②③</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">②③④</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">①③④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">①②③④</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;近代以来中国人民第一次从帝国主义手中收回被侵略的一些侵略权益是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">关税自主权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">片面最惠国待遇</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">领事裁判权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">汉口、九江英租界</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;按因果关系排列为（<b class="answer">B</b>）①国民政府从广州迁往武汉；②吴佩孚主力被消灭；③第一次国共合作实现；④广东革命根据地巩固；⑤全歼陈炯明叛军</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">①②③④⑤</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">③⑤④②①</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">③④⑤①②</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">②①③⑤④</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;对1924－1927年大革命性质的正确表述是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资产阶级领导的反帝反封建的资产阶级民主革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">无产阶级领导的新民主主义革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">革命统一战线领导的反帝反封建的民主主义革命</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共领导的无产阶级革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民大革命取得的最突出的成就是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">促使工农运动蓬勃开展</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">进行了北伐战争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">基本推翻了北洋军阀的统治</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">扩大了中国共产党在群众中的影响</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;第一次国共合作终于全面破裂的历史事件是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“四·一二”政变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">马日事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">夏斗寅叛乱</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“七·一五”政变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列国民党右派制造的反革命活动（事变），其先后顺序是（<b class="answer">D</b>）①“七·一五”反革命政变 ②“四·一二”反革命政变 ③中山舰事件 ④西山会议</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">①②③④</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">②③①④</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">④①②③</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">④③②①</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;辛亥革命和国民大革命的失败是指（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">没有完成反帝反封建的任务</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">被反动势力篡夺了革命果实</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">没有建立真正的资产阶级共和国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有促进中国革命的向前发展</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列观点中，反映出中国共产党在第一次国内革命战争中失败的主观原因是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">目前，中国民族革命运动的发展，重要的是进行土地革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">此后我们的人力务必用在民众方面，万勿参加政府工作</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">共产党员加人国民党，而兼跨固有的党籍，是想对国民革命和国民党有所贡献</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">在半殖民地半封建的条件下，中国人民迫切需要的并不是进行社会主义革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;大革命的失败，给中共最深刻的教训是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">无产阶级必须掌握革命领导权和革命武装</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">要建立巩固的工农联盟</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">要警惕统一战线内部的野心家</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">要制定彻底的革命纲领</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年中共“五大”的一个文件认为：“自五卅运动起……我们党只注意了反帝反封建斗争，而忽略与资产阶级争夺领导权的斗争……这段时间本党没有正确政策”，这段话（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">错误攻击党的统一战线政策</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">强调反对资产阶级具有“左”的错误</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">批评了党忽视统一战线领导权的错误</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">贬低了反帝反军阀斗争的重要性</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;陈独秀指出：“对于与此新社会新国家，新信仰不可相容之孔教不可不有彻底之觉悟猛通之决心。不塞不流，不止不行”。这句话说明（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">新文化运动把斗争目标直指孔教</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">儒家思想束缚了民主和科学的传播</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">陈独秀认为儒家思想和民主政治完全对立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">新文化运动有对东方文化全盘否定的倾向</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新文化运动中，陈独秀提出“德先生”和“赛先生”口号的进步意义体现在（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反对封建专制统治</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">反对愚昧，促进科学事业的发展</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">促进中国的富强</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">敢于向两千年来神圣不可侵犯的封建礼教进行自觉挑战</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新文化运动的主要阵地有（<b class="answer">AD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《新青年》杂志</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《时务报》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《中外纪闻》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">北京大学</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;陈独秀被毛泽东称为"五四运动的总司令"，主要因为他（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">最早宣传十月革命和马克思主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">是五四以前的新文化运动的精神领袖</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">领导了新文化运动，为五四运动作了思想准备</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">联系进步青年和社团，指导和推动运动发展</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;五四运动与以往的民主主义革命的显著区别是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">有广泛的群众基础</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">促进了马克思主义在中国的传播及其与中国工人运动的结合</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">工人阶级发挥了主力军作用</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">在俄国十月革命影响下发生的</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列说明五四运动是中国新民主主义革命开端的是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">无产阶级以独立姿态登上政治舞台</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">发生在俄国十月社会主义革命之后，属于世界无产阶级革命一部分</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">是反帝反封建的群众运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">具有初步共产主义思想的知识分子起了领导作用</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;五四运动后，马克思主义在中国传播的特点是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">进步知识分子起了推动作用</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">马克思主义宣传与工人运动相结合</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">马克思主义同非马克思主义展开斗争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">马克思主义成为新文化运动的主流</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国早期马克思主义思想运动的特点有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">重视对马克思主义基本理论的学习，拥有马克思主义者的队伍</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">明确地同第二国际的社会民主主义划清界限</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">注意从中国的实际出发，学习、运用马克思主义的理论</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">开始提出知识分子应当同劳动群众相结合的思想</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党早期组织的活动有（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">研究和宣传马克思主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">到工人中去进行宣传和组织工作</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">进行关于建党问题的讨论和实际组织工作</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">组织军队和进行议会斗争</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;各地共产党的早期组织创办了的专门供工人阅读的马克思主义启蒙教育的刊物有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《劳动界》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《劳动音》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《工人月刊》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《济南劳动月刊》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党成立后，“中国革命的面貌焕然一新”，其“新”主要表现在（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">以马克思主义为指导</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">采取群众路线的方法</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">提出彻底的反帝反封建的纲领</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">以社会主义、共产主义为远大目标</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中共“二大”制定的当前阶段的民主革命纲领包括（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">打倒军阀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">推翻帝国主义压迫</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">实现共产主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">统一中国为真正的民主共和国</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;“我们希望社会上的革命分子，大家都集中到国民党，使国民革命运动得以迅速实现，同时希望中国国民党断然抛弃依赖外国及专力军事两个旧观念……以树立国民革命之真正领袖地位。”上述中共三大宣言内容反映出中国共产党（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">认为国民党是一个革命政党</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">承认国民党在革命中的领导地位</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">希望改组国民党</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">放弃了对民主革命的领导权</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;第一次国共合作的得以实现的条件有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国共产党需要团结各种力量作为革命同盟军</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国国民党在当时各政党中“比较是革命的民主派”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">共产国际提出了实行国共合作的建议</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“打倒列强除军阀”成为全国人民的共同愿望</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民革命与近代前期的资产阶级民主革命相比，其突出的新特点是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">以国共合作为基础</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">民族统一战线的组织形式下进行</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">群众基础扩大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">反帝反封建相结合</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列对国民革命历史意义的叙述，正确的有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">使帝国主义列强感到震惊</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">反帝反封建的口号为人民所接受</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国共产党在群众中的影响扩大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中共开始掌握一部分军队</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;关于1927年大革命失败的主观原因的表述，正确的是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中共在思想理论方面不成熟</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中共领导人的错误思想</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中共缺乏阶级斗争的经验</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">放弃武装力量的领导权</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;新文化运动因批判孔学而否定中国传统文化。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新文化运动对资本主义持完全接受的态度。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;十月革命推动中国先进分子从资产阶级民主主义转向社会主义。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新文化运动在宣传民主、科学的同时，提出必须反对封建的伦理道德。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国最早接受和宣传马克思主义的先进分子是毛泽东。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;五四运动的直接导火线是北洋军阀政府的黑暗统治。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1919年7月发表《多研究些问题，少谈些主义》文章的资产阶级改良主义的代表是梁启超。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新民主主义革命开始的标志是中国共产党的建立。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;第一个在中国比较系统地阐述马克思主义唯物史观、政治经济学和科学社会主义基本原理的作者和作品是李大钊的《我的马克思主义观》。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党的第一任总书记是李大钊。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;从1922年1月香港海员罢工到1923年2月京汉铁路工人罢工，中国掀起了第一个工人运动的高潮。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;第一次国共合作的政治基础是讨伐北洋军阀。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;右倾机会主义在大革命后期才在中共中央领导机关中占据了统治地位。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1925年，以五卅运动为起点，掀起了全国范围的大革命风暴。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;大革命为把中国革命推进到一个新的阶段——土地革命战争阶段准备了必要的条件。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;五四运动是（<b class="answer">D</b>）的伟大开端。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国近代史</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国现代史</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中华人民共和国史</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国新民主主义革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;十月革命爆发于（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1911年10月</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1917年10 月</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1917年11月</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1919年10月</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;世界反法西斯战争又称为（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">第一次世界大战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">第二次世界大战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">普法战争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">甲午战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1925年至1927年的大革命其直接斗争目标是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反对帝国主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">打倒国民党反动派</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">推翻北洋军阀统治</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没收地主土地</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民党新军阀的反动统治开始于（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1919年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1921年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1923年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1927年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1931年九一八事变后日本侵略者占领了（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国东北地区</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国华北地区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南京</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">东南亚</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;四大家族官僚资本的垄断活动首先和主要是从（<b class="answer">D</b>）开始的。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">发行法币</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发行内债</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">商业投机</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">金融业</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;民族资产阶级在中国新民主主义革命中（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">属于革命对象</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">属于革命领导阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">属于革命力量</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">什么都不是</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国新民主主义革命的前途是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资本主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">社会主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">共产主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民主社会主义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;这一时期封建剥削制度对农民阶级的掠夺主要表现在（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">商业资本剥削</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">高利贷资本剥削</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">地租剥削</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">苛捐杂税</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国反动势力的政治代表，在辛亥革命失败以后的一个时期，主要是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">北洋政府</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">南京政府</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武汉政府</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州政府</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1921年中国共产党诞生至1949年新中国成立以前的时期，中国存在着三种主要的政治力量，其中，作为中间势力成为民主革命的力量之一的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">官僚资产阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">民族资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">城市小资产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（<b class="answer">C</b>）使世界反法西斯战争发生了根本性的转折。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">苏德战争爆发</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">太平洋战争爆发</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">斯大林格勒战役</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">诺曼底战役</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;革命的根本问题是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">党的建设问题</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">军队建设问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">国家政权问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">农民土地问题</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国近现代历史上第一次明确提出了反帝反封建的民主革命纲领的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">辛亥革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">五四运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共一大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中共二大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;从总体上看，近代中国人民救国方案的探索（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">是失败的，但这种探索的精神是值得颂扬</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">尽管最终是失败，但推动了近代社会的进步</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">以反帝反封建为号召，在帝国主义、封建主义的联合进攻下失败</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">尽管曲折，但最终找到了一条正确的救国道路</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民党新军阀的反动统治开始于（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1919年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1921年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1923年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1927年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1931年九一八事变后日本侵略者占领了（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国东北地区</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国华北地区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南京</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">东南亚</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;四大家族官僚资本的垄断活动首先和主要是从……开始的（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">发行法币</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发行内债</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">商业投机</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">金融业</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;民族资产阶级在中国新民主主义革命中（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">属于革命对象</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">属于革命领导阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">属于革命力量</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">什么都不是</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国新民主主义革命的基本目标是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资本主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">社会主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">共产主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民主社会主义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国人是从（<b class="answer">D</b>）开始真正了解马克思主义的。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">新文化运动后</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">五四运动后</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">辛亥革命后</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">俄国十月革命后</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;关于国民革命，下列说法不正确的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">兴起的标志是国共两党革命统一战线的成立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">北伐取得了巨大成功</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">彻底摧毁了北洋军阀的统治</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">革命阵营内隐藏着重大危机</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1919 ～ 1949 新中国成立以前，中国社会的性质是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">封建社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">半殖民地半封建社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">社会主义社会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资本主义社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1919 ～ 1949 年新中国成立以前，中国社会的最主要矛盾是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">农民阶级和地主阶级的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资产阶级和无产阶级的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国人民同外国帝国主义的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国人民同本国封建主义的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1919 年以后中国反帝反封建革命斗争的领导力量是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">小资产阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">工人阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民族资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争胜利以后是哪个列强取代了日本在中国的地位？（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">法国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">英国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">俄国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">美国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;五四运动以后，在中国的社会经济生活中占优势地位的是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资本主义经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">官僚垄断经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">封建经济</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">半封建经济</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在新民主主义革命阶段，政治上具有两重性的阶级是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">官僚资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民族资产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">小资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;开辟人类历史新纪元的是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">第一次世界大战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">俄国十月革命</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">世界反法西斯战争的胜利</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">新中国的成立</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国革命要推翻的三座大山是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">帝国主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资本主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">封建主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">官僚资本主义</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1928年6月国民党政府与西方列强“重订新约”的主要内容是（<b class="answer">AC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">关税自主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">收回租界</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">废除领事裁判权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">收回租界地</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民党政府通过征收苛重的赋税直接掠夺农民的方式主要有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">田税</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">盐税</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">杂税</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">服劳役</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国革命要完成的两大历史任务是（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">民族独立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">人民解放</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">祖国繁荣富强</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民共同富裕</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国近代史上的三种建国方案是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">地主阶级与买办性的大资产阶级的方案</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">民族资产阶级的方案</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">工人阶级和其他进步势力的方案</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">英美资产阶级的方案</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在中国近代，大部分的土地为地主及旧式富农所占有，他们剥削农民的方式主要有（<b class="answer">AC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">地租</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">田赋</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">高利贷</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">附加税</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国民族资本主义经济的发展，受到了多方面的阻碍。其阻碍主要来自（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">外国资本的压迫</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">官僚资本的排挤</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">军阀官僚政府的压榨</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">封建生产关系的束缚</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在1921年中国共产党诞生至1949年新中国成立以前的时期，中国存在着三种主要的政治力量是（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">地主阶级和买办性的大资产阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">民族资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">外国帝国主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">工人阶级、农民阶级和城市小资产阶级</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;资产阶级共和国的方案之所以行不通的原因主要是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">力量过于软弱</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">没有勇气和能力去领导人民进行彻底反帝反封建的革命斗争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">提不出彻底的土地革命的纲领</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">不敢进行革命的武装斗争</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1942年元旦，由（<b class="answer">ABCD</b>）四国领衔，26个国家签署《联合国家宣言》，决心互相合作，结成反法西斯联盟。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">美国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">英国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">苏联</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国官僚资本的垄断活动主要涉及（<b class="answer">ABCD</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">开办金融业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">发行“法币”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">发行内债</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">从事大规模的商业投机活动</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国民族资本主义经济主要具有了以下几个特点：（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">在国民经济中所占比重很小</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">主要以纺织、食品工业为主，缺乏重工业的基础</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">工业资本所占的比重小，商业资本和金融资本所占的比重大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">工业规模狭小，经营分散，技术设备落后，劳动生产率低</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国新民主主义革命必须实现的主要任务（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反对帝国主义，打破外国垄断资本的控制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">反对封建主义，进行土地制度的彻底改革</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">反对官僚资本主义、没收官僚资本归新民主主义国家所有</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">建立社会主义国家</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;战后的世界政治形势 （<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">战胜国英、法实力被严重削弱，美国成为帝国主义霸主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">苏联成为社会主义首领</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民族革命运动蓬勃兴起</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">资本主义国家工人运动有新的发展</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在半殖民地半封建社会的中国，民族资产阶级的基本政治特征是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">具有反帝反封建的革命性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">具有软弱性和妥协性</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">军事上的软弱性</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">具有革命的彻底性</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;地主阶级和买办性的大资产阶级的方案是建立一个名副其实的资产阶级共和国。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;反对帝国主义，打破外国资本的控制，是中国新民主主义革命必须实现的首要任务。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;反对封建主义，进行土地制度的彻底改革，是中国新民主主义革命的一项基本任务。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;民族资本主义经济在中国整个资本主义经济中不占主体地位。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;民族资本主义经济在国民经济中所占比重很小，它始终没有成为中国社会经济的主要形式。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;从根本上说，在1921年至1949年时期，可供中国人民选择的方案主要是两个：或者是继续半殖民地半封建的旧中国，或者是创建社会主义的新中国。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党领导新民主主义革命所要达到的基本目标是建立人民民主专政的人民共和国。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;半殖民地中国的官僚资本主义即国家垄断资本主义。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;国民党蒋介石集团在1927年4月18日在南京成立了“中华民国国民政府”。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1919年3月，列宁领导的共产国际宣告成立，它积极帮助包括中国在内的一些国家的先进分子创建共产党。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国是首先进行反法西斯战争的国家。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;袁世凯当权时，北洋政府统治下的中国在形式上是“分裂”的。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在1927年革命失败以前，中国反动势力的政治代表，主要是北洋军阀控制的政府。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;控制南京国民政府的国民党在形式上暂时地“统一”了中国。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;国民党统治的建立，为外国侵略势力深入中国进一步敞开了大门。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;1927年国民革命失败后，中国社会的性质是（<b class="answer">B</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">封建社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">半殖民地半封建社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">资本主义社会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">新民主主义社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1928年12月，宣布东北三省“遵守三民主义，服从国民政府，改旗易帜”的是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">张作霖</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">郭松龄</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">张学良</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">张作相</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以蒋介石为代表的南京国民党政府的性质是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资产阶级政权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">小资产阶级政权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">大地主大资产阶级政权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">封建君主专制政权</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中共八七会议召开的地点在（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">九江</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">汉口</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武昌</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">上海</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中共八七会议确定的总方针是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反对右倾投降主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">走农村包围城市的革命道路</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">创建井冈山革命根据地</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">土地革命和武装反抗国民党反动派</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党独立领导革命战争、创建人民军队和武装夺取政权的开端是党领导了（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">南昌起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">秋收起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">广州起义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">五卅运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东提出“以后要非常注意军事，须知政权是由枪杆子中取得的”的重要论断是在（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">北京特别会议</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">八七会议</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">遵义会议</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">古田会议</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1927年9月9日，毛泽东领导的著名起义是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">湘赣边界秋收起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">赣南秋收起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">湘南秋收起义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州起义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国民革命失败后，以毛泽东为代表的中国共产党人逐步将革命的重心（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">由乡村转移到城市</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">由城市转移到乡村</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">由大城市转向小城市</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">由南方转向北方</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东提出“工农武装割据”思想的著作是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《战争和战略问题》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《星星之火，可以燎原》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《中国的红色政权为什么能够存在？》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《反对本本主义》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党认识和把握中国革命发展的客观规律，最终要靠（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">马克思列宁主义基本原理与中国实际相结合</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">马克思主义本本</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">听从共产国际的指挥</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">照搬苏联经验</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1930年5月，毛泽东写了（<b class="answer">C</b>）一文，阐明了坚持辩证唯物主义的实事求事、坚持理论与实际相结合的原则的极端重要性，为中国共产党正确解决中国式的武装夺取政权的道路问题奠定了思想基础。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中国革命战争的战略》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《中国革命和中国共产党》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《反对本本主义》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中国的红色政权为什么能够存在？》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国的武装斗争的实质是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">无产阶级领导下的农民战争</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">无产阶级领导下的工人罢工</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">无产阶级领导下的学生运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">无产阶级领导下的商人罢市</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国民主革命走向胜利的主要战略基地是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">城市</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">农村</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">大城市</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">沿海城市</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中共领导革命武装建立的全国第一个农村革命根据地是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">湘赣根据地</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">井冈山根据地</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">湘鄂西根据地</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">陕甘宁根据地</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以毛泽东为代表的中国共产党人在农村革命根据地实行土地改革的第一次伟大尝试是颁布了（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《井冈山土地法》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《兴国土地法》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《五四指示》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中国土地法大纲》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;将以前“没收一切土地”改为“没收一切公共土地及地主阶级的土地”的土地法是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《井冈山土地法》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《兴国土地法》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《五四指示》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中国土地法大纲》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;土地革命的目的是消灭封建地主的土地私有制，使土地归（<b class="answer">A</b>）所有。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">农民</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">政府</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">无产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资产阶级</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在土地革命时期对待富农的正确政策是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">限制富农</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">打击富农</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中立富农</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">保护富农</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1931年1月至1935年1月以王明为代表的“左”倾教条主义的最大恶果是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">使白区革命力量遭到惨重损失</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">使福建反蒋抗日事变失败</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">使红军的第五次反“围剿”失败</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">使中国革命丧失了九一八事变后有利的形势</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;国共十年对峙时期，以毛泽东为代表的中国共产党人之所以能开创出以农村包围城市的中国革命道路，其主要依据是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">总结了大革命失败的教训</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">进攻长沙遭到严重挫折</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">井冈山具备开创根据地的良好条件</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">我国的国情和当时形势</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1935年1月，（<b class="answer">C</b>）的召开，挽救了中国共产党、中国工农红军和中国革命，成为中国共产党历史上一个生死攸关的转折点。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">八七会议</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">党的六大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">遵义会议</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">瓦窑堡会议</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;遵义会议主要纠正了（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陈独秀的“右”倾错误</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">王明的“左”倾错误</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">瞿秋白的“左”倾错误</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">李立三的“左”倾错误</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1931年11月，中华苏维埃共和国临时中央政府在江西瑞金成立，（<b class="answer">B</b>）当选为主席。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">周恩来</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">毛泽东</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">朱德</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">刘少奇</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中华苏维埃共和国政权的性质是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">工农民主政权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资产阶级政权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">无产阶级政权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">地主阶级政权</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国民主革命的基本问题是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">武装斗争问题</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">党的建设问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">农民问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">统一战线问题</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国工农红军长征的直接原因是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共失去了广大人民的支持</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共认识到北上抗日的重要性</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">第五次反“围剿”的失败</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共仍未找到革命胜利的道路</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;遵义会议后，中共中央政治局成立了新的三人团负责红军的军事行动，其成员是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">毛泽东、朱德、周恩来</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">毛泽东、朱德、王稼祥</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">毛泽东、周恩来、王稼祥</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">毛泽东、张闻天、周恩来</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1936年10月，中国工农红军第一、二、四方面军胜利会师于（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">陕北保安地区</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">陕北洛川地区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">陕北瓦窑堡地区</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">甘肃会宁、静宁地区</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;万里长征是中国工农红军进行的伟大战略转移，这里的“转移”是指（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国革命的性质发生了变化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">党的工作重心发生了转移</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">革命中心地区发生了转移</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国革命的任务发生了变化</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民党政府大力推行一党专政的军事独裁统治，不断强化其反动国家机器，其手段主要有（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">建立常备武装</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">加强特务统治</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">推行保甲制度</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">制定反动法规</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民党所实行的一党专政的军事独裁统治，是为了维护（<b class="answer">AB</b>）的利益。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">地主阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">大资产阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">无产阶级</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1927年，中国共产党领导的著名武装起义有（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">南昌起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">秋收起义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">广州起义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">平江起义</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;国民革命失败后，国内阶级关系发生了重大变化，从全局上看，继续坚持革命的阶级有（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">民族资产阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">工人阶级</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">农民阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">贫苦的城市小资产阶级</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;毛泽东在1928年至1930年发表的阐述农村包围城市、武装夺取政权的革命道理论的著作有（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《中国的红色政权为什么能够存在？》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《井冈山的斗争》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《星星之火，可以燎原》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《反对本本主义》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;工农武装割据思想的基本内容有（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">土地革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">农村根据地建设</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">武装斗争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">党的建设</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1928年12月至1929年4月，毛泽东主持制定的土地法有（<b class="answer">CD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中华苏维埃共和国土地法》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《土地法大纲》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《井冈山土地法》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《兴国土地法》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;土地革命中所采用的正确的土地分配方法有（<b class="answer">AB</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">以乡为单位，按人口平分土地</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">在原耕地的基础上，抽多补少，抽肥补瘦</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">地主不分田</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">富农分坏田</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1927年8月7日，中共中央在汉口秘密召开紧急会议即八七会议，作出了如下的决定（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">彻底清算了王明的“左”倾冒险主义错误</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">彻底清算了陈独秀右倾机会主义错误</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">确定了土地革命和武装反抗国民党反动派统治的总方针</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">选出了以瞿秋白为书记的中央临时政治局</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;从1927年7月大革命失败到1935年1月遵义会议召开之前，“左”倾错误先后几次在党中央的领导机关取得了统治地位，它们是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">瞿秋白的“左”倾盲动主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">李立三的“左”倾冒险主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">王明的“左”倾教条主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">张国焘的“左”倾冒险主义</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;遵义会议后组成的军事指挥小组的成员有（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">毛泽东</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">周恩来</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">王稼祥</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">张闻天</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1936年10月，在甘肃会宁、静宁地区先后会师的红军主力有（<b class="answer">ABD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">红一方面军</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">红二方面军</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">红三方面军</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">红四方面军</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;除井冈山革命根据地外，从1928年到1930年，中国共产党人开辟的主要根据地还有（<b class="answer">ABD</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">赣南闽西根据地</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">湘鄂赣根据地</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">闽浙赣根据地</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">广西左右江根据地</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1935年12月，毛泽东作了《论反对日本帝国主义的策略》的报告，其主要内容有（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">阐明党的抗日民族统一战线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">批判党内的关门主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">批判党内对于革命的急性病</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">系统地解决了党的政治路线问题</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;标志毛泽东思想初步形成的著作主要有（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《中国的红色政权为什么能够存在？》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《井冈山的斗争》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《星星之火，可以燎原》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《反对本本主义》</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;1927年，随着“四一二”政变和“七一五”政变的发生，中国革命转入了低潮。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义革命的任务可以合并在民主主义革命任务上面去完成，这叫做“毕其功于一役”。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;遵义会议开始了从大革命失败到土地革命战争兴起的转折。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;土地革命战争时期，党内出现了陈独秀右倾机会主义、李立三“左”倾冒险主义、王明“左”倾教条主义等三次大错误，使中国革命受到挫折，造成严重危害。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《湖南农民运动考察报告》等文章的发表，标志着毛泽东思想的初步形成。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1935年底，中共中央在陕北瓦窑堡召开政治局扩大会议，会议提出了在敌后开展独立自主的山地游击战的方针。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;国民党在全国建立统治以后，实行的依然是地主阶级和买办性的大资产阶级的统治。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;毛泽东是农村包围城市、武装夺取政权革命新道路开辟的杰出代表。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;遵义会议是中国共产党历史上一个生死攸关的转折点。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1928年12月，毛泽东主持制定的中国共产党历史上第一个土地法是《兴国土地法》。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1931年11月，中华苏维埃第一次全国工农兵代表大会召开的地点是江西瑞金。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;剥夺了毛泽东对中央根据地红军的领导权的会议是1931年11月召开的赣南会议。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《兴国土地法》做出的一个原则性改正，目在在于保护富农的利益。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党独立领导革命战争、创建人民军队和武装夺取政权开端的是南昌起义。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1927年7月大革命失败到1935年遵义会议召开之前，“左”倾错误先后三次在党中央的领导机关取得了统治地位。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;揭开全国性抗战序幕的是（<b class="answer">C</b>）</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">一二八抗战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">长城抗战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">卢沟桥抗战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">八一三抗战</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;七七事变时，奋起抵抗的国民党驻军是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">第十九路军</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第二十六路军</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">第二十九路军</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">第五军</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;全国抗战爆发后，国民党正面战场取得了第一个大的胜利是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">平型关战役</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">台儿庄战役</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">豫湘桂战役</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">枣宜战役</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;全国抗战爆发后，共产党领导的敌后战场取得的第一个大的胜利是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">平型关战役</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">台儿庄战役</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">百团大战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">淞沪会战</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1938年5月至6月间，毛泽东发表的揭示抗日战争发展规律的著作是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《论反对日本帝国主义的策略》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《论持久战》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《中国共产党在民族战争中的地位》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《抗日游击战争的战略问题》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争进入相持阶段的时间是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1937年7月</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1938年5月</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1938年10月</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1941年12月</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中共中央决定以减租减息作为抗日战争时期解决农民土地问题基本政策的会议是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">瓦窑堡会议</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洛川会议</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">六届六中全会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">六届七中全会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争进入相持阶段后，日本帝国主义对国民党采取的方针是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">军事打击为主，政治诱降为辅</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">政治诱降为主，军事打击为辅</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">军事打击和政治诱降相结合</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">政治诱降取代军事进攻</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1939年1月，国民党确定“消极抗日，积极反共”政策的会议（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民党五届三中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国民党五届五中全会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国民党五届六中全会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">国民党临时全国代表大会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争时期，国民党第二次反共高潮达到顶点的标志是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">晋西事变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">陇东事变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">平江惨案</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">皖南事变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;确立毛泽东思想为全党的指导思想的会议是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">遵义会议</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">瓦窑堡会议</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">洛川会议</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中共七大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党提出《抗日救国十大纲领》的会议是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">瓦窑堡会议</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洛川会议</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">六届六中全会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共七大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东论述新民主主义革命三大法宝的著作是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中国革命和中国共产党》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《&lt;共产党人&gt;发刊词》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《新民主主义论》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《论持久战》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;延安整风运动最主要的任务是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反对主观主义以整顿学风</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">反对宗派主义以整顿党风</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">反对党八股以整顿文风</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">反对官僚主义以整顿作风</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中共全面抗战路线与国民政府片面抗战路线的最大区别在于（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">要不要抗日</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">在正面战场，还是敌后战场抗日</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">依靠哪些力量抗日</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">采取哪些方法抗日</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在同顽固派作斗争时应坚持（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">有理有利有节的原则</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">斗争到底的原则</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">实事求是的原则</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">团结合作的原则</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;日本天皇向公众宣布无条件投降的时间是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1945年8月14日</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1945年8月15日</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1945年9月2日</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1945年9月3日</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以国共合作为基础的抗日民族统一战线正式形成的标志是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">西安事变的和平解决</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国民党五届三中全会确定实行联共政策</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">国民党公布了合作宣言和蒋介石发表承认中共合法地位的谈话</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">7月17日，周恩来、秦邦宪等在庐山同蒋介石、张冲等进行谈判</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东在《论持久战》中分析交战的中日双方存在着相互矛盾的特点是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">敌强我弱；敌退步我进步；敌小国我大国；敌寡助我多助</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">抗日战争是持久战，最后胜利是中国的</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">战争要经过战略防御、战略相持、战略反攻三个阶段</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国是正义战争，日本是侵略战争</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在新民主主义革命时期，曾以“团结的大会，胜利的大会”载入中国共产党史册的一次具有最重要意义的会议是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">瓦窑堡会议</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">六届六中全会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">党的七大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">洛川会议</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1937年8月，陕北红军奉命改编为国民革命军第八路军，其正、副总指挥分别是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">朱德、彭德怀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">叶挺、项英</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">朱德、刘伯承</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">朱德、贺龙</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争时期，中国共产党解决农民问题的基本政策是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">土地国有</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">没收地主土地</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">减租减息</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">按人口平均分配土地</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党在抗日民族统一战线中坚持独立自主原则的实质是（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">巩固和发展抗日民族统一战线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">力争共产党对抗日战争的领导权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">粉碎国民党顽固派反共投降逆流</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">争取民主，废止国民党一党专政</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争时期，根据地政权的民主建设主要体现为（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">建立中华苏维埃共和国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">实行“三三制”原则</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">开展整风运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">推行精兵简政政策</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于抗战历史意义的表述，不恰当的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">是中国人民近百年来第一次取得的反对帝国主义侵略斗争的完全胜利</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">增强了全国人民的自尊心和自信心</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">是世界反法西斯战争的重要组成部分</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">结束了中国半殖民地半封建社会的历史</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党领导的民主政权实行“三三制”原则是在（<b class="answer">B</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">解放战争时期</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">抗日战争时期</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">土地革命时期</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">大革命时期</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在战略相持阶段，中国军队主动出击日军的最大规模战役是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">淞沪会战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">平型关大捷</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">徐州会战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">百团大战</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;百团大战的指挥者是（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">聂荣臻</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">徐向前</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">彭德怀</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">邓小平</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于抗日战争胜利原因的表述不正确的是（<b class="answer">D</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">抗日民族统一战线的建立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">世界各国人民的支持</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共坚持实行全面的抗战路线</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国是大国，地大、物博、人多、兵多</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1938年9月至11月，中共中央在延安召开了扩大的六届六中全会，会议批判了在统一战线问题上的错误是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">一切经过统一战线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">一切服从统一战线</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">只讲联合不讲斗争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">轻视共产党领导的游击战争</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在战略防御阶段，国民党军队在北平南苑的战斗中先后阵亡的爱国将领是（<b class="answer">AB</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">佟麟阁</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">赵登禹</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">张自忠</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">郝梦龄</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;抗日民族统一战线的特点是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">广泛的民族性和极大的复杂性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国共两党的两个政权、两个军队的合作</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">没有双方共同遵守的共同纲领和固定的组织形式</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">处于一种既有利又复杂的国际环境中</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;抗战初期国民党正面战场上组织的会战是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">忻口会战</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">淞沪会战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">徐州会战</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">武汉会战</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;以国共两党第二次合作为基础的抗日民族统一战线正式形成的标志是（<b class="answer">BC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1937年国民党五届三中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1937年蒋介石发表承认共产党合法地位的谈话</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">国民党中央通讯社发表《中国共产党为公布国共合作宣》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">西安事变的和平解决</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1938年5月至6月间，毛泽东在《论持久战》中论述的中日矛盾双方的特点是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">敌强我弱</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">敌小国我大国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">敌退步我进步</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">敌寡助我多助</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党在中国革命中战胜敌人的三个主要法宝是（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">独立自主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">统一战线</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">武装斗争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">党的建设</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在20世纪30年代后期和40年代前期，毛泽东论述新民主主义革命理论的著作的（<b class="answer">BCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《论持久战》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《&lt;共产党人&gt;的发刊词》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《中国革命和中国共产党》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《新民主主义论》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1941年和1942年毛泽东为延安整风所作的报告是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">《改造我们的学习》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《整顿党的作风》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《反对党八股》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中国革命和中国共产党》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;抗日战争时期延安整风运动的主要内容是（<b class="answer">ACD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反对主观主义以整顿学风</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">反对主观主义以整顿党风</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">反对宗派主义以整顿党风</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">反对党八股以整顿文风</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在抗日民族统一战线中，中国共产党争取的中间势力指的是（<b class="answer">ABD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">民族资产阶级</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">开明绅士</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">上层小资产阶级</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">地主实力派</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1939年7月，针对蒋介石消极抗日、积极反共，中国共产党明确提出的政治方针是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">坚持抗战，反对妥协</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">坚持团结，反对分裂</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">坚持进步，反对倒退</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">坚持抗战，反对投降</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党争取抗日民族统一战线中的中间势力的条件是（<b class="answer">ACD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">共产党必须有充足的力量</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">必须同他们的动摇性作斗争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">必须尊重他们的利益</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">必须同顽固派作斗争并不断取得胜利</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;毛泽东在《新民主主义论》中提出了党关于新民主主义革命的三大纲领是（<b class="answer">ABD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">政治纲领</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">经济纲领</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">军事纲领</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">文化纲领</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党在抗日民族统一战线中的策略总方针是（<b class="answer">ABC</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">发展进步势力</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">争取中间势力</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">孤立顽固势力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">打击资产阶级</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;西安事变的和平解决，标志着第二次国共合作为基础的抗日民族统一战线正式形成。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;国民党政府和军队在整个抗日战争时期对日作战都是消极的。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;抗日战争中游击战争并不具有战略地位。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党制定的“发展进步势力，争取中间势力，孤立顽固势力”的抗日民族统一战线策略方针，其中间势力是指“工人农民和城市小资产阶级。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在抗日战争时期，为了适应抗战的需要，党将土地革命时期的没收封建地主阶级土地的政策改变为“减租减息”政策。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国的抗日战争为世界反法西斯战争作出了重大贡献。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;抗日战争时期，中国共产党的土地政策是没收地主阶级的土地归农民所有。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1937年11月，王明从莫斯科回到延安，在统一战线问题上主张“一切服从统一战线”、“一切经过统一战线”，把共产党及其领导的人民军队的活动限制在国民党允许的范围内，中共六届六中会纠正了王明的右倾错误。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1936年12月，西安事变和平解决成为时局转换枢纽，十年内战局面结束，国内和平基本实现。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1937年2月，国民党五届三中全会原则上同意了我党提出的团结抗日主张，实际上承认了共产党的合法地位，并在会议文件上第一次写上“抗日”字样。这说明国民党由内战“剿共”、对日妥协向和平、抗日转变，标志着抗日民族统一战线初步形成。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;一二九运动标志着中国人民抗日救亡运动新高潮的到来。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;抗日战争是神圣的民族解放战争。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党是全民族抗战的中流砥柱。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在抗日战争中，共产党必须以革命的两面政策来对付大地主大资产阶级抗日派。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;抗日战争爆发后，中国军队取得的第一次重大胜利的战役是平型关战役。 [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;抗日战争胜利后，中国社会的主要矛盾是（<b class="answer">D</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中美民族矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中日民族矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">无产阶级同资产阶级的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国人民同美帝国主义支持的国民党反动派之间的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;《双十协定》的签订，中共取得的战略优势是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">获得了自卫战争的准备时间</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">解放区获得了合法地位</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">赢得了民主党派的支持</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">取得了政治上的主动地位</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;重庆谈判的焦点问题是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">人民军队和解放区的合法地位问题</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">要不要和平建国的问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">实行宪政、结束训政的问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民的民主、自由权利的问题</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1947年刘邓大军挺进中原的重大意义在于（<b class="answer"></b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">影响战略决战主攻方向</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">粉碎蒋介石的重点进攻</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">改变敌我双方的力量对比</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">改变解放战争的战略态势</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;对第三次国内革命战争时期反蒋斗争第二条战线的准确表述是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国统区的学生运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国统区的工农运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国统区的地下斗争</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">国统区的民主运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中共七届二中全会需要解决的重要问题是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">如何夺取全国革命胜利</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">如何解决民主革命遗留的任务的问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">党的工作重心转移问题</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">民主革命向社会主义革命转变的问题</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;全面内战爆发的标志是国民党（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">撕毁《双十协定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">进攻中原解放区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">进攻上党地区</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">撕毁停战协定</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;揭开人民解放军全国性战略进攻序幕的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">孟良崮战役开始</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">刘邓大军挺进大别山</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">三大战役开始</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">渡江战役开始</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;率领北平国民党军队接受和平改编的国民党将领是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">张治中</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">蔡廷锴</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">杜聿明</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">傅作义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东提出“一切反动派都是纸老虎”的论断，针对的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">打垮国民党的历次反革命军事围剿</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国民党顽固派制造皖南事变等反共浪潮</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">日本帝国主义被迫宣布无条件投降</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">内战初期国民党在军事和经济方面占有明显优势</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在第二次世界大战结束后新的国际格局下，美国采取的对华政策是（<b class="answer">A</b>）。(两套答案都是A，不要问我为什么。。。)</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">保持中立的政策</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">扶蒋反共的政策</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">武力干涉的政策</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">遏制中国的政策</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;抗日战争胜利后，中国工人阶级、农民阶级和城市小资产阶级建国方案的政治代表是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国民主同盟</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国农工民主党</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国共产党</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国国民党革命委员会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1945年8月至10月，国共双方举行了确认和平建国基本方针的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">西安谈判</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">重庆谈判</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南京谈判</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">北平谈判</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1946年6月26日，国民党军队挑起全国性内战的起点是大举围攻（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">东北解放区</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中原解放区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">陕北解放区</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">山东解放区</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1946年全面内战爆发后，毛泽东提出的著名论断是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">须知政权是由枪杆子中取得的</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">星星之火，可以燎原</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">兵民是胜利之本</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">一切反动派都是纸老虎</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1947年10月10日发布的《中国人民解放军总部宣言》正式提出的行动口号是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">向北发展、向南防御</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">打倒蒋介石、解放全中国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">将革命进行到底</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">打过长江去、解放全中国</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1946年5月4日，中共中央发出了（<b class="answer">C</b>）决定将减租减息政策改变为“耕者有其田”政策的。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《井冈山土地法》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《兴国土地法》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《关于清算、减租及土地问题的指示》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中国土地法大纲》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1945年（<b class="answer">B</b>），在昆明发生了吹响国统区爱国学生运动第一声号角。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">一二·九运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">一二·一运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">一二三○运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">五二○运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1947年10月后，国统区爱国学生运动的主要斗争口号是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反饥饿</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">反内战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">反迫害</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">反独裁</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;台湾人民在1947年举行的反对国民党暴虐统治的大规模斗争是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">黑旗军起义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">抗暴行运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">二二八起义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">五二○运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1947年5月，在中国共产党领导下宣告成立的民族自治区是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">内蒙古自治区</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">宁夏回族自治区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">新疆维吾尔族自治区</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广西壮族自治区</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1948年1月1日在香港正式成立的民主党派是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国民主同盟</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国民主建国会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国民主促进会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国国民党革命委员会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1949年1月，李济深等联合发表了拥护中共召开政治协商会议、成立联合政府主张的（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《对目前时局的宣言》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《和平建国纲领》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《对时局的意见》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《国内和平协定》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党领导的人民解放战争在1948年秋进入到了夺取全国胜利的（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">战略防御阶段</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">战略相持阶段</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">战略进攻阶段</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">战略决战阶段</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1949年4月21日，毛泽东和朱德向人民解放军发布了（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《对目前时局的宣言》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《中国人民解放军总部宣言》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《将革命进行到底》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《向全国进军的命令》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国人民解放军占领南京、宣告国民党的反动统治覆灭是在（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1949年4月20日</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1949年4月21日</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1949年4月22日</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">1949年4月23日</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东在《论人民民主专政》中指出，人民民主专政的基础是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">工人阶级和农民阶级的联盟</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工人阶级和民族资产阶级的联盟</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">工人阶级、农民阶级和城市小资产阶级的联盟</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">城市小资产阶级和民族资产阶级的联盟</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1949年6月30日，毛泽东发表了系统阐明中国共产党关于建立新中国主张的（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《对目前时局的宣言》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《目前形势和我们的任务》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《将革命进行到底》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《论人民民主专政》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;《中国人民政治协商会议共同纲领》最基本、最核心的内容是关于新中国的（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">基本民族政策的规定</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国体和政体的规定</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济工作方针的规定</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">外交工作原则的规定</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1949年9月制定的、正式确立中国共产党在全国执政地位的法律文献是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《和平建国纲领》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《中国人民政治协商会议共同纲领》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《中央人民政府组织法》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中华人民共和国宪法》</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;第二次世界大战结束后，国际上形成的主要对立阵营是（<b class="answer">CD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">以德国为首的战败国阵营</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">以英国为首的战胜国阵营</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">以美国为首的帝国主义阵营</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">以苏联为首的社会主义阵营</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;抗日战争胜利后，中国国内存在的建国方案主要是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">民族资产阶级的建国方案</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工人阶级和农民阶级的建国方案</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">地主阶级与买办性的大资产阶级的建国方案</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">工人阶级、农民阶级和城市小资产阶级的建国方案</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1945年8月25日，中共中央在《对目前时局的宣言》中明确提出的口号是（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">独立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">和平</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民主</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">团结</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1947年南京、北平等国统区爱国学生爆发五二○运动时提出的的斗争口号是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反饥饿</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">反内战</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">反迫害</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">反独裁</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;对1946年政协会议协议的有关表述，正确的是（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">有利于实现民主政治与和平建国</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">在许多方面反映了人们的愿望</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">体现了民主协商的精神</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">很快被国民政府撕毁</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1947年2月至6月，中国人民解放军粉碎了国民党军队（<b class="answer">AD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">对陕北的重点进攻</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">对东北解放区的重点进攻</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">对中原解放区的重点进攻</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">对山东解放区的重点进攻</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;抗战胜利后，蒋介石在积极准备内战的同时，又表示愿意与中共进行和平谈判，其目的是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">敷衍国内外舆论，掩盖其正在进行的内战准备</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">诱使中共交出人民军队和解放区政权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">如果谈判不成，即发动内战，并把战争责任转嫁给中共</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">考虑到经过八年的抗日战争，国内确实需要和平与稳定</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1947年，毛泽东在《目前形势和我们的任务》中提出的新民主主义三大经济纲领是（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">没收封建阶级的土地归农民所有</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">没收垄断资本归新民主主义的国家所有</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">赎买民族资本归新民主主义的国家所有</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">保护民族工商业</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1948年9月12日至1949年1月31日，中国人民解放军发动的三大战略决战是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">辽沈战役</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">淮海战役</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">平津战役</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">渡江战役</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在领导淮海战役的总前委成员中，除了担任书记的邓小平外还包括（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">刘伯承</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">谭震林</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">陈毅</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">粟裕</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1949年3月召开的中共七届二中全会的主要内容是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">规定了全国胜利后应当采取的基本政策</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">分析了中国由农业国转变为工业国的任务</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">指明了向社会主义社会转变的发展方向</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">提出了“两个务必”的要求</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1949年9月制定的《中国人民政治协商会议共同纲领》的主要内容是关于新中国（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">基本民族政策的规定</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">国体和政体的规定</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">经济工作方针的规定</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">外交工作原则的规定</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在1949年中华人民共和国中央人民政府成立时，担任副主席职务的民主人士是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">李济深</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">宋庆龄</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">刘少奇</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">张澜</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国新民主主义革命胜利的主要原因是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国共产党的正确领导</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">广大人民群众的广泛参加和大力支持</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">各民主党派和无党派民主人士、各少数民族、爱国的知识分子和华侨的积极参与</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">国际无产阶级和人民群众的援助</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国新民主主义革命胜利的基本经验是坚持（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">土地革命</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">武装斗争</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">党的建设</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">统一战线</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;国民党统统治集团作为大地主、大资产阶级的政治代表，其根本目标是维护独裁统治。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;国民党之所以迅速失去民心，主要是因为它违背全国人民迫切要求休养生息、和平建国的意愿，执行反人民的内战政策。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国各民主党派是中国共产党领导的爱国统一战线的重要组成部分。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国各民主党派形成时的社会基础主要是大资产阶级、民族资产阶级以及同这些阶级相联系的知识分子。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;二战后，中国在命运与前途的选择上有第三条道路可走，即建立资产阶级共和国。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;为了打退国民党对解放区的军事进攻，在军事上，必须采取游击战术歼灭敌人的作战原则。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1948年后，根据中共中央的决策和部署发动三大战役，人民解放战争战略进攻的序幕由此拉开。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1946年5月4日，中共中央发出《五四指示》，决定将党在抗日战争时期实行的减租减息政策改变为实现“耕者有其田”的政策。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;土地制度改革，是从根本上摧毁中国封建制度根基的社会大变革，为打败蒋介石、建立新中国奠定了深厚的群众基础。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在国民党统治区，以工人运动为先导的人民民主运动迅速地发展起来，成为配合人民解放战争的第二条战线。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国各民主党派的政纲不尽相同，但都主张爱国、反对卖国，主张民主、反对独裁。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;根据毛泽东的论述，新中国的国体是：无产阶级领导的，以工农联盟为基础，还有资产阶级民主分子参加的人民民主专政；新中国的政体是：建立民主集中制的各级人民代表会议制度。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在中共召开的七大会议上，毛泽东提出了“两个务必”的思想，即“务必使同志们继续地保持谦虚、谨慎、不骄、不躁的作风，务必使同志们继续地保持艰苦奋斗的作风”。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1949年，完成创建新中国的任务，是由中国人民政治协商会议来承担的。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;人民民主专政的新中国的创建，标志着近代以来中国面临的两大历史任务基本完成。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;二十世纪五十年代中期，上海的一位民主人士说：“对于我，失去的是我个人的一些剥削所得，它比起国家第一个五年计划的投资总额是多么渺小；得到的却是一个人人富裕、繁荣强盛的社会主义国家。” 这段话指的是关于（<b class="answer">B</b>）的问题。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">个体农业社会主义改造</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">资本主义工商业社会主义改造</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">个体手工业社会主义改造</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">合作社经济社会主义改造</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1954年12月，毛泽东在一次党内外人士座谈会上指出，政协仍有存在的必要，但是我们不能把政协搞成国家权力机关。此话的主要背景是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">第一个五年计划开始</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">过渡时期总路线确定</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">人民代表大会制度的确立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共八大召开</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（<b class="answer">C</b>）年中国共产党提出了过渡时期的总路线，开始制定和实施第一个五年计划。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1951</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1952</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1953</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1954</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年，中国对资本主义工商业进行社会主义改造期间，某资本家担任某厂副厂长。一时间，工人议论纷纷。以下四种意见，符合国家政策的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">他是资本家，怎么可以担任我们的副厂长</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资本家是要剥削的，我们一起把他拉下马</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">工人阶级当家作主，他的话我们不听</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">他懂业务，他说得对，我们还是要听的</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国发展国民经济的第一个五年计划，把优先发展（<b class="answer">C</b>）作为建设的中心环节。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">农业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">轻工业</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">重工业</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">工业</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;过渡时期总路线确定的国家的主要任务是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">实现社会主义工业化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">完成社会主义改造</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">实现对资本主义工商业的社会主义改造</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">确立社会主义制度</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;社会主义的基本（<b class="answer">A</b>）制度建立起来，是中国进入社会主义社会的最主要标志。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">政治</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">文化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">政党</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;（<b class="answer">B</b>），实现了中国历史上最伟大最深刻的社会变革，开始了在社会主义道路上实现中华民族复兴的历史征程。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中华人民共和国的成立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">由新民主主义到社会主义的过渡</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">新民主主义革命的胜利</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民民主专政的确立</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;对资本主义工商企业进行社会主义改造，就是把民族资本主义工商业改造成为社会主义性质的企业，并对民族资产阶级实行（<b class="answer">B</b>）政策。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">争取</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">赎买</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">利用</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">合作</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1959年某部门根据历年全国工业生产统计数据制订了下表。从下表推出的符合史实的结论是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">工业生产取得巨大成就</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">工业生产基础比较雄厚</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中国已从落后的农业国变成先进的工业国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">工业生产的最高增长率是最低增长率的近12倍</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国由新民主主义社会向社会主义社会过渡的时期是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">从总路线提出起，到建成社会主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">从中华人民共和国成立，到社会主义改造基本完成</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">从国民经济恢复，到社会主义改造完成</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">从解放战争的胜利，到社会主义改造基本完成</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国在由新民主主义向社会主义过渡过程中，对生产资料私有制进行社会主义改造的目的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">消灭资本主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">恢复国家经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">解放和发展生产力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">建立国营经济</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国长期是一个“万国汽车的展览馆”，先后进口和使用过130多种品牌的汽车。而解放牌汽车试制成功，结束了我国自己不能生产汽车的历史，这是在（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民经济恢复时期</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">一五计划时期</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">改革开放时期</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">文化大革命时期</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在对资本主义工商业进行社会主义改造的过程中，当个别企业公私合营后，企业的利润实行（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">归国家所有</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">四马分肥</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">归企业所有</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">用于工人的工资</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;资本主义工商业全行业公私合营后资本家领取的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">企业利润的1/4</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">定息</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">全部企业利润</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">和工人一样的工资</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国二十世纪五十年代改造资本主义工商业的主要形式是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">股份制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">无偿没收</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">国家资本主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">合作化</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;商业广告是促销的重要手段。据史料记载：中国现代意义上的广告起始于鸦片战争后，民国初年得到显著的发展，1953年后消失，1978年末又重新出现。史料中广告业消失的最主要原因是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">经济困难，物资匮乏</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">企业热衷产品直销</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">三大改造，政府取缔</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">国家实行计划经济</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国进入社会主义初级阶段的标志是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中华人民共和国的成立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">国民经济恢复</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">社会主义改造的基本完成</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">确立过渡时期总路线</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;工人阶级与资产阶级的矛盾作为我国社会主要矛盾存在的时间是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1919~1949年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1949～1956年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1953～1956年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1953~1978年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1953年10月毛泽东说：“一般规律是经过互助组再到合作社，但是直接搞社，也可允许试一试。走直路，走得好，可以较快地搞起来，为什么不可以？可以的。”这一论述针对的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">资本主义工商业的社会主义改造</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">个体农业的社会主义改造</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">土地改革运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">建立国营经济</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列不属于中华人民共和国成立后中共中央提出过渡时期总路线的历史条件是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">完成了民主革命遗留的历史任务</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">巩固了人民民主专政</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">恢复了国民经济</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">完成了发展国民经济的第一个五年计划</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于新中国成立之初新民主主义政权性质的论述，不正确的有（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">人民民主专政的任务是彻底完成新民主主义革命，巩固新生的国家政权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">这一政权是实行工人阶级领导的各革命阶级联合专政的人民民主专政</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">在经济上实行的是五种经济成分并存的社会主义经济制度</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">在文化上实行的是马克思主义指导下的新民主主义的文化</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列几组词，最能准确反映“过渡时期”这一特殊年代的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">工业化 抗美援朝 三大改造</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">一边倒 人民公社 另起炉灶</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">大跃进 两弹一星 和平共处</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">合作化 求同存异 三个面向</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新民主主义社会中的社会主义因素不包括（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国营经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">民族资产阶级参加政权</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">思想文化领域中马克思主义的指导地位</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国共产党的政治领导</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国社会主义改造中的创举是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">农业合作化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">对民族资产阶级实行赎买政策</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">建立手工业合作社</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没收官僚资本</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于社会主义改造不正确的论述是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会主义改造的基本完成标志着社会主义制度在中国的确立</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">社会主义改造的基本完成使我国的阶级关系发生了重要变化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">社会主义改造的基本完成为中国的社会主义现代化建设奠定了重要基础</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">社会主义改造的基本完成结束了中国半殖民地半封建社会的历史</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国人口特别少的 33 个少数民族，如基诺、洛巴族等，在全国人大都拥有人大代表的名额，由此可见（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">人民代表大会制是我国的根本政治制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">民族区域自治制度是我国基本政治制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">人民当家作主是包括我国所有少数民族人民在内的当家作主</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">少数民族人民可以通过全国人民代表大会直接行使国家权力</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;我国农业合作化过程中建立的初级农业生产合作社的性质是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">具有社会主义萌芽性质</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">完全社会主义性质</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">半社会主义性质</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">新民主主义性质</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“企业的私有制向社会主义所有制转变，这在世界上早就出现过，但采用这样一种和平方法，使全国工商界都兴高采烈来接受这种改变，则是史无前例的。”这句话中的“和平方法”指的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">实行股份制</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">廉价收购</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">赎买政策</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">无偿没收</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;春联的内容往往和社会的历史变迁相联系。以下春联中能反映新中国成立后过渡时期历史情景的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“毛主席挥手指方向，合作化道路宽又广”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“食堂巧煮千家饭，公社饱暖万人心”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“过年只有两升米，压岁并无一分钱”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“粮补机补肥补助农民幸福，医保社保低保保百姓平安”</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中华人民共和国的成立，标志着（<b class="answer">AC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">新民主主义革命已经取得基本胜利</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国进入了社会主义社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国进入了新民主主义社会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国开始由资本主义社会向社会主义社会过渡</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国改造资本主义工商业的政策有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">利用</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">限制</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">改造</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">没收</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国对资本主义工商业的社会主义改造中，属于初级形式的国家资本主义有（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">加工订货</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">统购包销</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">公私合营</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">经销代销</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;我国对私人资本主义工商业进行社会主义改造的高级形式是（<b class="answer">BD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">委托加工</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">全行业公私合营</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">统购包销、经销代销</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">个别企业公私合营</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立时，中国社会经济中的主要经济成分是（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会主义经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">个体经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">合作社经济</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">私人资本主义经济</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;“这一年是我国实施第一个五年计划的第四年，也是我国农业、手工业和资本主义工商业的社会主义改造发展得最快和取得决定性胜利的一年，同时还是我国社会发生重大变化的一年。”下列对“这一年”理解正确的是（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">第一部《中华人民共和国宪法》颁布</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">生产资料所有制形式发生根本性变化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国社会主要矛盾发生了变化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国社会性质发生根本性变化</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;第一部《中华人民共和国宪法》中（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">规定了国家的性质和根本政治制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">民族区域自治制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">体现了人民民主原则和社会主义原则</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">规定了人民的权利和义务</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1951年全国粮食产量比1949年增加28%，1952年比1949年增加40%，超过抗战前最高产量的9%，据此可以得出的正确结论是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">土地改革提高了农民的生产积极性</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">土地改革使农业走上了社会主义道路</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">土地改革加速了国民经济的恢复</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">土地改革大大解放了农村生产力</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在农业合作化过程中，党和政府领导农民创造的过渡形式有（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">农业生产临时互助组</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">农业生产互助组</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">初级农业生产合作社</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">高级农业生产合作社</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党在农业合作化时期的基本方针主要有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">在中国的条件下，可以走先合作化、后机械化的道路</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">实行积极发展、稳步前进、逐步过渡的方针</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">坚持自愿和互利的原则</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">要始终把是否增产作为衡量合作社是否办好的标准</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党在过渡时期的总路线是（<b class="answer">ABCD</b>） 。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">逐步实现国家的社会主义工业化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">逐步实现对农业的社会主义改造</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">逐步实现对手工业的社会主义改造</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">逐步实现对资本主义工商业的社会主义改造</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在社会主义改造中，我国创造性地开辟了一条适合中国情况的对资本主义工商业进行社会主义改造的道路，主要有（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">用和平赎买的方法改造资本主义工商业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">采取从低级到高级的国家资本主义的过渡形式</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">把资本主义工商业者改造成为自食其力的社会主义劳动者</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">遵循自愿互利、典型示范和国家帮助的原则</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列关于新民主主义社会主要特征的论述正确的有（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">经济上实行在国营经济领导下五种经济成分并存的制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">政治上实行工人阶级领导的各个革命阶级联合专政的人民民主专政</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民族资产阶级作为一个阶级还存在，并参与国家政权建设</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">新民主主义社会实行马克思主义指导下的新民主主义文化</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;我国提出过渡时期总路线，具备的实现可能性有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">我国已经有了相对强大和迅速发展的社会主义国营经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">私营资本主义工商业愈来愈不适应大规模工业化建设的需要，国家在利用和限制资本主义工商业的过程中积累了初步的经验</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">土地改革完成后，分散、脆弱的农业个体经济难以适应工业化的需求，也难以避免农村的两极分化，农村开始有了实行互助合作的实践</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">苏联社会主义的发展已经显示出对于资本主义的优越性，对我国有重要的榜样作用</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;过渡时期总路线反映了中国社会由新民主主义走向社会主义的历史必然，因为（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国家工业化是国家独立和富强的必要条件</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">对非社会主义经济成分进行改造是实现工业化的需要</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">要确立社会主义生产关系，解放和发展生产力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">战后社会主义和资本主义两大阵营的尖锐对立和新中国“一边倒”的外交方针</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;新中国成立初期的国家资本主义经济是在人民政府管理之下的，用各种形式和国营社会主义经济联系着的，并受工人监督的资本主义经济。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新中国成立初期的半社会主义性质的合作社经济是个体经济向社会主义集体经济过渡的形式。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新中国成立初期的国家资本主义经济是私人资本主义经济向国营经济过渡的形式。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;第一个五年计划，为中国的工业化奠定了初步的坚实基础。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;我国社会主义改造过程中，手工业合作化的组织形式，是由手工业生产合作小组、手工业供销合作社到手工业生产合作社。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义改造是围绕着社会主义工业化建设的任务进行的。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新中国没收官僚资本，既具有民主革命的性质，又具有社会主义革命的性质。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义改造的胜利，为中国全面进行社会主义建设奠定了基础。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;人民政府接管的官僚资本主义企业是新中国成立初期国营经济的主要组成部分。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;我国对个体农业、手工业和资本主义工商业进行改造的实质是变革生产关系的社会主义革命。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1952 年6月，毛泽东指出不应再把民族资产阶级称为中间阶级，其依据是全国范围内的土地改革基本完成。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;党在过渡时期总路线的主要内容被概括为“一化三改”，其中“一化”是指社会主义现代化。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国是在没有实现工业化的情况下进入社会主义的。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1954年以后，中国人民政治协商会议不再代行全国人民代表大会的职权。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中华人民共和国的成立和社会主义制度的建立，是二十世纪中国人民在前进道路上的第一次历史性巨变。 [<b class="answer">F</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;社会主义基本制度的全面确立是在（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1949年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1956年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1976年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1978年</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年2月召开的进一步暴露苏联在社会主义建设中存在缺点和错误的大会是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">苏共十大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">苏共十五大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">苏共二十大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">苏共二十二大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年4—5月间，毛泽东在中央政治局扩大会议和最高国务会议上作的报告是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《论联合政府》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《论人民民主专政》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《论十大关系》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《关于正确处理人民内部矛盾的问题》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年毛泽东提出处理中国共产党与民主党派关系要坚持的方针是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“合作发展，共同进步”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“联合执政，充分民主”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“肝胆相照，荣辱与共”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“长期共存，互相监督”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年9月，中共八大确定的社会主义改造完成以后中国社会的主要矛盾是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">工人阶级和资产阶级的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">封建主义和人民大众的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">人民对于经济文化迅速发展的需要同当前经济文化不能满足人民需要之间的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民日益增长的物质文化需要同落后的社会生产之间的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年9月，中共八大确定的经济建设的方针是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">在综合平衡中稳步前进</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">在加速发展中前进</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">坚决反对 “左”倾冒进</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">跨越式发展</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东认为，在社会主义建设中，基本的矛盾仍然是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">理论和实践、计划和生产之间的矛盾</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">生产关系和生产力之间的矛盾、上层建筑和经济基础之间的矛盾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济和文化、物质和精神之间的矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">革命和建设、改革和稳定之间的矛盾</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1952年2月，毛泽东在扩大的最高国务会议上发表的讲话是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《论持久战》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《新民主主义论》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《论十大关系》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《关于正确处理人民内部矛盾的问题》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;人民公社实行“政社合一”的体制，其基本特点被概括为（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“一平二调”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">统筹兼顾</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">公私兼顾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“一大二共”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1959年夏的庐山会议上，受到错误批判的党和国家领导人是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">刘少奇</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">邓小平</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">彭德怀</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">林彪</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1961年1月，中共八届九中全会决定对国民经济实行调整的八字方针是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“调整、稳定、发展、提高”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“改革、稳定、充实、完善”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“调整、巩固、充实、提高”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“改革、发展、创新、提高”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1962年初召开的，在三年调整时期具有关键性作用的扩大的中央工作会议被习惯地称为（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“七千人大会”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">西湖会议</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">南宁会议</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">广州会议</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志着毛泽东把社会主义社会中一定范围内存在的阶级斗争扩大化和绝对化，后来发展成为“以阶级斗争为纲”的会议是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共七届二中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共七届三中全会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中共八届十中全会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共九届三中全会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1963年至1965年间，中共中央领导进行了旨在解决干部作风和经济管理等方面问题的运动是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">知识分子的思想改造运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">城乡社会主义教育运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">意识形态领域的批判运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">革命文化思想宣传运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东发动文化大革命的主要理论基础是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">无产阶级专政下继续革命的理论</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">新民主主义革命的理论</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">社会主义改造的理论</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">人民群众的社会实践理论</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1965年11月，成为毛泽东发动“文化大革命”的导火线的事件是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于无产阶级文化大革命的决定》的发表</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《评新编历史剧〈海瑞罢官〉》的发表</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">社会主义教育运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">以阶级斗争为纲理论的提出</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1966年8月1日至12日，中共八届十一中全会制定并通过的决定是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中共中央通知》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《关于建国以来党的若干历史问题的决议》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《关于无产阶级文化大革命的决定》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《关于经济体制改革的决定》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1956年5月召开的政治局扩大会议决定设立的，实际上凌驾于中央政治局之上的组织是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“三支两军”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“斗批改”小组</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“中央文化革命小组”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“揪刘(刘少奇)火线”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1967年2月中旬，谭震林、陈毅、叶剑英、李富春、李先念等对文化大革命的错误做法提出强烈的批评，这次抗争被诬称为（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“二月逆流”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">右倾主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">官僚主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资产阶级司令部</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;林彪反革命集团阴谋夺取最高权力、策动反革命武装政变的事件，客观上宣告了（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“文化大革命”取得重要成果</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“文化大革命”的理论和实践的失败</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">反对党内“走资派”的失败</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">资产阶级司令部的破灭</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1974年初开始，江青等人把矛头指向周恩来的批判运动被称之为（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“一月风暴”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“批林批孔”运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“批周”运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">反右运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1975年1月，周恩来在四届人大的政府工作报告中重申的宏伟蓝图是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">实现人民民主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">实现科技强国</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">实现社会主义现代化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">实现四个现代化</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东不能容忍邓小平系统地纠正“文化大革命”的错误，在1975年底发动了（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反修防修教育运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">反对“左”倾机会主义运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“反击右倾翻案风”运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">维护“文化大革命”运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1976年清明节前后，爆发了悼念周恩来、反对“四人帮”的运动，被称之为（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“一月风暴”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">反对“组阁”运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">北京事变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">天安门事件</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;从1952年到1978年，工农业总产值平均年增长率为（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">8.2%</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">10.2%</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">5.2%</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">6.2%</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;在1956—1978年这一时期，最大的建设成就是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">初步建立了体系完整的基础设施</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">已经建立了社会主义现代化国家</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">初步建立了国防工业体系</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">基本建立了独立的、比较完整的工业体系和国民经济体系</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1964年，在周恩来总理的直接领导下，成功排演的大型音乐舞蹈史诗是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《红灯记》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《东方红》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《沙家浜》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《杜鹃山》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国高度重视发展体育事业，提出的指导方针是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“发展体育运动，扩大国际交流”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“发展体育运动，增强人民体质”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“积极参与比赛，增强人民体质”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“友谊第一，比赛第二”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国在尖端科学技术领域取得一系列重要的成就，1964年10月取得的成就是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">爆炸了第一颗原子弹</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">爆炸了第一颗氢弹</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">第一枚中远程导弹发射成功</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">第一颗人造地球卫星发射成功</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国在联合国获得合法席位的时间是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1965年10月</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">1971年10月</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1974年2月</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1978年5月</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1956年1月，中共中央召开关于知识分子问题会议，会议提出（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">提出“向现代科学进军”的口号</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">知识分子的绝大部分已经是工人阶级的一部分</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">要更加充分地发展科学和利用科学技术</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">制定科学技术发展远景规划</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1956年4月，毛泽东提出促进文化繁荣和科学进步的指导方针是（<b class="answer">AD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">艺术问题上的百花齐放</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">思想问题上的百家争鸣</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">文化问题上的百花齐放</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">学术问题上的百家争鸣</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1956年9月，中国共产党第八次全国代表大会的重要议程有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">毛泽东致开幕词</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">刘少奇作政治报告</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">周恩来作国民经济发展计划的报告</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">邓小平作关于修改党章的报告</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在中共八大的发言中，陈云提出的“三个主体，三个补充”的思想是（<b class="answer">ABD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国家经营和集体经营是主体，一定数量的个体经营为补充</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">计划生产是主体，一定范围的自由生产为补充</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">国家管理为主体，地方管理为补充</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">国家市场是主体，一定范围的自由市场为补充。</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;毛泽东在《关于正确处理人民内部矛盾的问题》的讲话中提出解决人民内部矛盾的方法主要有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">民主的方法</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">说服的方法</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">教育的方法</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“团结—批评—团结”的方法</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1957年4月27日，中共中央下发《关于整风运动的指示》，提出整风运动的内容是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">反对官僚主义</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">反对专制主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">反对宗派主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">反对主观主义</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;大跃进和人民公社化运动中“左”倾错严重泛滥的主要标志是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">高指标</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">瞎指挥</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">浮夸风</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“共产风”</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;20世纪50年代末期毛泽东坚持并大力宣传的 “三面红旗”是指（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">总路线</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">合作化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“大跃进”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">人民公社</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;毛泽东发动“文化大革命”的主观愿望是（<b class="answer">ABCD</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">抵御帝国主义的“和平演变”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">防止国内资本主义复辟</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">消除官僚主义和特权思想</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">推动群众参与国家事务的监督管理</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;20世纪60年代中期，毛泽东对当时国内阶级斗争形势以及党和国家的政治状况作出的估计是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">国际共产主义运动形势大好</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">许多单位的领导权已经不掌握在马克思主义者和人民群众手里</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中央出了修正主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">整个国家面临资本主义复辟的现实危险</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1968年10月，中共八届扩大的十二中全会加给刘少奇的罪名是（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“反革命”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“叛徒”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“内奸”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“工贼”</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中共九大闭幕后，按照毛泽东的部署，全国开展了“斗、批、改” 运动，具体内容是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">斗“走资本主义道路的当权派”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">斗“左倾机会主义”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">批“反动学术权威”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">改革不合理的规章制度</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立以来，党和毛泽东所犯的两个全局性的、长时间的严重“左”倾错误是（<b class="answer">AD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“大跃进”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">庐山会议</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">批斗“走资派”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">“文化大革命”</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在毛泽东指导下制定的文学艺术工作的方针是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">古为今用</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">洋为中用</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">百花齐放</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">推陈出新</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;于中国共产党第十次全国代表大会前后，在中央政治局内结成“四人帮”的是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">江青</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">张春桥</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">姚文元</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">王洪文</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在社会主义民主政治建设方面毛泽东提出要造成的生动活泼的政治局面是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">又有集中又有民主</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">又有纪律又有自由</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">又有统一意志又有个人心情舒畅、生动活泼</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">又有法制又有道德</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;1956年，社会主义基本制度刚刚确立，毛泽东就提出马克思主义同中国实际的“第二次结合”。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《论十大关系》的发表，是以毛泽东为主要代表的中国共产党人开始探索中国自己的社会主义建设道路的标志。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在社会主义制度下，人民的根本利益是一致的，已经不存在敌我矛盾和人民内部矛盾。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;毛泽东认为一切民族、一切国家的长处都要学，但不能一切照搬。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1957—1958年的反右派斗争是必要的，方法是得当的。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中共八大二次会议通过的“鼓足干劲、力争上游、多快好省地建设社会主义”的总路线被称为社会主义初级阶段的总路线。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;“文化大革命”是林彪、“四人帮”发动和领导的。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;1975年整顿实际上是后来拨乱返正的预演。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;粉碎江青反革命集团，结束“文化大革命”，迎来了社会主义现代化建设的新时期。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;“文化大革命”是一场由领导者错误发动，被反革命集团利用，给党、国家和各族人民带来严重灾难的内乱。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党在建国后犯严重错误的时候，其性质和宗旨都没有改变。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义是人类历史上全新的事业，需要经历一个相当长时间的探索过程。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义改造完成后，毛泽东很快就搞清了什么是社会主义，如何建设社会主义。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;建国后，在中国共产党和毛泽东犯了严重错误的历史时期，社会主义事业仍然取得了举世公认的重要成就。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;毛泽东指出：社会主义这个阶段又可能分为两个阶段，第一个阶段是不发达的社会主义，第二个阶段是比较发达的社会主义。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;粉碎“四人帮”后，主持中共中央工作的华国锋坚持的错误方针是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反击右倾翻案风</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“两个凡是”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“阶级斗争为纲”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">无产阶级专政下继续革命</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1977年8月召开的，宣告“文化大革命”结束，又继续肯定“文化大革命”的错误理论和实践的全国代表大会是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中共十大</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中共十一大</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共二十大</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共十三大</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1978年12月13日，邓小平在中央工作会议闭幕会上发表讲话的题目是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《完整地准确地理解毛泽东思想》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《尊重知识，尊重人才》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《解放思想，实事求是，团结一致向前看》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《实现四化，永不称霸》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志着中国进入改革开放和社会主义现代化建设的历史新时期的重要会议是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中共十一届三中全会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中共十二届三中全会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共十三届三中全会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共十四届三中全会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1980年2月，中共十一届五中全会决定予以彻底平反并恢复名誉的党和国家领导人是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">彭德怀</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">邓小平</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">薄一波</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">刘少奇</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1979年4月5日至28日召开的中共中央工作会议，决定对国民经济实行的方针是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“调整、改革、整顿、提高”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“改革、稳定、充实、完善”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“调整、巩固、充实、提高”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“改革、发展、创新、提高”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1979年9月，中共十一届四中全会提出要保障基层干部和农民因时因地制宜的自主权，发挥其主动性，全会通过的决议是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于经济体制改革的决定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《关于加快农业发展若干问题的决定》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《关于建国以来党的若干历史问题的决议》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《关于教育体制改革的决定》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1981年6月，中共十一届六中全会通过的重要决议是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于党的若干历史问题的决议》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《关于教育体制改革的决定》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《关于建国以来党的若干历史问题的决议》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《关于加强社会主义精神文明建设若干重要问题的决议》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1982年9月在中国共产党第十二次全国代表大会开幕词中，邓小平明确提出的重大命题是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">坚持四项基本原则</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发展社会主义市场经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">建设有中国特色社会主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">没有民主就没有社会主义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1986年9月，中共十二届六中全会作出《关于社会主义精神文明建设指导方针的决议》，阐述的主要内容是（<b class="answer">A</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会主义精神文明建设的战略地位、根本任务和基本方针</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">社会主义精神文明建设的发展步骤、根本任务和基本方针</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">社会主义精神文明建设的经济基础、根本任务和基本方针</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">社会主义精神文明建设的制度保证、根本任务和基本方针</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1987年10月，中国共产党第十三次全国代表大会提出的党在社会主义初级阶段的基本路线被概括为（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“一个中心、两个基本点”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“一化三改”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“一体两翼”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“三步走”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1987年10月中国共产党第十二届七中全会讨论并原则通过了中央制定的（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于科学技术体制改革的决定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《关于文化体制改革的决定》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《政治体制改革总体设想》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《党和国家领导制度的改革》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1989年6月，中共十三届四中全会选举的中共中央总书记是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">胡耀邦</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">赵紫阳</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">李鹏</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">江泽民</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;邓小平提出中国社会主义农业的发展会有两个飞跃，第一个飞跃是废除人民公社，实行家庭联产承包为主的责任制，第二个飞跃是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">发展集体经济</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发展个体经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">发展国有经济</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">发展合作经济</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1992年6月9日，江泽民在中央党校省部级干部进修班上发表的讲话，明确提出的一个重要论断是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">创新的关键在人才</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“社会主义市场经济体制”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">充分保证人民依法享受人权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“高增长，低通胀”</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1992年10月，中国共产党第十四次全国代表大会确立的在全党具有指导地位的理论是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">邓小平建设有中国特色社会主义理论</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">社会主义初级阶段理论</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">社会主义市场经济理论</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">社会主义改革开放理论</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1992年，以邓小平南方谈话和中共十四大为标志，中国社会主义改革开放和现代化建设事业所进入的新的发展阶段是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">从计划经济体制向多种经济体制转变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">从多种经济体制向单一经济体制转变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">从计划经济体制向社会主义市场经济体制转变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">从新民主主义经济体制向社会主义市场经济体制转变</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;关于正确处理改革、发展、稳定的关系，1994年5月，江泽民进一步明确提出（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">稳定是目的，改革是动力，发展是前提</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">稳定是动力，改革是前提，发展是目标</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">稳定是前提，改革是动力，发展是目标</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">稳定是任务，改革是动力，发展是前提</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1995年9月，江泽民在中共十四届五中全会上深刻阐述了正确处理好社会主义现代化建设中的（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">十大关系</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">人民内部矛盾问题</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">经济、政治和文化关系</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">十二大关系</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国社会主义改革开放和现代化建设的总设计师邓小平逝世于（<b class="answer">C</b>）</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">1995年2月19日</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1996年2月19日</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">1997年2月19日</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1998年2月19日</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国共产党第十五次全国代表大会的主题是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">高举毛泽东思想伟大旗帜，把建设有中国特色社会主义事业全面推向二十一世纪</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">高举邓小平理论伟大旗帜，把建设有中国特色社会主义事业全面推向二十一世纪</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">坚持“三个代表”重要思想，把建设有中国特色社会主义事业全面推向二十一世纪</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">坚持科学发展观，把建设有中国特色社会主义事业全面推向二十一世纪</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2001年12月11日，经过长达15年的艰苦谈判，标志着中国对外开放进入一个新阶段的重要事件是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国建立海南省</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国开放上海浦东新区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国正式加入世界贸易组织</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国举办亚洲博鳌论坛</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;根据“一国两制”构想，中国对香港恢复行使主权是在（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">1997年7月1日</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">1998年7月1日</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1999年7月1日</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">2000年7月1日</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;根据中共十五大的部署，从1998年末开始，中央决定开展“三讲”教育的内容是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">讲稳定、讲政治、讲正气</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">讲学习、讲大局、讲正气</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">讲学习、讲政治、讲和谐</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">讲学习、讲政治、讲正气</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2004年9月，中国十六届四中全会提出要全面落实并贯穿到发展的整个过程和各个方面的战略思想是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">科技强国战略</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">人才强国战略</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">科学发展观</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">构建社会主义和谐社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2005年10月，中国十六届五中全会审议通过的重要决定是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于完善社会主义市场经济体制若干问题的决定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《关于推进社会主义新农村建设的若干意见》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《关于解决农民工问题的若干意见》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《全面推进依法行政实施纲要》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2006年10月，中共十六届六中全会审议通过的重要决定是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于农业和农村工作若干重大问题的决定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《关于国有企业改革和发展若干重大问题的决定》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《公民道德建设实施纲要》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">《中共中央关于构建社会主义和谐社会若干重大问题的决定》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2008年8月至9月，在北京举办的圆了中国人百年梦想的重大体育赛事是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">第21界奥林匹克运动会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">第29界奥林匹克运动会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">世界大学生运动会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">世界园艺博览会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;2011年10月，中共十七届六中全会通过重要决定是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《关于加强党的执政能力建设的决定》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">《关于深化文化体制改革的若干意见》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">《中共中央关于深化文化体制改革推动社会主义文化大发展大繁荣若干重大问题的决定》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中国共产党章程（修正案）的决议》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;改革开放以来中国取得一切成绩和进步的根本原因，归结起来就是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">确立社会主义市场经济体制，实行改革开放政策</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">发展社会主义文化事业，建设社会主义精神文明</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">高度重视科学技术，实施科教兴国战略</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">开辟了中国特色社会主义道路，形成了中国特色社会主义理论体系</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;为了冲破“两个凡是”的严重束缚，邓小平提出（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">要完整地、准确地理解毛泽东思想的科学体系</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">毛泽东思想的精髓是实事求是</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“两个凡是”不符合马克思主义</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">要制定科学技术发展远景规划</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1978年12月，中共十一届三中全会的主要内容是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">彻底否定“两个凡是”的错误方针</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">高度评价关于真理标准问题的讨论</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">断然否定“以阶级斗争为纲”的指导思想</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">作出了把党和国家的工作重点转移到社会主义现代化建设上来和实行改革开放的战略决策</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1980年，中央决定设立的经济特区是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">深圳</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">珠海</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">汕头</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">厦门</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;在改革开放初期，逐步废除干部领导职务实际存在的终身制，采取积极推进干部队伍现代化的标准和要求是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">革命化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">年轻化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">知识化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">专业化</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1979年3月，邓小平在理论工作务虚会上提出的“四项基本原则”是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">坚持社会主义道路</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">坚持人民民主专政</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">坚持马克思列宁主义、毛泽东思想</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">坚持党的领导</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1981年6月，中共十一届六中全会决议指出，毛泽东思想的活的灵魂是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">实事求是</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">群众路线</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">独立自主</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">解放思想</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;《关于建国以来党的若干历史问题的决议》对毛泽东同志作出的评价是（<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">伟大的马克思主义者</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">伟大的无产阶级革命家、战略家和理论家</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">伟大的国际主义战士</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">伟大的民族主义者</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1984年10月，中共十二届三中全会通过的《关于经济体制改革的决定》的重要贡献是（<b class="answer">CD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">把农村改革作为重点任务</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">扩大地方管理权限</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">突破把计划经济同商品经济对立的观点</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">指出我国社会主义经济是在公有制基础上的有计划的商品经济</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1986年中共十二届六中全会提出，适应社会主义现代化需要培养“四有”公民，具体是指（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">有纪律</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">有理想</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">有道德</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">有文化</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中共十三大报告指出，我国正处在社会主义的初级阶段，这个论断包括的含义是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">我国社会已经是社会主义社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">我们必须坚持而不能离开社会主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">我国的社会主义社会还处在初级阶段</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">我们必须从这个实际出发，而不能超越这个阶段</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;1992年初，邓小平在南方谈话中指出，社会主义的本质是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">解放生产力，发展生产力</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">消灭剥削</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">消除两极分化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">最终达到共同富裕</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;邓小平指出，改革开放迈不开步子，要害是姓“资”还是姓“社”的问题，判断的标准，应该主要看（<b class="answer">BCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">是否有利于国家安全</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">是否有利于发展社会主义社会的生产力</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">是否有利于增强社会主义国家的综合国力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">是否有利于提高人民的生活水平</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;《关于加强社会主义精神文明建设若干重大问题的决议》提出精神文化建设的根本任务是（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">以科学的理论武装人，以正确的舆论引导人</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">以高尚的精神塑造人，以优秀的作品鼓舞人</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">培养有理想、有道德、有文化、有纪律的社会主义公民</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">提高社会生产力和人民的生活水平</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;以江泽民为主要代表的中国共产党人，创造性地回答了建设什么样的党、怎样建设党的问题，形成的“三个代表”重要思想是（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">始终代表中国先进生产力的发展要求</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">始终代表中国科技进步的发展要求</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">代表中国先进文化的前进方向</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">始终代表中国最广大人民的根本利益</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党第十七代表大会提出科学发展观的内涵是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">第一要义是发展</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">核心是以人为本</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">基本要求是全面协调可持续</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">根本方法是统筹兼顾</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;1976年10月，粉碎“四人帮”的胜利，挽救了中国共产党和中国的社会主义事业。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;从1978年5月开始的关于真理标准问题的大讨论，是继延安整风之后又一场马克思主义思想解放运动。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;《解放思想，实事求是，团结一致向前看》的讲话，是改革开放的第一个宣言书。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;“同分结合”的农村家庭联产承包责任制的普遍实行，促进了“政社合一”的农村人民公社体制的解体。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;只要坚持“四项基本原则”中党的领导一项，那就等于坚持了社会主义现代化建设的方向。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党第十二届三中全会制定了社会主义现代化建设“三步走”的战略部署。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;革命是解放生产力，改革也是解放生产力。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;四项基本原则是立国之本，改革开放是强国之路。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;基本路线要管一百年，动摇不得。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义市场经济是同社会主义基本制度结合在一起的。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;要坚持党要管党、从严治党，提高管党治党水平。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国的外交部署是，大国是关键、周边是首要、发展中国家是基础。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;社会主义荣辱观体现了社会主义道德的表层要求，是建设社会主义精神文明的普通规范。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;把中国建设成为创新型国家，要坚持走合作、引进和依靠外援的道路。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;没有科学发展就没有社会和谐，没有社会和谐也可以实现科学发展。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;当今世界正处在大发展大变革大调整时期，文化在综合国力竞争中的地位和作用更加凸显。 [<b class="answer">T</b>]</p></li><li><p><strong>（单选）</strong>&nbsp;口号不仅是浓缩的历史，还是影响人们思想观念、引导人们行为取向的方式之一。新中国成立以来，下列口号按出现的先后顺序排列正确的是（<b class="answer">B</b>）。</p></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">革命无罪，造反有理</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">发展才是硬道理</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">保证国家的、留足集体的、剩下都是自己的</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">三年超英，五年赶美</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">①②③④</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">④①③②</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">③④①②</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">①④③②</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列一组图片，主题最恰当的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">近代中国经济结构的变动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国工业化的曲折发展历程</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">民族资产阶级探索强国之路</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中国军事工业的产生和发展</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于新中国成立的意义，论述不正确的有（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">中国人民当家作主的时代已经到来</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">中国人民在政治上翻了身</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">国家实现了完全统一</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">为实现国家富强和人民共同富裕创造了前提</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国人民志愿军的首任司令员兼政治委员是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">朱德</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">彭德怀</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">林彪</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">刘伯承</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列不属于新中国成立初期面临的困难有（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">能不能保卫人民胜利的成果</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">能不能战胜严重的经济困难</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">能不能保持中国共产党的艰苦奋斗的作风</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">能不能打破苏联对华的孤立政策</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于新中国成立初期中国共产党和人民政府着重抓的工作论述不正确的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">实现了工业化</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">完成了土地制度的改革</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">肃清了国民党遗留在大陆的反动势力</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">废除了封建婚姻制度</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于新中国成立初期经济工作论述不正确的是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">没收了民族资本主义企业</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">没收官僚资本，在企业内部开展民主改革和生产改革</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">确立社会主义性质的国营经济在国民经济中的领导地位</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">初步建立起了集中统一的国家财政管理体制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列重大历史事件，排列先后顺序正确的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">提出过渡时期总路线</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">中共八大召开</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">“文化大革命”开始</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">“大跃进”运动开始</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">②①④③</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">④①③②</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">①②④③</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">③①②④</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列新中国发展史上的重要名词，出现先后顺序正确的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">“七千人大会”</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">“一边倒”</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">“百花齐放、百家争鸣”</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">“四项基本原则”</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">④②①③</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">①④③②</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">③①②④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">②③①④</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列毛泽东的重要论述，时间排列先后顺序正确的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">“我看美国、苏联是第一世界。中间派，日本、欧洲、加拿大，是第二世界。咱们是第三世界”</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">“最近几个月，中央政治局听了中央工业、农业、运输业、商业、财政等三十四个部门的工作汇报，从中看到一些有关社会主义建设和社会主义改造的问题。综合起来，一共有十个问题，也就是十大关系”</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">“在社会主义社会中，基本的矛盾仍然是生产关系和生产力之间的矛盾，上层建筑和经济基础之间的矛盾”</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">“从一九二七年到现在，我们的工作重点是在乡村，在乡村聚集力量，用乡村包围城市，然后取得城市。采取这样一种工作方式的时期现在已经完结。从现在起，开始了由城市到乡村并由城市领导乡村的时期”</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">③①④②</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">④②③①</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">①②③④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">②④③①</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1950年4月，毛泽东在全国政协常务委员会第三次会议上说：“现在把两国的友谊在条约上固定下来，我们可以放手搞经济建设。外交上也有利。为建设，也为外交，而外交也是为建设。我们是新起的国家，困难多，万一有事，有个帮手，这样可以减少战争的可能性。”这段话中的“条约”是指（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">《中华人民共和国和日本国和平友好条约》</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">《中苏友好同盟互助条约》</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">《双十协定》</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">《中华人民共和国和美利坚合众国关于建立外交关系的联合公报》</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;毛泽东说：正因为刘青山、张子善他们两人的地位高，功劳大，影响大，所以才要下决心处决他们。只有处决他们，才可能挽救二十个，二百个，二千个，二万个犯有各种不同程度错误的干部。这一论述针对的是新中国成立之初（<b class="answer">B</b>）中出现的问题。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">“五反”运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“三反”运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">土地改革运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">抗美援朝运动</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;以（<b class="answer">A</b>）为标志，中国形成了全方位、多层次、宽领域的对外开放格局。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">加入世界贸易组织</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">恢复在联合国的合法席位</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">1992年初邓小平发表南方谈话</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">1992年确定中国经济体制改革的目标是建立社会主义市场经济体制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;改革开放以来，随着社会的发展，出现了不少流行词语，下列各组中，都是从二十世纪八十年代开始流行的是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">阶级斗争  一国两制   无私奉献</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">体制改革   中国特色  经济特区</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">市场经济   勤俭节约  休闲娱乐</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">和谐文明   注重环保  小康社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列关于中共八大和中共十一届三中全会的论述，正确的有（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">都体现了实事求是的精神</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">都明确了经济建设这个中心任务</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">都提出要实行改革开放</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">有内在的继承性</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">①②④</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">①②③</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">②③④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">①③④</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;“生产队由队长同一个个农户签订合同，合同规定出生产指标和给这个农户的报酬。这意味着他们可以多劳多得。”这句话描述的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">土地改革</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">三大改造</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">人民公社化运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">家庭联产承包责任制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中国从新民主主义社会向社会主义社会转变的开端是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">社会主义改造的基本完成</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">过渡时期总路线的公布</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中华人民共和国成立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">中共八大召开</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;二十世纪七十年代中国以（<b class="answer">B</b>）为突破口，带动了中国同西方国家的建交高潮，为后来实行对外开放战略创造了有利的国际环境。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">恢复在联合国的合法席位</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中美关系正常化</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中日建交</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">提出“三个世界”划分的理论</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;标志着中国半殖民地半封建社会结束的事件是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">抗日战争的全面胜利</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">人民解放军解放南京</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中华人民共和国的成立</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">社会主义改造的基本完成</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;股票是一种有价证券，至今已有将近四百年的历史，是商品经济及生产力发展的产物。下面三幅图反映了（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">1952年合作社股票</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">1956年江宁县公私合营股票</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">2008年祥符林业专业合作社股权证</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">股票是公有制的产物</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">社会主义所有制的单一性</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">经济政策具有时代特色</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">建国后我国一贯实行股份制</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列不属于新中国建国后前三十年出现的英雄模范人物的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">王进喜</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">雷锋</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">张思德</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">焦裕禄</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列重大事件，时间排列前后顺序正确的是（<b class="answer">D</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">开始进行抗美援朝战争</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">国民经济恢复工作完成</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">国民经济第一个五年计划开始实施</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">《中苏友好同盟互助条约》签订</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">④③①②</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">②④③①</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">①②③④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">④①②③</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;新中国成立初期，领导开展的继续完成新民主主义革命任务的运动有（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">土地改革运动</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">“三反”运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“五反”运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">开始进行对生产资料私有制的社会主义改造</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1998年初，在联合国安理会上中国同意对伊拉克进行武器核查，但在讨论美国提出的动用武力解决核查危机的议案时，投了反对票。这表明中国在新时期（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">开展以联合国为中心的外交活动</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">积极维护地区稳定和世界和平</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">参与符合联合国宪章的维和行动</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">奉行独立自主的和平外交政策</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">①④</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">②④</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">①②④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">①②③</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列有关论述，时间排列先后顺序正确的是（<b class="answer">C</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">“西方侵略者几百年来只要在东方一个海岸上架起几尊大炮就可霸占一个国家的时代一去不复返了”</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">“一定要努力把党内外、国内国外的一切积极的因素，直接的、间接的积极因素，全部调动起来，把我国建设成为一个强大的社会主义国家”</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">“解放思想，实事求是，团结一致向前看”</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">“计划多一点还是市场多一点，不是社会主义与资本主义的本质区别”</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">③①④②</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">②①④③</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">①②③④</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">④②①③</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;《关于建国以来党的若干历史问题的决议》指出：“我们现在赖以进行现代化建设的物质技术基础，很大一部分是在这个期间建设起来的；全国经济文化建设等方面的骨干力量和他们的工作经验，大部分也是在这个期间培养和积累起来的。这是这个期间党的工作的主导方面。”“这个时期”是指（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">国民经济恢复时期</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">基本完成社会主义改造的时期</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">全面建设社会主义时期</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">改革开放和社会主义现代化建设的新时期</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;1951年至1952年开展的“三反”运动的内容是（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">反贪污、反偷税漏税、反盗窃国家经济情报</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">反贪污、反浪费、反官僚主义</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">反行贿、反盗骗国家财产、反偷工减料</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">反腐败、反浪费、反官僚主义</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;中华人民共和国成立后的新民主主义社会属于（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会主义体系的过渡性质的社会</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">资本主义体系的过渡性质的社会</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">共产主义体系的过渡性质的社会</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">民主主义体系的过渡性质的社会</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下表是《中国青年报》“建国60周年特别报道”：《变迁：从“一五”到“十一五”》的部分主题词摘要，其中“八五”处应该填写（<b class="answer">B</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:left">“一五” （1953 一1957）：工业增速  超英赶美</td></tr><tr><td style="text-align:center">②</td><td style="text-align:left">“二五” （1958 — 1962）：大跃进  大倒退</td></tr><tr><td style="text-align:center">③</td><td style="text-align:left">“八五” （1991 — 1995）：________</td></tr><tr><td style="text-align:center">④</td><td style="text-align:left">“十一五”（2006 — 2010）：改革开放  坚定不移</td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">走向改革开放</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">小平南巡改革潮涌</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">改革闯关治理整顿</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">指令计划退场市场配置资源</div></td></tr></tbody></table><ul><li><strong>（单选）</strong>&nbsp;下列四张纪念邮票以党代会为主题，其关键词表述最恰当的一组是（<b class="answer">A</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">主要矛盾        走自己的路    市场经济    邓小平理论</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">建设社会主义    中国特色      初级阶段    科学发展</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">主要矛盾        改革开放      计划经济    一国两制</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">经济建设        国企改革      市场经济    基层民主</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立后，中国人民经过半个多世纪的艰苦奋斗取得的巨大成就主要体现在（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">从争取经济独立到建设社会主义现代化国家</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">从赢得政治独立到建设社会主义民主政治</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">从发展新民主主义文化到建设中国特色社会主义文化</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">从打破封锁到全方位对外开放，从“小米加步枪”到逐步实现国防现代化</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列关于新中国成立的重大意义，论述正确的有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">结束了帝国主义压迫、奴役中国人民的历史，结束了本国封建主义、官僚资本主义统治的历史</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">结束了中国军阀割据、战乱频仍、匪患不断的历史</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">为实现由新民主主义向社会主义的过渡创造了政治前提</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国共产党成为全国范围内的执政党</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立前后，提出的重要外交方针有（<b class="answer">ABC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“另起炉灶”</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">“打扫干净屋子再请客”</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“一边倒”</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">和平崛起</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立初期，面临的困难主要有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">能不能巩固新生的人民政权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">能不能恢复和发展国民经济</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">能不能巩固民族独立，维护国家主权和安全</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">能不能经受住执政的考验</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立初期，实行的巩固民族独立的重要措施有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">废除帝国主义国家依据不平等条约在中国享有的一切特权</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">收回了外国列强在中国的兵营</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">收回了海关的治权</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">进行了抗美援朝运动</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立初期，实行的加强中国共产党自身建设的重要措施有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">对干部和解放军普遍进行城市政策和入城纪律的教育</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">在全党范围开展整风、整党运动</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">开展“三反”运动</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">开展“五反”运动</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;社会主义改造中出现的问题主要表现在（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">要求过急</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">工作过粗</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">改变过快</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">形式过于简单划一</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;新中国成立至今的历史，经历了的发展阶段是（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会主义改造基本完成的七年</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">开始全面建设社会主义的十年</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">“文化大革命”的十年</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">改革开放和社会主义现代化建设新时期</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;关于1957到1978年中共十一届三中全会前的新中国历史，论述正确的有 （<b class="answer">AB</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">建立了独立的比较完整的工业体系和国民经济体系</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">工业交通、基本建设和科学技术方面取得了一批重要成就</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">“文化大革命”时期我国粮食生产保持了比较稳定的增长</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">“大跃进” 运动造成了新中国成立以后最严重的挫折和损失</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列关于中国共产党第一代中央领导集体论述正确的有（<b class="answer">ABCD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">中国共产党第一代中央领导集体领导中国人民确立了社会主义制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国共产党第一代中央领导集体创立了毛泽东思想</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">中国共产党第一代中央领导集体创立了民族区域自治制度</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">中国共产党第一代中央领导集体是探索中国自己的社会主义建设道路的开创者</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列属于中国基本政治制度的有（<b class="answer">BCD</b>） 。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">按劳分配为主、多种分配方式并存的分配制度</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">中国共产党领导的多党合作和政治协商制度</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">民族区域自治制度</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">人民代表大会制度</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;中国共产党第一代中央领导集体领导全国人民实现了中国（<b class="answer">BC</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="wrong">从高度集中的计划经济体制到充满活力的社会主义市场经济体制的历史性转变</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">从新民主主义革命到社会主义革命和建设的历史性转变</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">从半殖民地半封建社会到民族独立、人民当家作主新社会的历史性转变</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="wrong">从封闭半封闭到全方位开放的历史性转变</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列关于中国共产党三代中央领导集体论述正确的有（<b class="answer">ACD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">第一代中央领导集体领导中国人民完成了从新民主主义向社会主义的过渡</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">第二代中央领导集体粉碎了江青反革命集团，从危难中挽救了党</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">第三代中央领导集体实现了香港、澳门回归祖国</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">第二代中央领导集体开创了建设中国特色社会主义的道路</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;下列关于新中国成立以来的历史，论述正确的有（<b class="answer">AD</b>）。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">“文化大革命”是一场由领导者错误发动，被反革命集团利用，给党、国家和各族人民带来严重灾难的内乱</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="wrong">粉碎江青反革命集团的胜利，揭开了改革开放新时期的序幕</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="wrong">中共十一届三中全会的召开，标志着中国共产党确立了实事求是的思想路线</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">到1952年底，国民经济得到全面恢复和初步发展</div></td></tr></tbody></table><ul><li><strong>（多选）</strong>&nbsp;回顾新中国成立以来社会主义建设的历程，可以得出的正确结论主要有（<b class="answer">ABCD</b>）等。</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:left"><div solution="correct">社会主义经济建设必须从我国国情出发，量力而行</div></td></tr><tr><td style="text-align:center">B</td><td style="text-align:left"><div solution="correct">社会主义生产关系的变革和完善必须适应于生产力的状况，有利于生产的发展</div></td></tr><tr><td style="text-align:center">C</td><td style="text-align:left"><div solution="correct">在剥削阶级作为阶级消灭以后，阶级斗争已经不是主要矛盾</div></td></tr><tr><td style="text-align:center">D</td><td style="text-align:left"><div solution="correct">符合中国国情、符合中国人民的根本利益的政治制度，只能是工人阶级领导的、以工农联盟为基础的人民民主专政的社会主义国家</div></td></tr></tbody></table><ul><li><p><strong>（判断）</strong>&nbsp;中华人民共和国是工人阶级领导的、以工农联盟为基础的人民民主专政的社会主义国家。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中华人民共和国的政体是人民代表大会制度。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中华人民共和国的国家结构形式是统一的多民族国家和在单一制国家中的民族区域自治制度。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中华人民共和国的成立，标志着半殖民地半封建社会的结束和新民主主义社会在全国范围内的建立。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中华人民共和国的成立，标志着新民主主义革命阶段的基本结束和社会主义革命阶段的开始。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中共十一届三中全会以来，中国逐步形成了坚持中国共产党的领导、人民当家作主、依法治国有机统一的社会主义民主政治建设的基本框架。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;“文化大革命”时期，是指1966年到1978年中共十一届三中全会召开前夕的时期。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新中国成立时，面临的主要任务是进行大规模的社会主义改造和有计划的经济建设。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;新中国成立初期，针对党政干部中存在的腐化问题，开展了“五反”运动。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国特色社会主义文化是从新民主主义文化发展而来的。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;在中国革命、建设和改革问题上，最根本的就是要坚持把马克思主义同我国实际相结合，坚定不移地走自己的路。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中国共产党第二代中央领导集体创立了“三个代表”重要思想。 [<b class="answer">F</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;全面建设社会主义十年取得的成就是这个期间中国共产党工作的主导方面。 [<b class="answer">T</b>]</p></li><li><p><strong>（判断）</strong>&nbsp;中华人民共和国的成立，扭转了近代以来中国人民反抗外来侵略的屡败局面。 [<b class="answer">T</b>]</p></li></ul><script>    for (const item of document.querySelectorAll('div[solution]')) {        item.parentNode.parentNode.setAttribute(item.getAttribute('solution'), '');    }</script></body></html>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>免 Root 注入乐跑 APP</title>
      <link href="/posts/26085/"/>
      <url>/posts/26085/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><div class="note warning simple"><p>这篇博客已摆烂，可能对您的参考价值不大</p></div><p>  运动本为一件快乐的事，但当运动变为一项强制性的任务之后，难免会引起人的反感。步道乐跑，一款主打校园运动健康的跑步锻炼 APP，成为了不少大学生手机中的「必备应用」，强制跑步、在限速的同时还要边看地图边寻找打卡点，有何 “乐跑” 可言？</p><p>  身为一名大学生的我，同样深受其害。作为一名玩机爱好者，自然要尝试一下破解这款软件，做到足不出户，就能完美完成每天的跑步任务。</p><span id="more"></span><hr><h2 id="背景-4">背景</h2><p><img src="Fake_Location.png" alt=""></p><p>  在 Root 或 Xposed 的环境下，早有人实现了通过修改 GPS 定位信息模拟移动的模块，比如 <a href="http://apps.lerist.cc:81/fakelocation">Fake Location</a> 就是一款非常经典的位置模拟应用。</p><p>  奈何这些软件或模块大多闭源，有的甚至还收费（比如刚刚提到的 Fake Location），让他们运行在高权限之下多少有些不放心。现如今想要获得一台 Root 的 Android 手机也变得越来越难，于是产生了重新打包乐跑 APP 实现注入的想法。</p><h2 id="初步测试">初步测试</h2><p>  首先初步检查 APK，发现是加固的，导致重新打包 dex 添加 Xposed Hook 变得比较困难，遂采用另一种不需要修改 <code>classes.dex</code> 和 <code>AndroidManifest.xml</code> 的注入方式</p><p><img src="%E7%BB%91%E7%BB%91%E5%8A%A0%E5%9B%BA.png" alt=""></p><p>  下面隆重介绍今天的主角：<a href="https://frida.re/docs/gadget/">Frida Gadget</a>。Frida Gadget 是著名轻量级 Hook 框架在无 Root 设备上的一种实现，通过 ELF 注入的方式，将自己的库打包到目标应用的链接库中，从而绕过没有高权限的限制。</p><p>  首先启动步道乐跑 APP，在终端中查看进程：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> root@localhost:~</span><br><span class="line"># ps -ef | grep com.lptiyu.tanke</span><br><span class="line">u0_a259   2634   791  0 16:08 ?        00:00:02 com.lptiyu.tanke:mult</span><br><span class="line">u0_a259  26966   791  8 16:02 ?        00:03:50 com.lptiyu.tanke</span><br><span class="line">root     29796 29108  2 16:46 pts/4    00:00:00 grep --color com.lptiyu.tanke</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [3, 4], 'red');"></script><p>  发现只有两个进程，传闻绑绑加固使用的是父子进程互相附加的方式防止被 ptrace，于是继续查看两个进程的附加信息：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> root@localhost:~</span><br><span class="line"># cat /proc/$(pidof com.lptiyu.tanke)/status</span><br><span class="line">Name:   om.lptiyu.tanke</span><br><span class="line">Umask:  0077</span><br><span class="line">State:  R (running)</span><br><span class="line">Tgid:   26966</span><br><span class="line">Ngid:   0</span><br><span class="line">Pid:    26966</span><br><span class="line">PPid:   791</span><br><span class="line">TracerPid:      0</span><br><span class="line">Uid:    10259   10259   10259   10259</span><br><span class="line">Gid:    10259   10259   10259   10259</span><br><span class="line">........</span><br><span class="line"></span><br><span class="line"> root@localhost:~</span><br><span class="line"># cat /proc/$(pidof com.lptiyu.tanke:mult)/status</span><br><span class="line">Name:   tiyu.tanke:mult</span><br><span class="line">Umask:  0077</span><br><span class="line">State:  S (sleeping)</span><br><span class="line">Tgid:   2634</span><br><span class="line">Ngid:   0</span><br><span class="line">Pid:    2634</span><br><span class="line">PPid:   791</span><br><span class="line">TracerPid:      0</span><br><span class="line">Uid:    10259   10259   10259   10259</span><br><span class="line">Gid:    10259   10259   10259   10259</span><br><span class="line">........</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [10, 24], 'red');"></script><p>  <code>TracePid</code> 值都为 0，似乎并不像传说中的那样通过父子进程相互附加俩防止被 ptrace，这样一来瞬间就变得开朗了许多。接着使用 strace 命令追踪 APP 启动时对各个 so 库的加载情况，执行下面的命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跟踪          进程 ID      追踪 fork             重定向输出到文件</span></span><br><span class="line">strace    -p $(pidof zygote)    -f     2&gt; /sdcard/com.lptiyu.tanke.strace.txt</span><br></pre></td></tr></tbody></table></figure><p>  为了避免多余的输出（执行命令后所有由 zygote 进程 fork 出的进程都会被追踪），最好通过 ssh 或在 adb shell 中远程执行此命令，接着启动乐跑 APP，<strong>等待 Activity 加载完毕</strong>后结束跟踪，然后执行下面的命令获取其 <strong>pid</strong>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出进程      查找乐跑 APP</span></span><br><span class="line">  ps -ef | grep com.lptiyu.tanke</span><br></pre></td></tr></tbody></table></figure><p><img src="%E8%8E%B7%E5%8F%96pid.png" alt=""></p><p>  分析刚刚追踪到的输出文件，虽然文件很长，我们只需要关注其中乐跑 APP 的进程（通过刚刚获取到的 pid）加载链接库的部分就可以了，下面是提取出来的关键记录：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libSecShell.so", O_RDONLY|O_LARGEFILE &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 45</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libSecShell.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 45</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libmmkv.so", O_RDONLY|O_LARGEFILE &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 56</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libmmkv.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC &lt;unfinished ...&gt;</span><br><span class="line">[pid 10662] &lt;... openat resumed&gt;)       = 56</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libjni_utils.so", O_RDONLY|O_LARGEFILE) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libjni_utils.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libtrace_utils.so", O_RDONLY|O_LARGEFILE) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libtrace_utils.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libsqlcipher.so", O_RDONLY|O_LARGEFILE) = 49</span><br><span class="line">[pid 10662] openat(AT_FDCWD, "/data/app/com.lptiyu.tanke-NtkLRPm8gDOU3fq_rgpZsw==/lib/arm/libsqlcipher.so", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 49</span><br></pre></td></tr></tbody></table></figure><h2 id="尝试注入">尝试注入</h2><p>  既然是要注入，我们肯定希望自己的代码能够尽快执行，可以看到乐跑 APP 首先会加载 <code>libSecShell.so</code>，然后依次是 <code>libmmkv.so</code>、<code>libjni_utils.so</code>、<code>libtrace_utils.so</code> 和 <code>libsqlcipher.so</code>。首先尝试对 <code>libSecShell.so</code> 进行注入，这里使用我封装的工具：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> lief</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重打包 so 文件</span></span><br><span class="line">os.system(<span class="string">f'readelf -d <span class="subst">{argv[<span class="number">1</span>]}</span> | grep NEEDED'</span>)</span><br><span class="line">elf_type = re.search(</span><br><span class="line">    <span class="string">'file format elf(32|64)'</span>,</span><br><span class="line">    sp.Popen(</span><br><span class="line">        <span class="string">f'objdump -a <span class="subst">{argv[<span class="number">1</span>]}</span>'</span>, stdout=sp.PIPE, shell=<span class="literal">True</span></span><br><span class="line">    ).stdout.read().decode()</span><br><span class="line">).group(<span class="number">1</span>)</span><br><span class="line">shutil.copyfile(<span class="string">f'arm<span class="subst">{elf_type}</span>/libgadget.so'</span>, <span class="string">'./libgadget.so'</span>)</span><br><span class="line">libso = lief.parse(argv[<span class="number">1</span>])</span><br><span class="line">libso.add_library(<span class="string">'libgadget.so'</span>)</span><br><span class="line">libso.write(argv[<span class="number">1</span>])</span><br><span class="line">os.system(<span class="string">f'readelf -d <span class="subst">{argv[<span class="number">1</span>]}</span> | grep NEEDED'</span>)</span><br></pre></td></tr></tbody></table></figure><p>  执行 <code>python repack.py libSecShell.so</code>，出现报错信息，似乎是因为 <code>libSecShell.so</code> 没有任何依赖所导致（或许这么说不太准确？），接下来尝试下一个库，将 <code>libmmkv.so</code> 提取到电脑，<a href="https://github.com/frida/frida/releases">下载</a> Frida Gadget，然后使用 <a href="https://github.com/lief-project/LIEF">LIEF</a> 工具进行重新打包（用上面封装好的也可以，这里为了展示细节在 Terminal 中分步完成）：</p><p><img src="ELF%E6%B3%A8%E5%85%A5.png" alt=""></p><p>  此时刚刚下载的 <code>libgadget.so</code> 已经被添加到 <code>libmmkv.so</code> 的依赖中了，应用启动时会将其一同加载，我们也就能在它的构造方法里面搞点事情。</p><p>  接下来编写配置文件，新建一个 <code>libgadget.config.so</code> 注意一定要和刚刚添加的依赖库同名，编辑内容如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="string">"interaction"</span>: {</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"script"</span>,  <span class="comment">// 脚本模式</span></span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/data/local/tmp/script.js"</span>,  <span class="comment">// 脚本文件路径，注意一定要放在有读权限的地方</span></span><br><span class="line">    <span class="string">"on_change"</span>: <span class="string">"ignore"</span>  <span class="comment">// 脚本被修改时的行为，若为 "reload" 则会重新加载</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  附 script.js 代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line">-</span><br><span class="line">Java.perform(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">   <span class="keyword">let</span> Log = Java.use(<span class="string">"android.util.Log"</span>);</span><br><span class="line">   Log.i(<span class="string">"frida-lief"</span>, <span class="string">"OHHHHHHHHHHHHHHHHHHHHHHH"</span>);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>  将 <code>libgadget.so</code>、<code>libgadget.config.so</code> 和重新打包的 <code>libmmkv.so</code> 一同添加/覆盖到安装包中，重新签名后安装，同时观察到 Logcat 中成功输出：</p><p><img src="Logcat%E8%BE%93%E5%87%BA.png" alt=""></p><p>  再看屏幕，却发现 APP 迟迟没有启动，继续查看 Logcat，发现循环输出报错信息，原因尚不明：</p><p><img src="%E5%BE%AA%E7%8E%AF%E6%8A%A5%E9%94%99.png" alt=""></p><h2 id="参考-8">参考</h2><p>  <a href="https://bbs.pediy.com/thread-229970.htm">[翻译]在未root的设备上使用frida-外文翻译-看雪论坛-安全社区</a></p><p>  <a href="https://frida.re/docs/gadget/">Gadget | Frida • A world-class dynamic instrumentation framework</a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 逆向 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>初探 Xposed：Kiwi / Chrome 之「问」</title>
      <link href="/posts/3969949975/"/>
      <url>/posts/3969949975/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  一月中旬把手机升级到 Android 11 以后，无法忍受 QQ 下载的文件不能正常读取的问题（Android 11 不允许普通应用读取 <code>/sdcard/Android/data</code>，而 QQ 把下载的文件放在这里），于是决定将手机 root。</p><p>  正好赶上需要对应用加钩子注入的项目，root 机在手，于是来学一学 Xposed 模块的开发，做几个有意思的模块来玩玩，顺便在此做个记录。</p><div class="note info simple"><p>  本文迁移自旧博客，文章写就时我算是刚刚接触 Xposed 开发，内容难免有纰漏错误之处，作为一份自己学习成长中珍贵的记录，所有错误之处均未作修改，只是在下方添加了简单批注</p></div><p>  玩机这么长时间，却一直没有找到一款合适的 Android 平台浏览器，你可能在一些网站上看到过 Quark、Via 或者 Chrome、Firefox 等浏览器的相关推荐，但就使用体验来看，它们的功能都有一定缺陷，下表中展示了我用过的一些浏览器：</p><style>.custom-table td {    font-size: smaller;}</style><div class="custom-table"><table><thead><tr><th style="text-align:center">浏览器</th><th style="text-align:left">存在问题</th></tr></thead><tbody><tr><td style="text-align:center">QQ 浏览器、百度浏览器</td><td style="text-align:left">首屏广告和不断的推送令人难以忍受 🤮</td></tr><tr><td style="text-align:center">系统自带</td><td style="text-align:left">同样存在推送，且不支持插件</td></tr><tr><td style="text-align:center">Via、Soul 等「轻量级」浏览器</td><td style="text-align:left">标签页开多了非常卡，插件系统不够完善</td></tr><tr><td style="text-align:center">Quark</td><td style="text-align:left">JavaScript 引擎性能不行（貌似），而且越做越臃肿，不支持自定义插件</td></tr><tr><td style="text-align:center">Chrome、Kiwi、Firefox</td><td style="text-align:left">打开外部应用之前不询问</td></tr></tbody></table></div><p>  这样看来，改造 Kiwi / Chrome 系浏览器似乎是一种最容易实现的优化方式了，监控其打开外部应用的行为，在必要时给予询问或阻止，就能够将其改造成各方面功能都非常强大的 Android 平台浏览器。</p><h2 id="准备工作-3">准备工作</h2><h3 id="新建工程">新建工程</h3><p>  我选择在 Android Studio 上进行模块开发，首先新建一个工程，由于我们的模块不需要界面，所以选择 Empty Activity 或者 No Activity，然后下一步，设置好 SDK 版本和应用包名，确定，等待工程创建完成</p><p><img src="%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B.png" alt=""></p><p>  如果 Gradle 一直不能成功下载，可以尝试更换国内源或者手动下载依赖的 zip 包</p><blockquote><p>注：<s>如果 Gradle 一直不能成功下载，换个好点的梯子就行了</s></p></blockquote><h3 id="环境配置">环境配置</h3><p>  在左上角切换到 Project 视图，打开 <code>app/build.gradle</code>，按照下图添加配置，然后重新同步：</p><p><img src="%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE.png" alt=""></p><blockquote><p>注：并不需要添加 <code>:api:sources</code>，一个 <code>:api</code> 即可</p></blockquote><p>  然后在菜单选择 Run =&gt; Edit Configurations…，在打开的界面中将右上角 Allow parallel run 的勾取消。</p><p><img src="%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE-%E8%8F%9C%E5%8D%95.png" alt=""></p><p><img src="%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE-%E5%85%B3%E9%97%AD.png" alt=""></p><blockquote><p>注：这个是否勾选没有影响，在新版 Android Studio 中倒是要勾选 <code>Always install with package manager</code></p></blockquote><p>  最后点击 OK 保存退出即可。</p><h2 id="模块编写">模块编写</h2><h3 id="完善模块信息">完善模块信息</h3><p>  环境配置完成之后，打开 <code>AndroidManifest.xml</code>，添加 3 个 meta-data 标签，修改后的文件如下：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"mufanc.edxp.kiwi"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/Theme.问"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">"@xml/backup_descriptor"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"xposedmodule"</span> <span class="attr">android:value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"xposeddescription"</span> <span class="attr">android:value</span>=<span class="string">"打开其他应用前先询问"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"xposedminversion"</span> <span class="attr">android:value</span>=<span class="string">"82"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th style="text-align:center">字段名</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">xposedmodule</td><td style="text-align:center">表示这是一个 Xposed 模块</td></tr><tr><td style="text-align:center">xposeddescription</td><td style="text-align:center">模块的描述信息</td></tr><tr><td style="text-align:center">xposedminversion</td><td style="text-align:center">支持的最小 Xposed API 版本</td></tr></tbody></table><blockquote><p>注：如果使用 <a href="https://github.com/LSPosed/LSPosed">LSPosed</a>，建议增加一项 <code>xposedscope</code> 指定作用域</p></blockquote><p>  如果现在就想编译测试，还需要先执行<a href="./#entry-class">下面这步配置</a></p><h3 id="设定挂钩逻辑">设定挂钩逻辑</h3><p>  接下来开始编写代码，在 MainActivity.java 同级目录下创建一个 <code>IntentHook</code> 类（类名可以随便定），并实现 <code>IXposedHookLoadPackage</code> 接口（相关 import 已省略）:</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntentHook</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String targetPackageName = <span class="string">"com.kiwibrowser.browser"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        <span class="comment">// pass</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  在这个方法中，我们可以自定义 Xposed 对各个 APP 的<ruby>挂钩<rt>Hook</rt></ruby>逻辑，我这里使用 <code>findAndHookMethod</code> 来抓取跳转到其它 Activity 的方法，关于更多 API 的使用，可以参考<a href="https://api.xposed.info/reference/packages.html">官方文档</a>中给出的说明和示例：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">XposedHelpers.findAndHookMethod(</span><br><span class="line">    <span class="string">"android.app.IActivityTaskManager$Stub$Proxy"</span>,  <span class="comment">// 待注入钩子的类名</span></span><br><span class="line">    lpparam.classLoader,  <span class="comment">// 类加载器</span></span><br><span class="line">    <span class="string">"startActivity"</span>,  <span class="comment">// 待注入的方法</span></span><br><span class="line">    <span class="comment">// 根据参数列表确定重载方法</span></span><br><span class="line">    XposedHelpers.findClass(<span class="string">"android.app.IApplicationThread"</span>, lpparam.classLoader),</span><br><span class="line">    String.class,</span><br><span class="line">    String.class,</span><br><span class="line">    Intent.class,</span><br><span class="line">    String.class,</span><br><span class="line">    android.os.IBinder.class,</span><br><span class="line">    String.class,</span><br><span class="line">    <span class="keyword">int</span>.class,</span><br><span class="line">    <span class="keyword">int</span>.class,</span><br><span class="line">    XposedHelpers.findClass(<span class="string">"android.app.ProfilerInfo"</span>, lpparam.classLoader),</span><br><span class="line">    android.os.Bundle.class,</span><br><span class="line">    <span class="comment">// 处理逻辑（注入）</span></span><br><span class="line">    <span class="keyword">new</span> XC_MethodHook() {</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="meta">@SuppressLint("QueryPermissionsNeeded")</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">            Intent intent = (Intent) param.args[<span class="number">3</span>];  <span class="comment">// 获得启动 Activity 的 Intent 实例</span></span><br><span class="line">            ComponentName componentName = intent.resolveActivity(activity[<span class="number">0</span>].getPackageManager());  <span class="comment">// 取得目标应用包名</span></span><br><span class="line">            <span class="keyword">if</span> (componentName != <span class="keyword">null</span> &amp;&amp; !componentName.getPackageName().equals(targetPackageName)) {  <span class="comment">// 如果包名不是自己则发动拦截</span></span><br><span class="line">                <span class="comment">// 输出 Intent 相关信息</span></span><br><span class="line">                Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Calling package: "</span> + componentName.getPackageName());</span><br><span class="line">                Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Intent: "</span> + intent.toUri(<span class="number">0</span>));</span><br><span class="line">                param.setResult(<span class="number">0</span>);  <span class="comment">// 拦截（直接返回 0）</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>  这里设置的逻辑是输出 Intent 相关信息，然后默认拦截，并没有达到我们想要的「询问」效果，所以还要进行进一步的处理，这里先放一放，后续再来完善。</p><h3 id="创建资源文件">创建资源文件</h3><p>  接下来设定弹窗样式，首先找来一张<ruby>点九图<rt>Nine-Patch</rt></ruby>，标注好四个拉伸范围后放在 <code>res/drawable-nodpi</code> 目录下：</p><p><img src="%E7%82%B9%E4%B9%9D%E5%9B%BE.png" alt=""></p><p>  点九图是一种可拉伸的位图，可用作视图的背景，Android 会自动调整图形的大小以适应视图的内容（效果见上图），常见的应用如 QQ 聊天气泡就是点九图的一个经典应用案例。</p><p>  接下来实现一个 Sample，编写布局文件，然后在 MainActivity 中引用：</p><figure class="highlight xml"><figcaption><span>activity_main.xml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@drawable/bilibili"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:ignore</span>=<span class="string">"UselessParent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_margin</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">"20sp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">"@string/produced_by_mufanc"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><figcaption><span>MainActivity.java</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mufanc.edxp.kiwi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  或使用另一种动态加载控件的方式：</p><figure class="highlight java"><figcaption><span>MainActivity.java</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mufanc.edxp.kiwi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        LayoutInflater.from(<span class="keyword">this</span>).inflate(</span><br><span class="line">            R.layout.activity_main,</span><br><span class="line">            (ViewGroup) getWindow().getDecorView()</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  编译、打包、安装，打开后效果如下：</p><img src="首次编译.jpg" style="width: 50%;"><blockquote><p>注：这个 padding 和字号放到现在就要掀桌了（</p></blockquote><h3 id="加载资源文件">加载资源文件</h3><p>  Xposed 注入之后，我们写的这些代码实际上是以目标应用的身份运行的，所以不能采用传统的资源加载方式（比如使用 R 类来定位资源）来加载模块中的资源文件。</p><p>  Xposed API 中提供了资源钩子相关的函数，但在测试过程中发现资源钩子并没有生效 <s>（或者说我没写对？）</s> ，同时开启资源钩子也将带来一系列问题，譬如与系统主题选项冲突，截图不能正常工作（截出来是裂图）等，所以采用资源钩子也不是一项非常明智的选择。</p><blockquote><p>注：资源钩子并没有什么问题，或许是 EdXposed 太烂🤔</p></blockquote><p>  好在 Android 提供了一种方式让我们能够动态地从一个 apk 文件中加载所需要的资源 —— <ruby>资源管理器<rt>AssetManager</rt></ruby>，使用示例如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntentHook</span> <span class="keyword">implements</span> <span class="title">IXposedHookZygoteInit</span>, <span class="title">IXposedHookLoadPackage</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String modulePath;  <span class="comment">// 模块自身 apk 的路径</span></span><br><span class="line">    <span class="keyword">private</span> Drawable background = <span class="keyword">null</span>;  <span class="comment">// 存储加载到的 Drawable 资源</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initZygote</span><span class="params">(StartupParam startupParam)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        modulePath = startupParam.modulePath;  <span class="comment">// 通过 Xposed API 获得 modulePath</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        <span class="comment">// 加载资源不涉及函数钩子部分的代码，这里省略</span></span><br><span class="line">        .........</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadResources</span><span class="params">(Application application)</span> </span>{  <span class="comment">// 传入被注入应用的 Application 对象</span></span><br><span class="line">        <span class="keyword">if</span> (background != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// 访问模块内置资源</span></span><br><span class="line">            <span class="meta">@SuppressLint("PrivateApi")</span></span><br><span class="line">            Class&lt;?&gt; apkAssetsClass = Class.forName(<span class="string">"android.content.res.ApkAssets"</span>);</span><br><span class="line">            Method loadFromPath = apkAssetsClass.getMethod(<span class="string">"loadFromPath"</span>, String.class);</span><br><span class="line">            Object apkAssets = loadFromPath.invoke(<span class="keyword">null</span>, modulePath);  <span class="comment">// 加载 apk 文件</span></span><br><span class="line">            AssetManager assets = AssetManager.class.newInstance();</span><br><span class="line">            Method setApkAssets = assets.getClass().getDeclaredMethod(</span><br><span class="line">                    <span class="string">"setApkAssets"</span>,</span><br><span class="line">                    Array.newInstance(apkAssetsClass, <span class="number">0</span>).getClass(),</span><br><span class="line">                    <span class="keyword">boolean</span>.class</span><br><span class="line">            );</span><br><span class="line">            Object assetsArray = Array.newInstance(apkAssetsClass, <span class="number">1</span>);</span><br><span class="line">            Array.set(assetsArray, <span class="number">0</span>, apkAssets);</span><br><span class="line">            setApkAssets.invoke(assets, assetsArray, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取资源对象</span></span><br><span class="line">            Resources resources = <span class="keyword">new</span> Resources(  <span class="comment">// 这里使用了一个 deprecated 的构造函数（暂时没找到替代方法）</span></span><br><span class="line">                    assets,</span><br><span class="line">                    application.getResources().getDisplayMetrics(),</span><br><span class="line">                    application.getResources().getConfiguration()</span><br><span class="line">            );</span><br><span class="line">            PackageInfo packageInfo = application.getPackageManager().getPackageArchiveInfo(modulePath, PackageManager.GET_ACTIVITIES);</span><br><span class="line">            Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Loading resources from: "</span> + packageInfo.packageName);</span><br><span class="line">            <span class="keyword">int</span> backgroundImageID = resources.getIdentifier(<span class="string">"bilibili"</span>, <span class="string">"drawable"</span>, packageInfo.packageName);</span><br><span class="line">            background = ResourcesCompat.getDrawable(resources, backgroundImageID, <span class="keyword">null</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception err) {</span><br><span class="line">            Log.e(<span class="string">"KiwiLogcat"</span>, <span class="string">"Error occurred while loading resources:"</span>, err);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注：有没有一种可能，我们有 <a href="https://api.xposed.info/reference/android/content/res/XModuleResources.html">XModuleResources</a></p></blockquote><h3 id="手搓控件布局">手搓控件布局</h3><p>  本想直接读取 apk 中的布局 xml 的，结果在应用时因为不明原因失败了 <s>（难道又是我没写对？以后再试试）</s>，只能用代码将弹出框的布局一点一点写出来。新建一个 PopupView 类，继承 <code>android.widget.PopupWindow</code>，然后定义构造方法，传入 Activity <ruby>上下文<rt>Context</rt></ruby>、背景图、目标应用包名和 Intent 对象，生成一个弹出窗口：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mufanc.edxp.kiwi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.FrameLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.PopupWindow;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XposedHelpers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PopupView</span> <span class="keyword">extends</span> <span class="title">PopupWindow</span> </span>{</span><br><span class="line">    <span class="meta">@SuppressLint("SetTextI18n")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PopupView</span><span class="params">(Context context, Drawable background, String packageName, Intent intent)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);</span><br><span class="line"></span><br><span class="line">        LinearLayout frame = <span class="keyword">new</span> LinearLayout(context);</span><br><span class="line">        frame.setGravity(Gravity.CENTER);</span><br><span class="line">        LinearLayout linearLayout = <span class="keyword">new</span> LinearLayout(context);</span><br><span class="line">        linearLayout.setOrientation(LinearLayout.VERTICAL);</span><br><span class="line">        TextView hint = <span class="keyword">new</span> TextView(context);</span><br><span class="line">        hint.setText(<span class="string">"网页请求打开"</span> + getNameByPackage(context, packageName) + <span class="string">"，是否允许？"</span>);</span><br><span class="line">        hint.setTextSize(<span class="number">16</span>);</span><br><span class="line">        hint.setTextColor(Color.WHITE);</span><br><span class="line">        hint.setGravity(Gravity.CENTER);</span><br><span class="line">        hint.setPadding(<span class="number">5</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">        linearLayout.addView(hint);</span><br><span class="line"></span><br><span class="line">        LinearLayout line = <span class="keyword">new</span> LinearLayout(context);</span><br><span class="line">        line.setOrientation(LinearLayout.HORIZONTAL);</span><br><span class="line">        View colorLine = <span class="keyword">new</span> View(context);</span><br><span class="line">        colorLine.setBackgroundColor(Color.argb(<span class="number">128</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">        colorLine.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                <span class="number">2</span>,</span><br><span class="line">                <span class="number">1.0f</span></span><br><span class="line">        ));</span><br><span class="line">        line.addView(colorLine);</span><br><span class="line">        DisplayMetrics metrics = <span class="keyword">new</span> DisplayMetrics();</span><br><span class="line">        ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getMetrics(metrics);</span><br><span class="line">        line.setPadding(<span class="number">30</span>, <span class="number">10</span>, <span class="number">30</span>, <span class="number">10</span>);</span><br><span class="line">        line.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                (<span class="keyword">int</span>) (<span class="number">0.8</span> * metrics.widthPixels),</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT</span><br><span class="line">        ));</span><br><span class="line">        linearLayout.addView(line);</span><br><span class="line"></span><br><span class="line">        LinearLayout container = <span class="keyword">new</span> LinearLayout(context);</span><br><span class="line">        container.setOrientation(LinearLayout.HORIZONTAL);</span><br><span class="line">        TextView confirm = <span class="keyword">new</span> TextView(context);</span><br><span class="line">        confirm.setText(<span class="string">"确定"</span>);</span><br><span class="line">        confirm.setTextSize(<span class="number">20</span>);</span><br><span class="line">        confirm.setTextColor(Color.parseColor(<span class="string">"#03a9f4"</span>));</span><br><span class="line">        confirm.setPadding(<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        confirm.setGravity(Gravity.CENTER);</span><br><span class="line">        confirm.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                <span class="number">1.0f</span></span><br><span class="line">        ));</span><br><span class="line">        confirm.setOnClickListener((event) -&gt; {</span><br><span class="line">            <span class="comment">// 将 Intent 对象动态打上特殊标记后重发</span></span><br><span class="line">            XposedHelpers.setAdditionalInstanceField(intent, <span class="string">"ACCEPT"</span>, <span class="string">""</span>);  </span><br><span class="line">            context.startActivity(intent);</span><br><span class="line">            dismiss();</span><br><span class="line">        });</span><br><span class="line">        container.addView(confirm);</span><br><span class="line"></span><br><span class="line">        View view = <span class="keyword">new</span> View(context);</span><br><span class="line">        view.setBackgroundColor(Color.argb(<span class="number">128</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">        LinearLayout.LayoutParams params = <span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                <span class="number">2</span>, ViewGroup.LayoutParams.MATCH_PARENT</span><br><span class="line">        );</span><br><span class="line">        params.setMargins(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">        view.setLayoutParams(params);</span><br><span class="line">        container.addView(view);</span><br><span class="line"></span><br><span class="line">        TextView cancel = <span class="keyword">new</span> TextView(context);</span><br><span class="line">        cancel.setText(<span class="string">"不好"</span>);</span><br><span class="line">        cancel.setTextSize(<span class="number">20</span>);</span><br><span class="line">        cancel.setTextColor(Color.parseColor(<span class="string">"#ff0f0f"</span>));</span><br><span class="line">        cancel.setPadding(<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        cancel.setGravity(Gravity.CENTER);</span><br><span class="line">        cancel.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                <span class="number">1.0f</span></span><br><span class="line">        ));</span><br><span class="line">        container.addView(cancel);</span><br><span class="line">        linearLayout.addView(container);</span><br><span class="line">        linearLayout.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                ViewGroup.LayoutParams.WRAP_CONTENT</span><br><span class="line">        ));</span><br><span class="line">        linearLayout.setBackground(background);</span><br><span class="line">        frame.addView(linearLayout);</span><br><span class="line">        frame.setBackgroundColor(Color.argb(<span class="number">64</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        frame.setLayoutParams(<span class="keyword">new</span> FrameLayout.LayoutParams(</span><br><span class="line">                ViewGroup.LayoutParams.MATCH_PARENT,</span><br><span class="line">                ViewGroup.LayoutParams.MATCH_PARENT</span><br><span class="line">        ));</span><br><span class="line">        frame.setOnClickListener((event) -&gt; {</span><br><span class="line">            dismiss();</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        setContentView(frame);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getNameByPackage</span><span class="params">(Context context, String packageName)</span> </span>{</span><br><span class="line">        PackageManager pm = context.getPackageManager();</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            String name = pm.getApplicationLabel(pm.getApplicationInfo(packageName, PackageManager.GET_META_DATA)).toString();</span><br><span class="line">            <span class="keyword">if</span> (name.equals(<span class="string">""</span>)) {</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"您的应用"</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"「"</span> + name + <span class="string">"」"</span>;</span><br><span class="line">        } <span class="keyword">catch</span> (PackageManager.NameNotFoundException err) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"您的应用"</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  在模块 MainActivity 测试插入控件成功后，继续 Hook 逻辑的编写。</p><h3 id="补充挂钩逻辑">补充挂钩逻辑</h3><p>  再次梳理一下挂钩逻辑：理论上这个钩子能够勾到应用发起的所有 Activity 切换行为，所以对于应用自身的活动，需要特判允许，对于指向其他包名的 Intent，则默认阻止，下面放上 <code>IntentHook.java</code> 的完整代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mufanc.edxp.kiwi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.app.Application;</span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageInfo;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.content.res.AssetManager;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Resources;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.core.content.res.ResourcesCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookZygoteInit;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XC_MethodHook;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XposedHelpers;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntentHook</span> <span class="keyword">implements</span> <span class="title">IXposedHookZygoteInit</span>, <span class="title">IXposedHookLoadPackage</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String targetPackageName = <span class="string">"com.kiwibrowser.browser"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String modulePath;</span><br><span class="line">    <span class="keyword">private</span> Drawable background = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initZygote</span><span class="params">(StartupParam startupParam)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        modulePath = startupParam.modulePath;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        <span class="keyword">if</span> (!lpparam.packageName.equals(targetPackageName)) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Attaching: "</span> + lpparam.processName);  <span class="comment">// 输出进程名，方便调试</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Activity[] activity = <span class="keyword">new</span> Activity[<span class="number">1</span>];</span><br><span class="line">        XposedHelpers.findAndHookMethod(</span><br><span class="line">                <span class="string">"android.app.Activity"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"onCreate"</span>,</span><br><span class="line">                Bundle.class,</span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() {</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">                        Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Launching:"</span> + param.thisObject.getClass().getName());</span><br><span class="line">                        <span class="comment">// 获取当前 Activity 实例</span></span><br><span class="line">                        activity[<span class="number">0</span>] = (Activity) param.thisObject;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        XposedHelpers.findAndHookMethod(</span><br><span class="line">                <span class="string">"android.app.Instrumentation"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"callApplicationOnCreate"</span>,</span><br><span class="line">                Application.class,</span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() {</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">                        <span class="keyword">if</span> (param.args[<span class="number">0</span>] <span class="keyword">instanceof</span> Application) {</span><br><span class="line">                            <span class="comment">// 进入应用时加载资源文件</span></span><br><span class="line">                            loadResources((Application) param.args[<span class="number">0</span>]);  </span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        XposedHelpers.findAndHookMethod(</span><br><span class="line">                <span class="string">"android.app.IActivityTaskManager$Stub$Proxy"</span>,</span><br><span class="line">                lpparam.classLoader,</span><br><span class="line">                <span class="string">"startActivity"</span>,</span><br><span class="line">                XposedHelpers.findClass(<span class="string">"android.app.IApplicationThread"</span>, lpparam.classLoader),</span><br><span class="line">                String.class,</span><br><span class="line">                String.class,</span><br><span class="line">                Intent.class,</span><br><span class="line">                String.class,</span><br><span class="line">                android.os.IBinder.class,</span><br><span class="line">                String.class,</span><br><span class="line">                <span class="keyword">int</span>.class,</span><br><span class="line">                <span class="keyword">int</span>.class,</span><br><span class="line">                XposedHelpers.findClass(<span class="string">"android.app.ProfilerInfo"</span>, lpparam.classLoader),</span><br><span class="line">                android.os.Bundle.class,</span><br><span class="line">                <span class="keyword">new</span> XC_MethodHook() {</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="meta">@SuppressLint("QueryPermissionsNeeded")</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">                        Intent intent = (Intent) param.args[<span class="number">3</span>];</span><br><span class="line">                        ComponentName componentName = intent.resolveActivity(activity[<span class="number">0</span>].getPackageManager());</span><br><span class="line">                        <span class="keyword">if</span> (componentName != <span class="keyword">null</span> &amp;&amp; !componentName.getPackageName().equals(targetPackageName)) {</span><br><span class="line">                            <span class="comment">// 判断 Intent 对象是否带有特殊标记，没有则触发询问</span></span><br><span class="line">                            <span class="keyword">if</span> (XposedHelpers.getAdditionalInstanceField(intent, <span class="string">"ACCEPT"</span>) == <span class="keyword">null</span>) {</span><br><span class="line">                                <span class="keyword">try</span> {</span><br><span class="line">                                    <span class="comment">// 初始化并弹出对话框</span></span><br><span class="line">                                    PopupView popupView = <span class="keyword">new</span> PopupView(activity[<span class="number">0</span>], background, componentName.getPackageName(), intent);</span><br><span class="line">                                    View root = activity[<span class="number">0</span>].getWindow().getDecorView().getRootView();</span><br><span class="line">                                    popupView.showAtLocation(root, Gravity.CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                                } <span class="keyword">catch</span> (Exception err) {</span><br><span class="line">                                    Log.e(<span class="string">"KiwiLogcat"</span>, <span class="string">"Error occurred while creating view:"</span>, err);</span><br><span class="line">                                }</span><br><span class="line">                                <span class="comment">// 输出 Intent 相关信息</span></span><br><span class="line">                                Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Calling package: "</span> + componentName.getPackageName());</span><br><span class="line">                                Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Intent: "</span> + intent.toUri(<span class="number">0</span>));</span><br><span class="line">                                param.setResult(<span class="number">0</span>);</span><br><span class="line">                            } <span class="keyword">else</span> {</span><br><span class="line">                                Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Accepted: "</span> + intent.toString());</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadResources</span><span class="params">(Application application)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (background != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// 访问模块内置资源</span></span><br><span class="line">            <span class="meta">@SuppressLint("PrivateApi")</span></span><br><span class="line">            Class&lt;?&gt; apkAssetsClass = Class.forName(<span class="string">"android.content.res.ApkAssets"</span>);</span><br><span class="line">            Method loadFromPath = apkAssetsClass.getMethod(<span class="string">"loadFromPath"</span>, String.class);</span><br><span class="line">            Object apkAssets = loadFromPath.invoke(<span class="keyword">null</span>, modulePath);</span><br><span class="line">            AssetManager assets = AssetManager.class.newInstance();</span><br><span class="line">            Method setApkAssets = assets.getClass().getDeclaredMethod(</span><br><span class="line">                    <span class="string">"setApkAssets"</span>,</span><br><span class="line">                    Array.newInstance(apkAssetsClass, <span class="number">0</span>).getClass(),</span><br><span class="line">                    <span class="keyword">boolean</span>.class</span><br><span class="line">            );</span><br><span class="line">            Object assetsArray = Array.newInstance(apkAssetsClass, <span class="number">1</span>);</span><br><span class="line">            Array.set(assetsArray, <span class="number">0</span>, apkAssets);</span><br><span class="line">            setApkAssets.invoke(assets, assetsArray, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取资源对象</span></span><br><span class="line">            Resources resources = <span class="keyword">new</span> Resources(</span><br><span class="line">                    assets,</span><br><span class="line">                    application.getResources().getDisplayMetrics(),</span><br><span class="line">                    application.getResources().getConfiguration()</span><br><span class="line">            );</span><br><span class="line">            PackageInfo packageInfo = application.getPackageManager().getPackageArchiveInfo(modulePath, PackageManager.GET_ACTIVITIES);</span><br><span class="line">            Log.i(<span class="string">"KiwiLogcat"</span>, <span class="string">"Loading resources from: "</span> + packageInfo.packageName);</span><br><span class="line">            <span class="keyword">int</span> floatyViewID = resources.getIdentifier(<span class="string">"floaty_window"</span>, <span class="string">"layout"</span>, packageInfo.packageName);</span><br><span class="line">            <span class="keyword">int</span> backgroundImageID = resources.getIdentifier(<span class="string">"bilibili"</span>, <span class="string">"drawable"</span>, packageInfo.packageName);</span><br><span class="line">            background = ResourcesCompat.getDrawable(resources, backgroundImageID, <span class="keyword">null</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception err) {</span><br><span class="line">            Log.e(<span class="string">"KiwiLogcat"</span>, <span class="string">"Error occurred while loading resources:"</span>, err);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div id="entry-class"><h3 id="指定入口类">指定入口类</h3><p>  到现在工作还没有完全完成，最后需要向 Xposed 标明入口类，在 <code>src/main/assets</code> 目录下新建一个 <code>xposed_init</code> 文本文件，其中填写 Xposed 入口类名：</p><p><img src="%E6%8C%87%E5%AE%9A%E5%85%A5%E5%8F%A3%E7%B1%BB.png" alt=""></p><h3 id="效果展示">效果展示</h3><p>  编译安装后重启（开了「即时模块」则完全杀死 Kiwi 再重新打开），随便打开一个 Bilibili 视频链接，点击「用 APP 打开」，弹出询问对话框，</p><p><img src="%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.png" alt=""></p><p>  <s>本模块代码将持续开源到 <a href="https://github.com/Mufanc">Github</a></s></p><blockquote><p>注：这么烂的代码还好意思开？</p></blockquote><h2 id="待改进部分">待改进部分</h2><ul><li>PopupWindow 弹出的时候没有动画，效果非常生硬；全屏对话框的效果也不是特别好（后期可能换成类似 Toast 的悬浮窗效果）</li></ul><blockquote><p>注：或许从 <code>ActivityThread</code> 中偷出当前 Activity 的实例，然后弹 dialog 会比较好实现</p></blockquote><ul><li><p>暂时不能为每个应用加入自定义匹配规则（后期考虑使用一个 json 指定匹配规则）</p></li><li><p>由于未知原因，当 Kiwi 处于开启状态时，从 QQ 再次开启 Kiwi（例如在链接中选择「用浏览器打开」），会出现抓不到当前 Activity 实例的情况</p></li></ul><blockquote><p>注：很明显，这是是调了 <code>onResume</code> 没调 <code>onCreate</code></p></blockquote><ul><li>整个模块可以升级为系统级的「<ruby>意图路由表<rt>IntentTables</rt></ruby>」，配合常驻服务使用（?）</li></ul></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 「旧蒙德」 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简单神经网络之验证码识别</title>
      <link href="/posts/69006241/"/>
      <url>/posts/69006241/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  此前虽也做过不少验证码识别的项目（比如微班安全教育和 iSmart 以及智学网的登录），但这些东西图形都比较简单，只用简单的模板匹配就能达到很高的识别率，所以一直也就这么用着，直到有一天碰到了硬点子……</p><p><img src="%E7%96%AB%E6%83%85%E9%98%B2%E6%8E%A7-%E7%99%BB%E5%BD%95%E9%A1%B5.png" alt=""></p><p>  这网站的验证码长这样：</p><p><img src="%E9%AA%8C%E8%AF%81%E7%A0%81-%E6%A0%B7%E4%BE%8B.png" alt=""></p><p>  随机的颜色、随机的位置、随机的扭曲度、随机的字号……让传统匹配算法有些力不从心，之前虽然有过用 Tesseract 成功识别的案例，不过一是识别率不够高，二是移植脚本时还要额外安装 Tesseract（不同平台的安装方法还不同），感觉怪麻烦的，思来想去……感觉核心技术还是要掌握在自己手中，如果能打造一款针对这个网站设计的验证码识别脚本，应该可大大提升识别的效率和准确度。</p><hr><h2 id="准备工作">准备工作</h2><p>  说干就干，首先设计好框架，神经网络应该只具备单个字符识别的功能，这样会更有利于训练，所以需要先用一些简单的预处理算法将 4 字符的验证码切分为 4 张等大的图片，再分别交给网络进行识别，最后将结果整合起来，作为识别的结果。</p><h3 id="将验证码切分为字符">将验证码切分为字符</h3><p>  那么先从最简单的切分部分开始，下载 1000 张验证码图片作为模板和测试用例：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_uuid</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f'<span class="subst">{time()*<span class="number">1000</span>:<span class="number">.0</span>f}</span><span class="subst">{randint(<span class="number">100</span>, <span class="number">999</span>)}</span>'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download_image</span>(<span class="params">count</span>):</span></span><br><span class="line">    client = httpx.AsyncClient()</span><br><span class="line">    limit = asyncio.Semaphore(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">internal</span>():</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> limit:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                token = (</span><br><span class="line">                    <span class="keyword">await</span> client.get(<span class="string">'https://fangkong.hnu.edu.cn/api/v1/account/getimgvcode'</span>)</span><br><span class="line">                ).json()[<span class="string">'data'</span>][<span class="string">'Token'</span>]</span><br><span class="line">                image = <span class="keyword">await</span> client.get(<span class="string">f'https://fangkong.hnu.edu.cn/imagevcode?token=<span class="subst">{token}</span>'</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">                logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        path = <span class="string">f'../data/raw_image/<span class="subst">{get_uuid()}</span>.jpg'</span></span><br><span class="line">        logger.info(<span class="string">f'File saved to: <span class="subst">{path}</span>'</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(image.content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*[internal() <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(count)])</span><br><span class="line">    <span class="keyword">await</span> client.aclose()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">await</span> download_image(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    loop = asyncio.new_event_loop()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        loop.run_until_complete(main())</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        loop.close()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%A8%A1%E6%9D%BF.png" alt="迁移博客时代码改过了，和上图的文件名对不上"></p><p>  从模板的内容来看，大部分的文字都位于验证码图片的左上角，自然而然的会想到先对验证码进行裁剪预处理，但究竟需要裁多大一块区域呢？我用一个脚本对所有图片进行了灰度化和叠加处理：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">overlay = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'../data/raw_image'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    image = cv2.imread(<span class="string">f'../data/raw_image/<span class="subst">{file}</span>'</span>)</span><br><span class="line">    image = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    <span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        overlay = np.zeros(image.shape)</span><br><span class="line">    overlay += image</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> overlay <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    overlay = overlay * <span class="number">255</span> / np.<span class="built_in">max</span>(overlay)</span><br><span class="line">    plt.imshow(overlay)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最终结果显示：99% 的数字都出现在左上角 67*27 的区域中，所以我们提前裁剪这块区域，以减少后期的计算量</p><p><img src="%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8F%A0%E5%8A%A0.png" alt=""></p><p>  难点来了！如何让程序将不同的字符区分出来，成为一个值得研究的问题。传统的方法是统计每一竖排上黑色像素的数量（想象一张柱状图），然后采用一根扫描线自下而上不断扫描，直到扫描线上方的「柱状图」连通块数量第一次为 4（即字符数量），但在字符随机倾斜的情况下，继续沿用这样的方法非常容易产生切割错误的问题，我们需要一种更有效的算法来进行字符切分</p><hr><p><img src="%E4%BA%8C%E5%80%BC%E5%8C%96-4378.png" alt=""></p><p>  观察二值化后的验证码，发现每个字符的各个像素之间的关联性并不强，甚至有些字符简直可以用「支离破碎」来形容，这意味着如果直接进行搜索，将很容易出现错误。所以考虑首先使用 3×5 的算子对图片进行高斯模糊处理，然后再进行一次二值化，从而将每个字符「粘连」起来，处理之后的图片长这样：</p><p><img src="%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A-%E4%BA%8C%E5%80%BC%E5%8C%96.png" alt=""></p><p>  差不多就要开始切分了，首先对上一步得到的图像进行深度优先搜索，找出所有连通量在 20～150 的黑色像素连通块并进行标记，最后进行一次判断，如果找到符合条件的像素块（即字符）数量为 4，则按照记录进行切分，将每个字符缩放到 10×15px 的区域并置中，最后做一次 3×3px 的高斯模糊：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">DIGITS = <span class="number">4</span>  <span class="comment"># 验证码的字符数</span></span><br><span class="line">WIDTH, HEIGHT = <span class="number">67</span>, <span class="number">27</span>  <span class="comment"># 从左上角裁剪的长宽</span></span><br><span class="line">BINARY_THRESHOLD = <span class="number">180</span>  <span class="comment"># 二值化的阈值</span></span><br><span class="line">BLUR_CORE_SIZE = (<span class="number">3</span>, <span class="number">5</span>)  <span class="comment"># 高斯模糊核心大小</span></span><br><span class="line">BLUR_BINARY_THRESHOLD = <span class="number">210</span>  <span class="comment"># 高斯模糊后再次二值化的阈值</span></span><br><span class="line">MIN_BLOCK_SIZE, MAX_BLOCK_SIZE = <span class="number">20</span>, <span class="number">150</span>  <span class="comment"># 像素块大小范围</span></span><br><span class="line">DIGIT_WIDTH, DIGIT_HEIGHT = <span class="number">10</span>, <span class="number">15</span>  <span class="comment"># 验证码数字尺寸</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mark</span>(<span class="params">image, mask</span>):</span></span><br><span class="line">    shape = image.shape</span><br><span class="line">    flag = np.zeros(image.shape, dtype=np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">x, y, depth, flow</span>):</span></span><br><span class="line">        <span class="comment"># noinspection PyChainedComparisons</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; shape[<span class="number">0</span>] <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; shape[<span class="number">1</span>] <span class="keyword">and</span> mask[x, y] == <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> flag[x, y]:</span><br><span class="line">            flow.append((x, y))</span><br><span class="line">            flag[x, y] = <span class="number">1</span></span><br><span class="line">            count = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> way <span class="keyword">in</span> ((-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, -<span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>)):</span><br><span class="line">                count += dfs(x + way[<span class="number">0</span>], y + way[<span class="number">1</span>], depth + <span class="number">1</span>, flow)</span><br><span class="line">            <span class="keyword">return</span> count</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    results = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(image.shape[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(image.shape[<span class="number">1</span>]):</span><br><span class="line">            <span class="keyword">if</span> flag[i, j]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> mask[i, j] == <span class="number">0</span>:</span><br><span class="line">                pixels = []</span><br><span class="line">                <span class="keyword">if</span> MIN_BLOCK_SIZE &lt;= dfs(i, j, <span class="number">0</span>, pixels) &lt;= MAX_BLOCK_SIZE:</span><br><span class="line">                    results.append((</span><br><span class="line">                        image[</span><br><span class="line">                            <span class="built_in">min</span>(x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels):<span class="built_in">max</span>(x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels),</span><br><span class="line">                            <span class="built_in">min</span>(x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels):<span class="built_in">max</span>(x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels)</span><br><span class="line">                        ],</span><br><span class="line">                        <span class="built_in">sum</span>(x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> pixels) / <span class="built_in">len</span>(pixels)</span><br><span class="line">                    ))</span><br><span class="line">            flag[i, j] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(results) != <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    results.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> results]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split</span>(<span class="params">image</span>):</span></span><br><span class="line">    image = cv2.cvtColor(image[:HEIGHT, :WIDTH], cv2.COLOR_RGB2GRAY)</span><br><span class="line">    binary = cv2.threshold(image, BINARY_THRESHOLD, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    mask = cv2.threshold(</span><br><span class="line">        cv2.GaussianBlur(binary, BLUR_CORE_SIZE, <span class="number">0</span>),</span><br><span class="line">        BLUR_BINARY_THRESHOLD, <span class="number">255</span>, cv2.THRESH_BINARY</span><br><span class="line">    )[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    digits = mark(image, mask)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> digits <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, digit <span class="keyword">in</span> <span class="built_in">enumerate</span>(digits):</span><br><span class="line">        scale = <span class="built_in">max</span>(digit.shape[<span class="number">0</span>] / DIGIT_HEIGHT, digit.shape[<span class="number">1</span>] / DIGIT_WIDTH)</span><br><span class="line">        digit = cv2.resize(</span><br><span class="line">            digit, (<span class="built_in">int</span>(digit.shape[<span class="number">1</span>] / scale), <span class="built_in">int</span>(digit.shape[<span class="number">0</span>] / scale)),</span><br><span class="line">            interpolation=cv2.INTER_LANCZOS4</span><br><span class="line">        )</span><br><span class="line">        height, width = digit.shape</span><br><span class="line">        background = np.full((DIGIT_HEIGHT, DIGIT_WIDTH), <span class="number">255</span>)</span><br><span class="line">        left, top = (DIGIT_WIDTH - width) // <span class="number">2</span>, (DIGIT_HEIGHT - height) // <span class="number">2</span></span><br><span class="line">        background[top:top+height, left:left+width] = digit</span><br><span class="line"></span><br><span class="line">        digits[i] = background</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    path = <span class="string">'../data/raw_image'</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">        image = cv2.imread(os.path.join(path, file))</span><br><span class="line">        <span class="keyword">if</span> (digits := split(image)) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            plt.imshow(image[:HEIGHT, :WIDTH])</span><br><span class="line">            <span class="keyword">for</span> i, digit <span class="keyword">in</span> <span class="built_in">enumerate</span>(digits):</span><br><span class="line">                plt.subplot(<span class="number">2</span>, <span class="number">4</span>, i+<span class="number">5</span>)</span><br><span class="line">                plt.imshow(digit)</span><br><span class="line">            plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  最终得到的效果如下：</p><p><img src="%E5%AD%97%E7%AC%A6%E5%88%87%E5%88%86-4378.png" alt=""></p><h3 id="获取训练数据集">获取训练数据集</h3><p>  接下来开始获取训练用的数据集，首先使用旧的 Tesseract 识别引擎，通过反复识别验证码模拟登陆，同时记录下登录成功时的识别结果，即能得到验证码和数字的对应组合：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> binarize <span class="keyword">import</span> split, DIGITS</span><br><span class="line"><span class="keyword">from</span> spider <span class="keyword">import</span> get_uuid</span><br><span class="line"></span><br><span class="line">DATASIZE = <span class="number">3000</span></span><br><span class="line">USERNAME, PASSWORD = <span class="string">'# 学号 #'</span>, <span class="string">'# 登录密码 #'</span></span><br><span class="line">MESSAGE_LOGIN_SUCCESS = <span class="string">'成功'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, username, password</span>):</span></span><br><span class="line">        self.client = httpx.Client()</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = password</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ocr</span>(<span class="params">image</span>):</span></span><br><span class="line">        proc = sp.Popen([<span class="string">'tesseract'</span>, <span class="string">'-'</span>, <span class="string">'-'</span>], stdin=sp.PIPE, stdout=sp.PIPE)</span><br><span class="line">        proc.stdin.write(image)</span><br><span class="line">        proc.stdin.close()</span><br><span class="line">        result = re.sub(<span class="string">'[^0-9]'</span>, <span class="string">''</span>, proc.stdout.read().decode())</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result) != <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fetch_captcha</span>(<span class="params">self</span>):</span>  <span class="comment"># 获取一张验证码</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            token = (</span><br><span class="line">                self.client.get(<span class="string">'https://fangkong.hnu.edu.cn/api/v1/account/getimgvcode'</span>)</span><br><span class="line">            ).json()[<span class="string">'data'</span>][<span class="string">'Token'</span>]</span><br><span class="line">            image = self.client.get(<span class="string">f'https://fangkong.hnu.edu.cn/imagevcode?token=<span class="subst">{token}</span>'</span>)</span><br><span class="line">            captcha = cv2.imdecode(np.frombuffer(image.content, np.uint8), cv2.IMREAD_COLOR)</span><br><span class="line">            <span class="keyword">return</span> image.content, captcha, token</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">verify</span>(<span class="params">self, code, token</span>):</span>  <span class="comment"># 验证 Tesseract 的识别结果</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = self.client.post(</span><br><span class="line">                <span class="string">'https://fangkong.hnu.edu.cn/api/v1/account/login'</span>,</span><br><span class="line">                data={</span><br><span class="line">                    <span class="string">'Code'</span>: self.username,</span><br><span class="line">                    <span class="string">'Password'</span>: self.password,</span><br><span class="line">                    <span class="string">'WechatUserInfoCode'</span>: <span class="literal">None</span>,</span><br><span class="line">                    <span class="string">'VerCode'</span>: code,</span><br><span class="line">                    <span class="string">'Token'</span>: token</span><br><span class="line">                }</span><br><span class="line">            ).json()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'msg'</span>] == MESSAGE_LOGIN_SUCCESS:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">f'Login failed: <span class="subst">{result[<span class="string">"msg"</span>]}</span>'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            logger.error(<span class="built_in">repr</span>(err))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self, count</span>):</span></span><br><span class="line">        success = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> success &lt; count:</span><br><span class="line">            raw_captcha, captcha, token = self.fetch_captcha()</span><br><span class="line">            <span class="keyword">while</span> captcha <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> (code := self.ocr(raw_captcha)) <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> (digits := split(captcha)) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                raw_captcha, captcha, token = self.fetch_captcha()</span><br><span class="line">            <span class="comment"># noinspection PyUnboundLocalVariable</span></span><br><span class="line">            <span class="keyword">if</span> self.verify(code, token):</span><br><span class="line">                success += <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> i, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(code):</span><br><span class="line">                    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f'../data/marked/<span class="subst">{ch}</span>/<span class="subst">{get_uuid()}</span>'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                        fp.write(pickle.dumps(digits[i]))</span><br><span class="line">                logger.info(<span class="string">f'[<span class="subst">{code}</span>] Success.'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    spider = Spider(USERNAME, PASSWORD)</span><br><span class="line">    average = <span class="built_in">sum</span>(<span class="built_in">len</span>(os.listdir(<span class="string">f'../data/marked/<span class="subst">{n}</span>'</span>)) <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)) / DIGITS</span><br><span class="line">    logger.debug(<span class="string">f'Image count: <span class="subst">{average}</span> / <span class="subst">{DATASIZE}</span>'</span>)</span><br><span class="line">    spider.run(<span class="built_in">max</span>(DATASIZE - average, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  挂机请求几个小时 <s>（辅导员摇了我吧，我可是专门挑打卡低峰期来发请求的 qwq）</s>，下载到了不少验证码：</p><p><img src="%E6%A8%A1%E6%9D%BF-raw.png" alt="旧博客的图，上面代码是直接将正确验证码切分并存储到各个子文件夹的"></p><p>  简单检查一下结果，切分的准确程度超乎我的意料，绝大部分的字符都被准确的分类了，只有极少数出现残缺。接下来，也是整个项目最难的部分，编写神经网络……</p><h2 id="原理分析">原理分析</h2><p>  我设计了一个四层的神经网络，除输入输出层外还包含两个隐含层</p><p><img src="%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84-%E7%99%BD.png" alt=""></p><p>  输入层有 150 个神经元，两个隐含层分别有16个神经元，输出层的10个神经元分别代表 0~9 的数字，每个神经元的激活值都在 [0, 1) 区间内</p><p>  假设第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个神经元第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个神经元的激活值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>i</mi><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">a_i^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2194em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span>，则第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个神经元的激活值为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></munderover><msubsup><mi>a</mi><mi>i</mi><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">a_{i+1}^k = \sum_{j=1}^{N_i}a_i^j\cdot\omega_{i+1}^{kj} + b_{i+1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2044em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2532em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3111em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2044em;vertical-align:-0.3053em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>  其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi><mi>j</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\omega_{i+1}^{kj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3022em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span></span> 表示从第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个神经元到第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个神经元的激活权重（weight），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">b_{i+1}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1661em;vertical-align:-0.317em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 层第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个神经元的激活偏置值（bias），<br>这样网络的「向下传递」过程就能用矩阵运算来定义：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi mathvariant="normal">Ω</mi><mover accent="true"><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>+</mo><mover accent="true"><msub><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>11</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>12</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mn>1</mn><mi>n</mi></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>21</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>22</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mn>2</mn><mi>n</mi></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mn>1</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mn>2</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>ω</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mi>n</mi></mrow></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>i</mi><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>i</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>i</mi><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>+</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>b</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}a_{i+1}^1 \\a_{i+1}^2 \\\vdots \\a_{i+1}^m \\\end{bmatrix}= \Omega \overrightarrow{a_i} + \overrightarrow{b_{i+1}}= Sigmoid(\begin{bmatrix}\omega_{i+1}^{11} &amp; \omega_{i+1}^{12} &amp; \cdots &amp; \omega_{i+1}^{1n} \\\omega_{i+1}^{21} &amp; \omega_{i+1}^{22} &amp; \cdots &amp; \omega_{i+1}^{2n} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\\omega_{i+1}^{m1} &amp; \omega_{i+1}^{m2} &amp; \cdots &amp; \omega_{i+1}^{mn} \\\end{bmatrix}\begin{bmatrix}a_i^1 \\a_i^2 \\\vdots \\a_i^n \\\end{bmatrix}+\begin{bmatrix}b_{i+1}^1 \\b_{i+1}^2 \\\vdots \\b_{i+1}^m \\\end{bmatrix})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1026em;vertical-align:-0.15em;"></span><span class="mord">Ω</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4248em;vertical-align:-0.2083em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2164em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6944em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.58em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.38em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>  Sigmoid 为挤压函数，用于将数轴上的数压缩到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 范围内：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">Sigmoid(x) = \frac{1}{1+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>  定义一个代价函数，其值为每个输出激活值与期望值的差的平方和：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></munderover><mo stretchy="false">(</mo><msubsup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mo>−</mo><msub><mi>E</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">C=\sum_{i=1}^{N_{-1}}(a_{-1}^i-E_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1588em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>  其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为输出层每个神经元的期望输出值，则我们的目标就是调整这三个矩阵中的数，使得这个代价函数取得一个局部（也有可能是全局）最小的值；这里使用一种称之为「梯度下降法」的方法，每次计算出代价函数的负梯度，然后将所有权重和偏置组成的向量沿负梯度方向调整一小步</p><p>  考虑第 i 层的第 k 个神经元，并用它的「代价」对上一层（神经元的下标用 j 表示）的权重和偏置分别求偏导数，即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></munderover><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">C_i^k = (a_i^k-E_i^k)^2 = (Sigmoid(\sum_{j=1}^{N_{i-1}}a_{i-1}^j\cdot\omega_{i}^{kj}+b_i^k)-E_i^k)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2949em;vertical-align:-1.4138em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>  不妨设：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></munderover><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup></mrow><annotation encoding="application/x-tex">z_i^k=\sum_{j=1}^{N_{i-1}}a_{i-1}^j\cdot\omega_{i}^{kj}+b_i^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2949em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>  则：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup></mrow></mfrac><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">\frac{\partial C_i^k}{\partial \omega_{i}^{kj}} = 2(a_i^k-E_i^k) \cdotSigmoid'(z_i^k) \cdota_{i-1}^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.66em;vertical-align:-1.1339em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.143em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1339em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup></mrow></mfrac><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial C_i^k}{\partial b_i^k} = 2(a_i^k-E_i^k) \cdotSigmoid'(z_i^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5239em;vertical-align:-0.9978em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.2791em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8309em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9978em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup></mrow></mfrac><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\frac{\partial C_i^k}{\partial a_{i-1}^j} = 2(a_i^k-E_i^k) \cdotSigmoid'(z_i^k) \cdot\omega_{i}^{kj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.6939em;vertical-align:-1.1678em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.1674em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1678em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>  这样我们就得到了输出层的一个神经元关于调整权重和偏置的「想法」以及对上一层激活值的「期望」，现在把整个过程写成矩阵运算。设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>D</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msubsup><mi>a</mi><mi>i</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>E</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_i^k = 2(a_i^k-E_i^k)\cdot Sigmoid(z_i^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>11</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>12</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>1</mn><mi>n</mi></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>21</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>22</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>2</mn><mi>n</mi></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>m</mi><mn>1</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>m</mi><mn>2</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>m</mi><mi>n</mi></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla C(\Omega) = \begin{bmatrix}\frac{\partial C_i^1}{\partial \omega_{i}^{11}} &amp;\frac{\partial C_i^1}{\partial \omega_{i}^{12}} &amp;\cdots &amp;\frac{\partial C_i^1}{\partial \omega_{i}^{1n}} \\\frac{\partial C_i^2}{\partial \omega_{i}^{21}} &amp;\frac{\partial C_i^2}{\partial \omega_{i}^{22}} &amp;\cdots &amp;\frac{\partial C_i^2}{\partial \omega_{i}^{2n}} \\\vdots &amp; &amp; \ddots &amp; \vdots \\\frac{\partial C_i^m}{\partial \omega_{i}^{m1}} &amp;\frac{\partial C_i^m}{\partial \omega_{i}^{m2}} &amp;\cdots &amp;\frac{\partial C_i^m}{\partial \omega_{i}^{mn}}\end{bmatrix} = \begin{bmatrix}D_i^1 \\D_i^2 \\\vdots \\D_i^m\end{bmatrix}\begin{bmatrix}a_{i-1}^1 &amp; a_{i-1}^2 &amp; \cdots &amp;&amp; a_{i-1}^n\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord">Ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.953em;vertical-align:-3.2265em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3016 H319z M319 0 H403 V3016 H319z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.2799em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5466em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4474em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0602em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.0924em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.3591em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2599em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"></span></span><span style="top:-0.8727em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.0924em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.3591em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.2599em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-0.8727em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7265em;"><span style="top:-6.2799em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5466em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4474em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0602em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5706em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2265em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3016 H263z M263 0 H347 V3016 H263z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>C</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>1</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mn>1</mn></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mn>2</mn></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>C</mi><mi>i</mi><mi>m</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mi>m</mi></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>D</mi><mi>i</mi><mi>m</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla C(B) = \begin{bmatrix}\frac{\partial C_i^1}{\partial b_i^1} \\\frac{\partial C_i^2}{\partial b_i^2} \\\vdots \\\frac{\partial C_i^m}{\partial b_i^m}\end{bmatrix} =\begin{bmatrix}D_i^1 \\D_i^2 \\\vdots \\D_i^m\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.9244em;vertical-align:-3.2122em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3016 H319z M319 0 H403 V3016 H319z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7122em;"><span style="top:-6.2656em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5323em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4331em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0459em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0272em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5706em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2122em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3016 H263z M263 0 H347 V3016 H263z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>  对整个网络的训练过程，实质上就是为所有神经元选取合适的权重和偏置，使得对于所有训练数据，代价函数的平均值尽可能小<br>  这里如果使用传统<strong>近似求导</strong>的办法计算代价函数对于每一个权重和偏置的偏导数，将会产生大量重复计算，极大降低了算法的效率<br>  <strong>但是我们学过线性代数啊</strong>，将求偏导的思想和复合函数的链式法则结合起来，以层为单位「反向传播」，就能在较优的时间复杂度内计算出梯度向量</p><div style="display:flex;flex-direction:column;align-items:flex-start;width:50%;margin:auto;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mspace width="2em"></mspace><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mi mathvariant="normal">∂</mi><msubsup><mi>b</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></munderover><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\qquad \partial z_i^k = \partial b_i^k = \sum_{j=1}^{N_{i-1}}(\omega_i^{kj}\cdot Sigmoid'(z_{i-1}^j)\cdot\partial{z_{i-1}^j})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2949em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8811em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3528em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mi>k</mi></msubsup></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup></mrow></mfrac><mo>=</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>⋅</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow \frac{\partial z_i^k}{\partial z_{i-1}^j} = \omega_i^{kj}\cdot Sigmoid'(z_{i-1}^j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6939em;vertical-align:-1.1678em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.1674em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1678em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2439em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></div><p>  不妨设：</p><div style="display:flex;flex-direction:column;align-items:flex-start;width:100%;margin:auto;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mspace width="2em"></mspace><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>=</mo><msup><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mn>1</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>z</mi><mi>i</mi><msub><mi>N</mi><mi>i</mi></msub></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\qquad \overrightarrow{\Delta_i} = \begin{pmatrix}\frac{\partial \overline{C}}{\partial z_i^1} &amp;\frac{\partial \overline{C}}{\partial z_i^2} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial z_i^{N_i}}\end{pmatrix}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3553em;vertical-align:-0.15em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.051em;vertical-align:-0.6599em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1599em;"><span style="top:-3.1599em;"><span class="pstrut" style="height:3.0438em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.4496em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0577em;"><span style="top:-2.1777em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0696em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.776em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6599em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3911em;"><span style="top:-3.6128em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mi>j</mi></msub><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></munderover><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mi>j</mi></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow \overrightarrow{\Delta_{i-1}}_j =Sigmoid'(z_{i-1}^j)\cdot\sum_{k=1}^{N_i}(\omega_i^{kj}\cdot\overrightarrow{\Delta_i}_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5995em;vertical-align:-0.3941em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2036em;"><span style="top:-2.442em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3941em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2778em;vertical-align:-0.3352em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9426em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.1415em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3111em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></msubsup><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mn>1</mn></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></msubsup><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><mn>2</mn></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msubsup><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>i</mi></msub></msubsup><mo stretchy="false">(</mo><msubsup><mi>ω</mi><mi>i</mi><mrow><mi>k</mi><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup><mo>⋅</mo><msub><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo stretchy="false">)</mo><mo>∘</mo><mo stretchy="false">(</mo><msubsup><mi mathvariant="normal">Ω</mi><mi>i</mi><mi>T</mi></msubsup><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow \overrightarrow{\Delta_{i-1}} = \begin{bmatrix}Sigmoid'(z_{i-1}^1)\cdot\sum_{k=1}^{N_i}(\omega_i^{k1}\cdot\overrightarrow{\Delta_i}_k) \\Sigmoid'(z_{i-1}^2)\cdot\sum_{k=1}^{N_i}(\omega_i^{k2}\cdot\overrightarrow{\Delta_i}_k) \\\vdots \\Sigmoid'(z_{i-1}^{N_{i-1}})\cdot\sum_{k=1}^{N_i}(\omega_i^{kN_{i-1}}\cdot\overrightarrow{\Delta_i}_k)\end{bmatrix} = Sigmoid'(\begin{bmatrix}z_{i-1}^1 \\z_{i-1}^2 \\\vdots \\z_{i-1}^{N_{i-1}}\end{bmatrix}) \circ (\Omega_i^T\overrightarrow{\Delta_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4137em;vertical-align:-0.2083em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.6001em;vertical-align:-3.05em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3016 H319z M319 0 H403 V3016 H319z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.528em;"><span style="top:-6.0102em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.4448em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.5848em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0195em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9649em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1866em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9727em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1866em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2864em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.028em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-2.611em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.758em;"><span class="pstrut" style="height:5.016em;"></span><span style="height:3.016em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.016em" style="width:0.6667em" viewBox="0 0 666.67 3016" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3016 H263z M263 0 H347 V3016 H263z"></path></svg></span></span><span style="top:-7.4111em;"><span class="pstrut" style="height:5.016em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.5849em;vertical-align:-2.5424em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V1816 H319z M319 0 H403 V1816 H319z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0424em;"><span style="top:-5.8899em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6899em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8299em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5051em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9649em;"><span style="top:-2.4231em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1866em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5424em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-2.011em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.158em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="1.816em" style="width:0.6667em" viewBox="0 0 666.67 1816" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V1816 H263z M263 0 H347 V1816 H263z"></path></svg></span></span><span style="top:-5.6111em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></div><p>  这样一来就得到了各层偏导数之间的转化关系，通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="normal">Δ</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{\Delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2053em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord">Δ</span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span></span></span></span></span></span></span> 向量，也可以轻松求出各层权重对代价函数的平均偏导（之前只求了偏置的偏导）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>11</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>12</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>2</mn><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>21</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mn>22</mn></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><mn>2</mn><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><mn>1</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><mn>2</mn></mrow></msubsup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msubsup><mi>ω</mi><mi>i</mi><mrow><msub><mi>N</mi><mi>i</mi></msub><msub><mi>N</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msubsup></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mover accent="true"><msub><mi mathvariant="normal">Δ</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><msup><mover accent="true"><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="true">→</mo></mover><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\begin{bmatrix}\frac{\partial \overline{C}}{\partial \omega_i^{11}} &amp;\frac{\partial \overline{C}}{\partial \omega_i^{12}} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial \omega_i^{2N_{i-1}}} \\\frac{\partial \overline{C}}{\partial \omega_i^{21}} &amp;\frac{\partial \overline{C}}{\partial \omega_i^{22}} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial \omega_i^{2N_{i-1}}} \\\vdots &amp; &amp; \ddots &amp; \vdots \\\frac{\partial \overline{C}}{\partial \omega_i^{N_i1}} &amp;\frac{\partial \overline{C}}{\partial \omega_i^{N_i2}} &amp;\cdots &amp;\frac{\partial \overline{C}}{\partial \omega_i^{N_iN_{i-1}}}\end{bmatrix} = \overrightarrow{\Delta_i}\begin{bmatrix}a_{i-1}^1 &amp; a_{i-1}^2 &amp; \cdots &amp;&amp; a_{i-1}^n\end{bmatrix} = \overrightarrow{\Delta_i}\overrightarrow{a_{i-1}}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.4444em;vertical-align:-3.4722em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewBox="0 0 666.67 3616" preserveAspectRatio="xMinYMin"><path d="M319 0 H403 V3616 H319z M319 0 H403 V3616 H319z"></path></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.6159em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.7544em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4368em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0329em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.4496em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0577em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0696em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.776em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.4284em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5669em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2493em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"></span></span><span style="top:-0.8454em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.4496em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0577em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0696em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.776em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.4284em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.5669em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.2493em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-0.8454em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9722em;"><span style="top:-6.6159em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.408em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1172em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1291em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3981em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8176em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.7544em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.408em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1172em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1291em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3981em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8176em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4368em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.0329em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0438em;"><span style="top:-2.408em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1172em;"><span style="top:-2.1777em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1291em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.109em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3981em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9283em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.8303em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8176em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4722em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewBox="0 0 666.67 3616" preserveAspectRatio="xMinYMin"><path d="M263 0 H347 V3616 H263z M263 0 H347 V3616 H263z"></path></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5553em;vertical-align:-0.35em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.317em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4137em;vertical-align:-0.2083em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.522em" viewBox="0 0 400000 522" preserveAspectRatio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1838em;"><span style="top:-3.4055em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p>  至此，数学推导过程已全部完成，现在只需将数学过程转换为 Python 代码即可。</p><h2 id="代码实现">代码实现</h2><p>  首先声明一个类作为神经网络的基本模型：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, structure=<span class="literal">None</span></span>):</span></span><br><span class="line">        self.iterates = <span class="number">0</span>  <span class="comment"># 记录迭代次数</span></span><br><span class="line">        self.weights = []  <span class="comment"># 各层权重</span></span><br><span class="line">        self.biases = []  <span class="comment"># 各层偏置</span></span><br><span class="line">        self.structure = structure  <span class="comment"># 网络结构</span></span><br><span class="line">        self.num_layers = <span class="built_in">len</span>(structure) <span class="keyword">if</span> structure <span class="keyword">else</span> <span class="number">0</span>  <span class="comment"># 网络层数</span></span><br><span class="line">        self.weights_buffer = []  <span class="comment"># 权重梯度缓存</span></span><br><span class="line">        self.biases_buffer = []  <span class="comment"># 偏置梯度缓存</span></span><br><span class="line">        self.loss_buffer = <span class="number">0</span>  <span class="comment"># 损失量缓冲</span></span><br><span class="line">        self.buffer_size = <span class="number">1</span>  <span class="comment"># 记录缓冲大小（次数）</span></span><br></pre></td></tr></tbody></table></figure><p>  接下来定义一个成员方法以初始化神经网络，当模型文件不存在时，将根据网络结构分配随机的权重与偏置值，否则从磁盘中加载模型文件作为权重与偏置；同时注册一个 <code>onexit()</code> 函数，程序结束时自动将本次训练的结果保存到文件中。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span>(<span class="params">self, filename=<span class="string">'model.pck'</span></span>):</span></span><br><span class="line"><span class="meta">    @atexit.register</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onexit</span>():</span></span><br><span class="line">        self.structure <span class="keyword">and</span> pickle.dump([self.weights, self.biases], <span class="built_in">open</span>(filename, <span class="string">'wb'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        data = pickle.load(<span class="built_in">open</span>(filename, <span class="string">'rb'</span>))</span><br><span class="line">        self.weights = data[<span class="number">0</span>]</span><br><span class="line">        self.biases = data[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line">        np.random.seed(<span class="built_in">int</span>(time()))</span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.structure:</span><br><span class="line">            self.weights.append(np.random.random(layer)*<span class="number">2</span>-<span class="number">1</span>)</span><br><span class="line">            self.biases.append(np.random.random((layer[<span class="number">0</span>], <span class="number">1</span>))*<span class="number">2</span>-<span class="number">1</span>)</span><br><span class="line">    self.init_buffer()</span><br></pre></td></tr></tbody></table></figure><p>  通过传入 <code>(img, num)</code> 组进行训练，由于 OpenCV 图片格式和我们所需要的输入数据类型不一致，首先对数据进行处理；取灰度图红色通道进行归一化、取反后化为线性，再提供给反向传播函数</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span>(<span class="params">self, img, num</span>):</span></span><br><span class="line">    x, y = (<span class="number">1</span>-img[:, :, <span class="number">0</span>]/<span class="number">255</span>).reshape((<span class="number">150</span>, <span class="number">1</span>)), np.zeros((<span class="number">10</span>, <span class="number">1</span>))</span><br><span class="line">    y[num] = <span class="number">1</span></span><br><span class="line">    nabla_b, nabla_w, loss = self.backprop(x, y)</span><br><span class="line">    <span class="keyword">for</span> i, b <span class="keyword">in</span> <span class="built_in">enumerate</span>(nabla_b):</span><br><span class="line">        self.biases_buffer[i] += b</span><br><span class="line">    <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(nabla_w):</span><br><span class="line">        self.weights_buffer[i] += w</span><br><span class="line">    self.loss_buffer += loss</span><br><span class="line">    self.buffer_size += <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p>  重头戏来了，接下来开始实现神经网络的核心部分——反向传播函数，首先实现 Sigmoid 函数、它的导数以及代价函数的导数，接下来开始正向和反向传播过程，用 <code>nabla_w</code> 和 <code>nabla_b</code> 数组记录由本组数据计算出的梯度，最后返回两个梯度和本次计算出的代价：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>/(<span class="number">1</span>+np.exp(-x))</span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d_sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">    tmp = np.exp(x)</span><br><span class="line">    <span class="keyword">return</span> tmp/(tmp+<span class="number">1</span>)**<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d_loss</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*(x-y)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backprop</span>(<span class="params">self, x, y</span>):</span></span><br><span class="line">    <span class="comment"># x: 输入值  y: 期望</span></span><br><span class="line">    nabla_b = [np.zeros(b.shape) <span class="keyword">for</span> b <span class="keyword">in</span> self.biases]</span><br><span class="line">    nabla_w = [np.zeros(w.shape) <span class="keyword">for</span> w <span class="keyword">in</span> self.weights]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 正向传递</span></span><br><span class="line">    activation = x</span><br><span class="line">    activations = [x]</span><br><span class="line">    zs = []</span><br><span class="line">    <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">        z = (w @ activation) + b</span><br><span class="line">        zs.append(z)</span><br><span class="line">        activation = self.sigmoid(z)</span><br><span class="line">        activations.append(activation)</span><br><span class="line">    <span class="comment"># 反向传播</span></span><br><span class="line">    delta = self.d_loss(activations[-<span class="number">1</span>], y) * self.d_sigmoid(zs[-<span class="number">1</span>])</span><br><span class="line">    nabla_b[-<span class="number">1</span>] = delta</span><br><span class="line">    nabla_w[-<span class="number">1</span>] = delta @ activations[-<span class="number">2</span>].T</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, self.num_layers):</span><br><span class="line">        sp = self.d_sigmoid(zs[-i])</span><br><span class="line">        delta = (self.weights[-i+<span class="number">1</span>].T @ delta) * sp</span><br><span class="line">        nabla_b[-i] = delta</span><br><span class="line">        nabla_w[-i] = delta @ activations[-i-<span class="number">1</span>].T</span><br><span class="line">    <span class="keyword">return</span> nabla_b, nabla_w, np.<span class="built_in">sum</span>((activations[-<span class="number">1</span>]-y)**<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><p>  还需要一个「释放函数」用于数据集的释放和参数的更新，每个 batch 训练完成之后，调用  <code>release()</code> 函数即以指定训练速度向负梯度方向前进一小步：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_buffer</span>(<span class="params">self</span>):</span></span><br><span class="line">    self.biases_buffer = [np.zeros(b.shape) <span class="keyword">for</span> b <span class="keyword">in</span> self.biases]</span><br><span class="line">    self.weights_buffer = [np.zeros(w.shape) <span class="keyword">for</span> w <span class="keyword">in</span> self.weights]</span><br><span class="line">    self.loss_buffer = <span class="number">0</span></span><br><span class="line">    self.buffer_size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">release</span>(<span class="params">self, rate=<span class="number">0.001</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> i, b <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.biases_buffer):</span><br><span class="line">        self.biases[i] -= b * rate</span><br><span class="line">    <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.weights_buffer):</span><br><span class="line">        self.weights[i] -= w * rate</span><br><span class="line">    self.iterates += <span class="number">1</span></span><br><span class="line">    loss = self.loss_buffer / self.buffer_size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'[*] <span class="subst">{self.iterates}</span> iterations, loss: <span class="subst">{loss}</span>'</span>, end=<span class="string">'\r'</span>)</span><br><span class="line">    self.init_buffer()</span><br></pre></td></tr></tbody></table></figure><p>  所有的训练都是为了识别而准备的，所以我这里实现了一个 <code>guess()</code> 方法，神经网络将根据当前训练的成果给出对图片中数字的猜测：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span>(<span class="params">self, img</span>):</span></span><br><span class="line">    x = (<span class="number">1</span>-img[:, :, <span class="number">0</span>]/<span class="number">255</span>).reshape((<span class="number">150</span>, <span class="number">1</span>))</span><br><span class="line">    activation = x</span><br><span class="line">    <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">        activation = self.sigmoid((w @ activation) + b)</span><br><span class="line">    guess = [activation[i][<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">    <span class="keyword">return</span> guess.index(<span class="built_in">max</span>(guess))</span><br></pre></td></tr></tbody></table></figure><p>  在 <code>main()</code> 函数中，进行模板的读取和训练：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    network = NeuralNetwork([(<span class="number">16</span>, <span class="number">150</span>), (<span class="number">16</span>, <span class="number">16</span>), (<span class="number">10</span>, <span class="number">16</span>)])</span><br><span class="line">    network.init()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(<span class="string">'models'</span>):</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(<span class="string">f'models/<span class="subst">{folder}</span>'</span>):</span><br><span class="line">                img = cv2.imread(<span class="string">f'models/<span class="subst">{folder}</span>/<span class="subst">{file}</span>'</span>)</span><br><span class="line">                network.train(img, <span class="built_in">int</span>(file[<span class="number">0</span>]))</span><br><span class="line">            network.release()</span><br></pre></td></tr></tbody></table></figure><p>  在实际应用过程中，非常不推荐使用 CPU 来进行训练，12 核的 CPU 在不做其他优化的情况下只能单核跑满，即使把所有核都利用上，其效率也远不如使用 GPU 训练高；不过好在识别十个数字的网络结构很简单，样本大小也不大，跑了挂着十几分钟之后已经能够基本达到使用需求</p><p><img src="CPU%E8%AE%AD%E7%BB%83.png" alt=""></p><p>  最后随机抽取了一些字符进行测试，发现识别效果还是很不错的（至少比原来用 Tesseract 好多了），24 个字符中仅有一个 7 被识别为 1，其余结果均正确：</p><p><img src="%E8%AE%AD%E7%BB%83%E7%BB%93%E6%9E%9C.png" alt=""></p><p>  将之前的内容整合一下，得到最终的验证码识别模块，简单部署一下，就可以投入使用叻：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        data = pickle.load(<span class="built_in">open</span>(<span class="string">'model.pck'</span>, <span class="string">'rb'</span>))</span><br><span class="line">        self.weights = data[<span class="number">0</span>]</span><br><span class="line">        self.biases = data[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">x</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + np.exp(-x))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">guess</span>(<span class="params">self, img</span>):</span></span><br><span class="line">        x = (<span class="number">1</span>-img/<span class="number">255</span>).reshape((<span class="number">150</span>, <span class="number">1</span>))</span><br><span class="line">        activation = x</span><br><span class="line">        <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">            activation = self.sigmoid((w @ activation) + b)</span><br><span class="line">        result = [activation[i][<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">        <span class="keyword">return</span> result.index(<span class="built_in">max</span>(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">mask, x, y, task</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; mask.shape[<span class="number">0</span>] <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; mask.shape[<span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> mask[x][y]:</span><br><span class="line">        mask[x, y] = <span class="number">1</span></span><br><span class="line">        task.put((x, y))</span><br><span class="line">        <span class="keyword">for</span> way <span class="keyword">in</span> ((-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, -<span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>)):</span><br><span class="line">            dfs(mask, x+way[<span class="number">0</span>], y+way[<span class="number">1</span>], task)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span>(<span class="params">img</span>):</span></span><br><span class="line">    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)[:<span class="number">27</span>, :<span class="number">67</span>]</span><br><span class="line">    img = cv2.threshold(img, <span class="number">180</span>, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    mask = np.array(np.where(cv2.GaussianBlur(img, (<span class="number">3</span>, <span class="number">5</span>), <span class="number">0</span>) &gt; <span class="number">210</span>, <span class="number">255</span>, <span class="number">0</span>), dtype=np.uint8)</span><br><span class="line">    count, cuts = <span class="number">0</span>, []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(mask.shape[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(mask.shape[<span class="number">1</span>]):</span><br><span class="line">            area = Queue()</span><br><span class="line">            minx, maxx, miny, maxy = <span class="number">1</span> &lt;&lt; <span class="number">20</span>, -<span class="number">1</span>, <span class="number">1</span> &lt;&lt; <span class="number">20</span>, -<span class="number">1</span></span><br><span class="line">            dfs(mask, i, j, area)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">20</span> &lt; area.qsize() &lt; <span class="number">150</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">not</span> area.empty():</span><br><span class="line">                    tmp = area.get()</span><br><span class="line">                    minx = <span class="built_in">min</span>(minx, tmp[<span class="number">0</span>])</span><br><span class="line">                    maxx = <span class="built_in">max</span>(maxx, tmp[<span class="number">0</span>])</span><br><span class="line">                    miny = <span class="built_in">min</span>(miny, tmp[<span class="number">1</span>])</span><br><span class="line">                    maxy = <span class="built_in">max</span>(maxy, tmp[<span class="number">1</span>])</span><br><span class="line">                cuts.append((minx, maxx+<span class="number">1</span>, miny, maxy+<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">not</span> area.empty():</span><br><span class="line">                    mask[area.get()] = <span class="number">255</span></span><br><span class="line">    img[np.where(mask != <span class="number">1</span>)] = <span class="number">255</span></span><br><span class="line">    cuts.sort(key=<span class="keyword">lambda</span> s: s[<span class="number">2</span>])</span><br><span class="line">    network = NeuralNetwork()</span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">for</span> i, ss <span class="keyword">in</span> <span class="built_in">enumerate</span>(cuts):</span><br><span class="line">            digit = cv2.resize(img[ss[<span class="number">0</span>]:ss[<span class="number">1</span>], ss[<span class="number">2</span>]:ss[<span class="number">3</span>]], (<span class="number">2</span>*(ss[<span class="number">3</span>]-ss[<span class="number">2</span>]), <span class="number">2</span>*(ss[<span class="number">1</span>]-ss[<span class="number">0</span>])))</span><br><span class="line">            digit = cv2.resize(digit, (ss[<span class="number">3</span>]-ss[<span class="number">2</span>], ss[<span class="number">1</span>]-ss[<span class="number">0</span>]))</span><br><span class="line">            template = np.full((<span class="number">15</span>, <span class="number">10</span>), <span class="number">255</span>, dtype=np.uint8)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">3</span>*digit.shape[<span class="number">1</span>] &gt; <span class="number">2</span>*digit.shape[<span class="number">0</span>]:</span><br><span class="line">                digit = cv2.resize(</span><br><span class="line">                    digit,</span><br><span class="line">                    (<span class="number">10</span>, <span class="built_in">int</span>(<span class="number">10</span>*digit.shape[<span class="number">0</span>]/digit.shape[<span class="number">1</span>])),</span><br><span class="line">                    interpolation=cv2.INTER_LINEAR_EXACT</span><br><span class="line">                )</span><br><span class="line">                dy = <span class="built_in">int</span>((<span class="number">15</span>-digit.shape[<span class="number">0</span>])/<span class="number">2</span>)</span><br><span class="line">                template[dy:dy+digit.shape[<span class="number">0</span>], :] = digit</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                digit = cv2.resize(</span><br><span class="line">                    digit,</span><br><span class="line">                    (<span class="built_in">int</span>(<span class="number">15</span>*digit.shape[<span class="number">1</span>]/digit.shape[<span class="number">0</span>]), <span class="number">15</span>),</span><br><span class="line">                    interpolation=cv2.INTER_LINEAR_EXACT</span><br><span class="line">                )</span><br><span class="line">                dx = <span class="built_in">int</span>((<span class="number">10</span>-digit.shape[<span class="number">1</span>])/<span class="number">2</span>)</span><br><span class="line">                template[:, dx:dx+digit.shape[<span class="number">1</span>]] = digit</span><br><span class="line">            result += <span class="built_in">str</span>(network.guess(template))</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure><p>  最后挂一下自己的仓库地址：</p><div class="tag link"><a class="link-card" title="GitHub" href="https://github.com/Mufanc/HNU-AutoCheckin"><div class="left"><img src="https://github.com/favicon.ico"></div><div class="right"><p class="text">GitHub</p><p class="url">https://github.com/Mufanc/HNU-AutoCheckin</p></div></a></div><h2 id="参考-4">参考</h2><ul><li><p><a href="https://blog.csdn.net/TeFuirnever/article/details/88955455">深度学习100问之深入理解Back Propagation（反向传播）</a></p></li><li><p><a href="https://blog.csdn.net/TeFuirnever/article/details/100136800">深度学习之手撕神经网络代码（基于numpy）</a></p></li></ul><div class="bilibili">    <iframe src="//player.bilibili.com/player.html?aid=16577449&amp;bvid=BV16x411V7Qg&amp;cid=27038097&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Qlivoid 与网课挂机</title>
      <link href="/posts/25707/"/>
      <url>/posts/25707/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><div class="note info simple"><p>  高中的中二作品 <s>（开发流水帐）</s>，放到这边权当留档纪念，当时技术有限，代码实现难免有不优雅之处，还请各位看官一笑了之 ੭ ᐕ)੭*⁾⁾   <s>新一代自动化工具 <a href="http://Auto.py">Auto.py</a> 也在加紧开发中，应该马上就能在我的 GitHub 仓库中看到啦</s></p></div><p>  新冠疫情的降临，直接将高三的寒假从一周延长到了三个月，天天听网课确实是过于枯燥，不如研发个自动挂机脚本出来玩玩……脚本挂机下的网课，直接趴桌子睡觉不再是梦</p><p>  这其实是个早就完成了的项目，开发记录全都丢在石墨文档，如今既然搭建了自己的博客，就索性把石墨那边的文档陆续往这搬，顺便搞一下排版优化</p><p>  整理过程中，看到自己曾经的笔调写下的文档，想起了那段紧张又快乐的时光，果然还是会有些怀念啊……</p><h2 id="写在前面">写在前面</h2><p><strong>2020 年 3 月 9 日，周一</strong></p><p>  首先说一下关于 Qlivoid 名字的由来:</p><p><img src="Qlivoid%E7%94%B1%E6%9D%A5.png" alt=""></p><p>  由于 Qlivoid 项目在我开始使用石墨文档之前就已经在做了，所以整个开发过程将以文档创建日期为分界做两种形式的记录。文档创建之前的内容记录主要以 QQ 空间的记录+回忆为依据编写，可能不能详细地还原出每个bug的出现时间和具体情况，文档创建之后的记录将用各种形式更加详细地记录出现的问题以及出现时间以及解决方案。</p><p>  根据年级的安排来看，可能在 Qlivoid 尚未完善到最终版之前就已经正式开学，无法将一个项目完美的完成还是有些遗憾哈，不过姑且也是一次很有意义的练习和提升机会，就算明知道无法完成，也还是把它做好吧<font size="2">（其实最后还是做完了）</font></p><hr><h2 id="回忆部分">回忆部分</h2><h3 id="2-月-16-日-开端">2 月 16 日 开端</h3><p><img src="%E8%AF%BE%E7%A8%8B%E8%A1%A8.png" alt=""></p><p>  智学网挂机脚本刚刚推出稳定版不到一周，就给我整这种幺蛾子，没办法，课依然不想听，挂机依然要挂，只能开始 QQ 挂机脚本项目（当时还不叫 Qlivoid）</p><h3 id="2-月-20-日-雏形">2 月 20 日 雏形</h3><p>  脚本已经基本完成了，引用了 Jsp 模块，支持上课自动跳转，进入课堂发送消息打卡，复读机，检测问卷星链接并启动悬浮窗进行打卡，代码体量也已经达到了 472 行，能够满足一定程度的挂机需求，但依然不放心让它自己在那挂着，还有很多地方需要改进。</p><h3 id="2-月-28-日-更新">2 月 28 日 更新</h3><p>  在研究每日健康汇报 WPS 表单自动填写的时候，偶然发现能够通过对问卷星的打卡网页进行 JavaScript 注入来完成打卡，可以免去使用无障碍服务，同时有效避免了签到时悬浮窗遮挡聊天界面的问题，在一定程度上提升了脚本的稳定性，但同时也带来了新的问题，Auto.js Pro v7.0.4 中无法正常使用 JavaAdapter 实现类的实例化，所以临时赶工了一个 Socket 脚本来实现 Pro 版与免费版 Auto.js 之间的的通信，具体的流程是使用 Auto.js 免费版创建一个 Socket Server 等待挂机脚本发送的包含问卷星链接的连接请求（这个 Server 依然不稳定，即使使用 <code>try...catch...</code> 进行异常处理，依然有时候在重启 Qlivoid 时会因为不明原因自动停止，不过貌似在 Qlivoid 运行期间表现正常？注释于 3 月 9 日)</p><p>  修复了下课后不能正常退出的问题（这个指的是模拟点击下课按钮失败，因判断下课逻辑错误而不能正常退出通话的问题在 3 月 7 日得到修复）</p><p>  修复了有时候已经上课却找不到课程的问题（怎么修复的忘了）；修复了下课之后不能正常退出的问题（指点击「挂断」按钮失败的问题，判断是否下课的逻辑并无错误）通过重写 GetName 函数，修复了找不到聊天记录的问题。脚本体量扩展到 642 行，整体的稳定性有了较大提升。</p><h3 id="2-月-29-日-更新">2 月 29 日 更新</h3><p>  新增 检测聊天内容决定是否退出通话，逻辑为下课时间到后等待「谢谢老师」出现时退出通话，且最多等待 10 分钟。</p><p>  将 Jsp 模块中的部分代码移植到脚本中，取消对 Jsp 模块的引用，使脚本整体集成到单文件（除了免费版那边的 Server，这个没办法搞<font color="gray" size="2">貌似可以用Intent?</font>）</p><p>  项目正式更名为 Qlivoid，新增日志输出到文件，且日志内容包括输出该条日志代码的行号，方便后续调试。</p><h3 id="3-月-3-日-更新">3 月 3 日 更新</h3><p>  新增 检测到以 <code>|;</code> 或 <code>#;</code>（分号中英文无所谓），结尾的聊天记录时长震动并发出语音警报提醒<br>  新增 英语课群签到打卡功能，同样为检测聊天记录决定行为，这里为了偷懒不想判断签到的 View，用了 QNotified 模块中的签到文本化功能将所有打卡消息转变为 <code>[群签到]群签到</code>（这样就能嵌入到聊天消息记录模块中🌶️）</p><p>  修复有时候自动退出课堂失败的问题（具体问题不记得了，跟 2.28 修复的退课失败原因不同）</p><h3 id="3-月-5-日-大更新">3 月 5 日 大更新</h3><p>  现在复读时会调用 TTS 语音引擎（小米系统内置一个小爱 TTS 引擎，挺好的）朗读复读内容，进群随机发送消息改为随机发送消息或进行群签到，消息内容简单化</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可选消息列表，#Sign# 表示群签到</span></span><br><span class="line">[<span class="string">'1'</span>, <span class="string">'#Sign#'</span>, <span class="string">'#Sign#'</span>, <span class="string">':1'</span>, <span class="string">'#Sign#'</span>, <span class="string">'1'</span>, <span class="string">'壹'</span>, <span class="string">'1'</span>]</span><br></pre></td></tr></tbody></table></figure><p>  Qlivoid 会自动通过群名称判断当前在上的课程，并自动修复所在群与应在群不同的情况（找不到所在群时跳转到应在群，所在群和应在群不同时将应在群设置为所在群）</p><p>  新增对于群签到打卡是否成功的检测，若失败则再次尝试打卡，尝试次数上限定为 3</p><p>  修复由于之前写代码的时候脑抽，忘了判断消息是否为自己发送，以及没有给群签到打卡设定冷却时间，导致的无限打卡的问题</p><p>  修复了由于正则表达式少写一个 <code>:</code> 导致的日志显示行数错误的问题。</p><p>  新增对聊天界面系统通知气泡的检测，在 QQ 抽风或因网络故障进不去直播时发出警告并自动重启 QQ</p><p>  由于发现将日志输出到文件会拖慢脚本循环的速度，去除了这一功能。</p><h3 id="3-月-7-日-更新">3 月 7 日 更新</h3><p><img src="%E5%8D%B11.png" alt="翻车现场#1"></p><p><img src="%E5%8D%B12.png" alt="翻车现场#2"></p><p>  由于 3 月 6 日（你们怎么不发「谢谢老师」啊喂）和 3 月 7 日（奶奶滴，谁知道写作文还要退出语音的？？）语文课上翻车，现将下课后对“谢谢老师”的最长等待时间改为 5 分钟，且若下课前 5 min 内出现“谢谢老师”，则认为提前下课，脚本退出课堂</p><p>  将语文课列为重点关注课堂，所有获取到的聊天记录将以语音形式播出，同时如果消息内容中出现预设的“重点关注”词汇，会进一步触发震动提醒</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重点关注词汇: ['退', '重新', '重进', '语音', '全体']</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="正式记录">正式记录</h2><h3 id="需要注意的几点">需要注意的几点</h3><p>  网课情况复杂多变，需要考虑一些极端情况（比如在任何时刻通话都有可能被迫关闭，脚本应该有能够处理这些异常的能力），同时为了适应错综复杂的情况，脚本不能仅凭设备本地的设定做出行动，一定要能够从集体的行为中获取信息。</p><p>  关闭权限后，会出现某些特殊 Dialog，需要在脚本中实现处理</p><h4 id="悬浮窗权限未能获取">悬浮窗权限未能获取</h4><center><font size="3">出现在刚刚从<b>语音通话/屏幕分享</b>界面退出时:</font></center><p><img src="%E5%B1%8F%E5%B9%95%E5%88%86%E4%BA%AB-%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90.png" alt=""></p><center><font size="3">出现在即将进入<b>群视频</b>时:</font></center><p><img src="%E7%BE%A4%E8%A7%86%E9%A2%91-%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90.png" alt=""></p><center>为了避免偶然状况，<b>任何时候</b>都应具备处理此类 Dialog 的能力</center><h4 id="提示加入通话">提示加入通话</h4><center><font size="3">出现在未设置消息免打扰的群发起通话时:</font></center><p><img src="%E9%80%9A%E8%AF%9D%E6%8F%90%E9%86%92.png" alt=""></p><center>解决方案：暂时设置班群消息免打扰</center><h4 id="提示添加快捷方式">提示添加快捷方式</h4><center><font size="3">出现在进入群视频之前:</font></center><p><img src="%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E6%B7%BB%E5%8A%A0%E6%8F%90%E9%86%92.png" alt=""></p><center>解决方案：点击确定后似乎没有再提示过这个</center><h4 id="提示通话冲突">提示通话冲突</h4><center><font size="3">出现在已在通话但即将加入另一通话时:</font></center><p><img src="%E9%80%9A%E8%AF%9D%E5%86%B2%E7%AA%81.png" alt=""></p><center>解决方法：将点击「<b>继续</b>」的优先级设置在选择「<b>取消</b>」或「<b>忽略</b>」之上</center><h4 id="提示悬浮窗打开失败">提示悬浮窗打开失败</h4><center><font size="3">出现在提示打开悬浮窗权限后切换页面而仍没有悬浮窗权限:</font></center><p><img src="%E6%82%AC%E6%B5%AE%E7%AA%97%E6%89%93%E5%BC%80%E5%A4%B1%E8%B4%A5%E6%8F%90%E9%86%92.png" alt=""></p><h4 id="群公告">群公告</h4><center>解决方法：模拟点击「<b>我知道了</b>」</center><br><p>  于是创建一个<code>cancel</code>函数，用于处理各种dialog事件：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cancel</span>(<span class="params"></span>) </span>{  <span class="comment">// 处理偶然弹出的dialog</span></span><br><span class="line">    click(<span class="string">'继续'</span>) || click(<span class="string">'取消'</span>) || click(<span class="string">'忽略'</span>) || click(<span class="string">'稍后处理'</span>) || click(<span class="string">'我知道了'</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="一些奇技淫巧">一些奇技淫巧</h3><ul><li>使 Auto.js 的日志输出内容包括打印日志的行：</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> methods = [<span class="string">'verbose'</span>, <span class="string">'log'</span>, <span class="string">'info'</span>, <span class="string">'warn'</span>, <span class="string">'error'</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; methods.length; i++) {</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">meth</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> origin = <span class="built_in">console</span>[meth];</span><br><span class="line">        <span class="built_in">console</span>[meth] = <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>{</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                $_$;  <span class="comment">// 故意制造一个错误，得到报错的行</span></span><br><span class="line">            } <span class="keyword">catch</span>(e) {</span><br><span class="line">                <span class="keyword">var</span> st = e.stack;</span><br><span class="line">                st = st.split(<span class="string">'\n'</span>)[<span class="number">1</span>].match(<span class="regexp">/\t.+:(\d+)/</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> out = <span class="string">'Line['</span> + st + <span class="string">']: '</span> + s;</span><br><span class="line">                origin(out);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    })(methods[i]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>在主循环中拦截错误并显示行数：</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {  <span class="comment">// 主循环</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="comment">// Do something...</span></span><br><span class="line">    } <span class="keyword">catch</span>(e) {</span><br><span class="line">        <span class="keyword">var</span> line = e.stack.split(<span class="string">'\n'</span>)[<span class="number">0</span>].match(<span class="regexp">/\t.+:(\d+)/</span>)[<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'错误拦截: At line:'</span> + line + <span class="string">' '</span> + e);</span><br><span class="line">    }</span><br><span class="line">    sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>脚本暂停函数（其实就是个死循环）</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pause</span>(<span class="params"></span>) </span>{  <span class="comment">// 暂停</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3-月-9-日">3 月 9 日</h3><p>  从今天起，语文课的直播换用<strong>群课堂</strong>进行，其实是件好事情（起码不聋了），对于群课堂的支持早在项目初期英语课使用群视频直播时便已完成，只需稍加优化即可投入使用，但再三考虑之后，还是决定将原来用于挂机的 Redmi 6A 更换为 LeEco Le X625，主要基于如下考虑：</p><ul><li><p>换用的新设备有 Root 权限，启动 Activity 或者模拟点击、调用 shell 命令都更加方便<font size="3" color="gray">(其实并不方便，注释于 3.10)</font></p></li><li><p>新设备安装有Xposed框架，某些功能能帮助节省代码量</p></li><li><p>新设备掉电快，拿着也要一直充电才能用，不如用来挂机</p></li><li><p>貌似新设备更流畅？</p></li></ul><p>  当然同时也带来了几个问题，其中之一便是换机之后大部分的代码都需要重构，因为两台机器的型号和 Android 版本不同，QQ 显示的界面也就会有所差异。重构之后的代码将彻底取消对于 Jsp 模块的引用以及与免费版的 Socket 通信，只为提升速度和稳定性。</p><p>  今天的物理课（TM 怎么连续几天出问题）上又发现了新的问题，当在非下课时间，使用「屏幕分享」的其它成员退出后，自己不能检测到并退出。现发现当通话成员只剩一人时，悬浮通话按钮上的文字会变为“<strong>等待中</strong>”，可以通过检测改按钮的状态来判断人数情况，然鹅这并不是一个很好的办法（老师不退出或者还有别的大聪明在的时候容易翻车），希望能够找到一种既能记录聊天内容，又能实时统计通话人数的方案（轮询感觉不太好，容易错过聊天记录）。</p><p>  几小时后…</p><p>  忽然发现了一种较好的解决方案：将 QQ 的悬浮窗权限禁止之后加入通话，标题栏中就会出现人数显示。</p><h4 id="QQ电话、屏幕分享">QQ电话、屏幕分享</h4><p>  自己未加入时：</p><p><img src="%E8%87%AA%E5%B7%B1%E6%9C%AA%E5%8A%A0%E5%85%A5%E6%97%B6.png" alt=""></p><p>  自己加入后：</p><p><img src="%E8%87%AA%E5%B7%B1%E5%8A%A0%E5%85%A5%E5%90%8E.png" alt=""></p><p>  只剩自己一人时：</p><p><img src="%E5%8F%AA%E5%89%A9%E8%87%AA%E5%B7%B1%E4%B8%80%E4%BA%BA%E6%97%B6.png" alt=""></p><h4 id="群视频、群课堂">群视频、群课堂</h4><p>  自己未加入时：</p><p><img src="%E8%87%AA%E5%B7%B1%E6%9C%AA%E5%8A%A0%E5%85%A5%E6%97%B62.png" alt=""></p><p>  自己加入后（Intent跳转回聊天页面卡出「僵尸状态」）：</p><p><img src="%E8%87%AA%E5%B7%B1%E5%8A%A0%E5%85%A5%E5%90%8E2.png" alt=""></p><center>无论自己是否加入，都是显示人数</center><p>  群视频不能没有主持人，所以不会出现只剩自己一人的情况</p><h4 id="特殊情况">特殊情况</h4><p>  当群视频和语音通话同时存在时</p><p><img src="%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5.png" alt=""></p><center>无论自己是否加入，都是显示人数</center><p>  可以根据这些信息整理出一个获取课堂在线人数的函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回课堂成员数量 &amp; 修正课程类型 &amp; 修正在看课程</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMemberCount</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> title = textMatches(<span class="regexp">/语音通话中 \(\d+人\)/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    title = textMatches(<span class="regexp">/\d+人正在语音通话/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    title = text(<span class="string">'等待其他成员加入...'</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    title = textMatches(<span class="regexp">/\d+人正在视频聊天/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'live'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    title = textMatches(<span class="regexp">/\d+人正在通话/</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        type = <span class="string">'live'</span>;  <span class="comment">// 两种方式同时存在时，优先相信群视频</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  接下来分析脚本的运行逻辑，先简单整理一下大框架：</p><p><img src="%E9%80%BB%E8%BE%91%E6%A1%86%E6%9E%B6.png" alt=""></p><p>  由于脚本使用的基本时间单位为<strong>分钟</strong>，所以先写一个获取时间的函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>) </span>{  <span class="comment">// 获取一天中已过的分钟数</span></span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">return</span> date.getHours()*<span class="number">60</span> + date.getMinutes();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  框架逻辑采用时间驱动行为，在不同的时间决定做不同的事情，所以首先需要制作一张课程时刻表：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上下课时间，整数部分为小时，小数部分为分</span></span><br><span class="line"><span class="keyword">var</span> stime = [<span class="number">7.55</span>, <span class="number">9.05</span>, <span class="number">10.15</span>, <span class="number">14.25</span>, <span class="number">15.35</span>, <span class="number">16.45</span>];</span><br><span class="line"><span class="keyword">var</span> etime = [<span class="number">8.45</span>, <span class="number">9.55</span>, <span class="number">11.05</span>, <span class="number">15.15</span>, <span class="number">16.25</span>, <span class="number">17.35</span>];</span><br><span class="line"><span class="keyword">var</span> schedule = [];</span><br><span class="line"><span class="comment">// 把时间格式转换为脚本的通用表示方法</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stime.length; i++) {  </span><br><span class="line">    schedule.push([</span><br><span class="line">        stime[i]*<span class="number">60</span>+(stime[i]-(stime[i]|<span class="number">0</span>))*<span class="number">40</span>,</span><br><span class="line">        etime[i]*<span class="number">60</span>+(etime[i]-(etime[i]|<span class="number">0</span>))*<span class="number">40</span></span><br><span class="line">    ]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  然后需要一张课程表：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 各个科目上课的群，按照课程顺序(数语英自化物生)排列群号</span></span><br><span class="line"><span class="keyword">var</span> classes = [</span><br><span class="line">  <span class="string">'103026***9'</span>, <span class="string">'105673***1'</span>, <span class="string">'98150***2'</span>, <span class="string">'82286***7'</span>, <span class="string">'82286***7'</span>,  <span class="string">'105367***6'</span></span><br><span class="line">];</span><br></pre></td></tr></tbody></table></figure><p>  再定义一个函数来获取当前应上的课程序号，不在上课时间则返回-1：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shouldInWhat</span>(<span class="params">time</span>) </span>{</span><br><span class="line">    should = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; schedule.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (schedule[i][<span class="number">0</span>] &lt;= time &amp;&amp; time &lt; schedule[i][<span class="number">1</span>]) {</span><br><span class="line">            should = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> should;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>然后处理复杂的课内逻辑：</strong></p><p>  也许是因为<strong>屏幕分享</strong>使用的是通话音量的缘故，禁用 QQ 麦克风权限后上课会成为聋子，<s>都已经是盲人了，聋不聋还有意义吗？</s> 听不到老师的声音就容易翻车，所以需要通过 TTS 朗读聊天内容来作为辅助。</p><p>  看来今天是写不完了，以后再补充吧…</p><h3 id="3-月-10-日">3 月 10 日</h3><p>  发现乐视手机的 RootAutomator 存在模拟手势失败的情况，从安全角度考虑，今晚先去找找有没有 Android 7.0 以上的 ROM 刷入，是在不行就只能换回红米来挂机了。</p><p>  先到 ROM乐园<font size="3" color="gray">（无法想象当时我怎么敢用这么恐怖的东西😰，2022.2.22 注）</font> 去找了个号称 Android 7.1 的 ROM（上次刷机说是 9.0 实际上只有 6.0），由于不记得怎么用 TWRP 了就再去找了一遍，希望这次能够刷机顺利吧……</p><p>  附：<a href="http://www.romleyuan.com/lec/read?id=111">TWRP使用教程</a></p><p>  刷入并安装 Flyme：</p><p><img src="%E5%88%B7%E5%85%A5Flyme.jpg" alt=""></p><p>  有过之前刷机的经验，刷入 Flyme 的过程还是很顺利地就完成了，稍等一会就进入到了系统的启动界面:</p><p><img src="%E5%90%AF%E5%8A%A8Flyme.png" alt="开机中...... 话说没开好机居然也能用scrcpy?"></p><p>  成功上车 Android 7.1.2 Flyme，测试看看效果怎么样，希望换 Flyme 之后 WebView 和 RootAutomator 能够不要再出问题</p><p><img src="%E5%85%B3%E4%BA%8E%E6%89%8B%E6%9C%BA.png" alt=""></p><p>  跟之前一样的操作，先把 Auto.js、MT 管理器 和 Xposed 框架装上：</p><p><img src="%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.png" alt="下载安装文件"></p><p><img src="%E8%BF%9B%E5%BA%A6%E6%9D%A1.png" alt=""></p><p><img src="%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%9D%97.png" alt="下载所需模块 &amp; 城通网盘限我速"></p><p>  在启用模块的时候 Xposed Installer 报错，提示找不到文件，进入 MT 管理器查找对应目录，发现 conf 文件夹不存在，手动创建后报 <code>Permission denied</code>，卧槽？？？？</p><p><img src="Permission.png" alt=""></p><p>  淦，似乎在没有原官方 ROM 的情况下将 SuperSu 换成 Magisk 极其麻烦，白折腾几个小时，我还是换用太极吧（Root 用户用太极也太憋屈了吧）</p><p><img src="%E5%A4%AA%E6%9E%81.png" alt=""></p><p>  不过姑且还是把太极装上了，希望太极和 Root 不会冲突吧，装了 3 个模块，主要还是为了使用防撤回和签到文本化，打开 QQ 检查一下模块是否能用</p><p><img src="Module-1.png" alt=""></p><p><img src="Module-2.png" alt=""></p><p><img src="Module-3.png" alt=""></p><p><img src="Module-4.png" alt=""></p><p>  成功辣！！所有模块都能正常生效，换机的小插曲应该也能告一段落了吧，回头想想今天还是做了不少事情的，心里也是大大的舒畅，明天就可以开始正式编写脚本啦</p><h3 id="3-月-11-日">3 月 11 日</h3><p>  终于又可以继续写代码叻，尽管现在已经是半夜两点多钟，但还是完全没有困意，先把基本功能函数做好吧</p><ul><li>对 getMemberCount( ) 的修改</li></ul><p>  为提高效率，把获取通话人数、修正课程类型、修正课程标记、获取入口控件全部集成进去处理</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMemberCount</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>, view = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="literal">true</span>; i; i = <span class="literal">false</span>) {</span><br><span class="line">        <span class="keyword">var</span> title = textMatches(<span class="regexp">/语音通话中 \(\d+人\)/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = textMatches(<span class="regexp">/\d+人正在语音通话/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = text(<span class="string">'等待其他成员加入...'</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = textMatches(<span class="regexp">/\d+人正在视频聊天/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live'</span>;</span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        title = textMatches(<span class="regexp">/\d+人正在通话/</span>).findOnce();</span><br><span class="line">        <span class="keyword">if</span> (title) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live'</span>;  <span class="comment">// 两种方式同时存在时，优先选择群视频</span></span><br><span class="line">            count = <span class="built_in">parseInt</span>(title.text().match(<span class="regexp">/(\d+)人/</span>)[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> [count, view];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这里用了一种非常规写法：创建一个只跑一次的 for 循环，并在判断语句内使用 break，可以有效避免使用过多 <code>if...else...</code> 结构，优化代码的执行效率和可读性</p><ul><li>rClick(view) &amp; pClick(view)</li></ul><p>  rClick 为递归点击，从 view 向上寻找到第一个可点击的父控件进行点击，pClick 为坐标点击，直接调用 Android 7.0+ 无障碍手势点击控件的坐标中心。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rClick</span>(<span class="params">view</span>) </span>{  <span class="comment">// 递归点击控件</span></span><br><span class="line">    <span class="keyword">return</span> view.clickable() ? view.click() : rClick(view.parent());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pClick</span>(<span class="params">view</span>) </span>{  <span class="comment">// 以坐标点击控件</span></span><br><span class="line">    <span class="keyword">var</span> bounds = view.bounds();</span><br><span class="line">    click(bounds.centerX(), bounds.centerY());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>jumpTo( ) 函数</li></ul><p>  通过 Intent（没错又是它）跳转到指定QQ群的资料卡，再用无障碍模拟点击「发消息」进入该群聊天界面</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jumpTo</span>(<span class="params">qid</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(</span><br><span class="line">        <span class="string">'mqqapi://card/show_pslcard?src_type=internal&amp;version=1&amp;card_type=group&amp;uin='</span> + qid</span><br><span class="line">    ));</span><br><span class="line">    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">    context.startActivity(intent);</span><br><span class="line">    text(<span class="string">'发消息'</span>).findOne(<span class="number">3000</span>).click();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  忽然意思到一个较为棘手的问题，对于<strong>群课堂</strong>，无论自己是否在内，标题栏提示语都为同一格式，那么应该如何判断自己是否在内呢？</p><p>  想到的第一个方法是用 shell 命令动态更改 QQ 的悬浮窗权限，进入群课堂时打开悬浮窗权限，进入屏幕分享时禁用悬浮窗权限，结果查了查发现并不好操作。另一种可能可行的方案是通过 Root 权限直接启动系统设置的 Activity，再使用无障碍服务控制 QQ 的悬浮窗权限（不过这样搞真的稳定吗）</p><p><img src="%E5%83%B5%E5%B0%B8%E9%80%9A%E7%9F%A5.png" alt=""></p><p>  还想试试看能不能通过检测通知栏消息来判断课程状态，结果发现不管自己是否在课堂内，此通知都会显示在通知栏（而且不强制停止 QQ 还清不掉），看来这方法不可行。</p><p>  那有没有可能通过判断 QQ 媒体音量大小来判断自己是否位于直播间内呢？</p><p>  …貌似不行。</p><p>  不过在查找文档的过程中想到如果有类似网易云音乐的方式能够判断应用是否正在占用音频通道，不就能判断出自己是否位于直播间内了吗。</p><p>  emmmmmmm，这个方法即使可行，也违背了从简的初衷，我还是通过无障碍定时打开 QQ 悬浮窗权限吧：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置QQ悬浮窗权限，返回是否成功</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setFloatyPermission</span>(<span class="params">flag</span>) </span>{</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">        intent = <span class="keyword">new</span> Intent(<span class="string">"com.meizu.safe.security.SHOW_APPSEC"</span>);</span><br><span class="line">        intent.addCategory(Intent.CATEGORY_DEFAULT);</span><br><span class="line">        intent.putExtra(<span class="string">"packageName"</span>, <span class="string">'com.tencent.mobileqq'</span>);</span><br><span class="line">        context.startActivity(intent);</span><br><span class="line">        <span class="keyword">var</span> button = desc(<span class="string">'悬浮窗,'</span>).findOne(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">if</span> (button) {</span><br><span class="line">            <span class="keyword">if</span> (flag) {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'关闭'</span> &amp;&amp; button.click();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'开启'</span> &amp;&amp; button.click();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    $ = $();</span><br><span class="line">    sleep(<span class="number">1000</span>), back();</span><br><span class="line">    <span class="keyword">return</span> $;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  测试结果还是十分令人满意的，能够在两秒钟之内吧权限切换好，当然还需要导入两个类作为支持（群跳转、群签到、权限控制都要用到这两个类）：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">importClass(android.net.Uri);</span><br><span class="line">importClass(android.content.Intent);</span><br></pre></td></tr></tbody></table></figure><p><strong>下面插一些题外话</strong></p><p>  唔，看来还是不能啥都不挂直接睡啊，今天下午的这波生物课有点惊险了呢，明天上课的时候一定要记得把录音权限给了，不然听不到声音容易翻车啊。。。</p><div><a name="生物课-危"></a><img src="危3.png" style="margin-left:0;"><img src="危4.png" style="margin-left:0;"></div><p>  又是一波有惊无险……</p><h3 id="3-月-12-日">3 月 12 日</h3><p>  又拖了一天，真不知道在开学前能不能完成，加油继续写吧。。上次做了悬浮窗权限的控制，还差个能够检测悬浮窗是否存在的函数 <s>（有必要吗？直接关权限不行？不行，会陷入后台僵尸状态）</s></p><p>  忽然发现好像还能再做点优化：加入课堂之后不再使用无障碍 <code>back</code> 函数返回聊天界面，而是直接统一使用 <code>jumpTo</code> 函数直接跳转到聊天界面，相较原来的方法，便捷而且稳定。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (type) {</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'live+'</span>:</span><br><span class="line">        pClick(text(<span class="string">'加入视频'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'live'</span>:</span><br><span class="line">        pClick(text(<span class="string">'加入本群房间'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">        <span class="keyword">if</span> (id(<span class="string">'chief_anchor_txt'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>)) {</span><br><span class="line">            jumpTo(classes[should]);</span><br><span class="line">            viewing = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'share'</span>:</span><br><span class="line">        pClick(text(<span class="string">'立即加入'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">        desc(<span class="string">'挂断'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>) &amp;&amp; (jumpTo(classes[should]), viewing = <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  又发现了新的问题，有时候「<strong>加入本群房间</strong>」按钮明明就在那里，可无障碍服务就是获取不到控件，极其依妖</p><p><img src="TypeError.png" alt=""></p><p>  仔细测试了一番，发现原来是因为进行 pClick 之前没有加延时，导致控件尚未变为可点击的状态就已经出发坐标点击，修改 pClick 函数后成功进入课堂</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pClick</span>(<span class="params">view, dalay</span>) </span>{  <span class="comment">// 以坐标点击控件</span></span><br><span class="line">    dalay &amp;&amp; sleep(dalay);</span><br><span class="line">    <span class="keyword">var</span> bounds = view.bounds();</span><br><span class="line">    click(bounds.centerX(), bounds.centerY());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  使用时传递 <code>delay</code> 参数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pClick(text(<span class="string">'加入本群房间'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br></pre></td></tr></tbody></table></figure><p>  现在脚本已经具有最基本的上退课功能了(除了退出群课堂)，接下来将加入更为复杂的课内逻辑处理，包括入课冒泡、群签到打卡、问卷星打卡、复读机等高级功能的实现，同时也正在考虑加入定时截图的功能，以应对类似 <a href="./#%E7%94%9F%E7%89%A9%E8%AF%BE-%E5%8D%B1">3 月 11 日生物课</a> 的情况。</p><p>  刚刚在真实课堂测试的过程中发现了一个新的问题，在自己进入通话之后，当有人**进入或退出语音通话时，标题栏的文本会发生改变（群课堂的还没测试，目测应该不会）</p><p><img src="%E6%9C%89%E4%BA%BA%E8%BF%9B%E5%85%A5%E6%88%96%E9%80%80%E5%87%BA%E6%97%B6%E6%A0%87%E9%A2%98%E7%9A%84%E5%8F%98%E5%8C%96.png" alt=""></p><p>  给跳转课堂加上一个判断条件后解决：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找不到入口、应在上课、但没在上课</span></span><br><span class="line"><span class="keyword">if</span> (!tView &amp;&amp; ~should &amp;&amp; !viewing) {</span><br><span class="line">    jumpTo(classes[should]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  话说貌似可以顺便把每个人的去留情况也记录下来，做个教师助手之类的东西？<s>(做是不可能做的)</s></p><p>  为了保险起见，将留在课堂的人数下限更改为 25，其实最初也有想过通过检测人数的变化趋势来判断上下课，后来感觉算法不太好写，容易出岔子就放弃了，讲道理要是能够把算法和逻辑设计好的话应该是比现在的朴素判断方法更好的。</p><h3 id="3-月-13-日">3 月 13 日</h3><p>  今天先主要攻克复读机及其旗下方法，（貌似）在这台乐视手机上不会出现获取不到 view 的情况 <s>（顶多也就是点不到而已）</s>，于是直接使用 UICollection 的 findOne 方法寻找聊天记录</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> listView = id(<span class="string">'listView1'</span>).findOne(<span class="number">1000</span>).children(), list = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; listView.length; i++) {</span><br><span class="line">    <span class="keyword">var</span> children = listView[i].children();</span><br><span class="line">    <span class="keyword">var</span> name = children.findOne(id(<span class="string">'chat_item_nick_name'</span>));</span><br><span class="line">    <span class="keyword">var</span> content = children.findOne(id(<span class="string">'chat_item_content_layout'</span>).className(<span class="string">'android.widget.TextView'</span>));</span><br><span class="line">    <span class="keyword">if</span> (name &amp;&amp; content) {</span><br><span class="line">        list.push([name, content]);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  能获取到聊天记录，不知道会不会隐藏着什么尚未出现的问题，而且当不在聊天界面时，findOne(1000) 就会返回 <code>null</code>，导致调用 children 方法时报错，添加限制条件后解决：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(<span class="string">'rlCommenTitle'</span>).exists() &amp;&amp; repeat();</span><br></pre></td></tr></tbody></table></figure><p>  最近正好在研究 via 浏览器的插件脚本，用来屏蔽百度和 CSDN 的网页自动折叠，我不禁灵光一闪，想到可能可以借助 via 的插件功能实现问卷星的自动打卡功能，免去了自己开多线程写悬浮窗的麻烦 <s>，反正已经用 Xposed 了，再多个 via 也无所谓（其实是因为懒）</s></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wjxSign</span>(<span class="params">url</span>) </span>{  <span class="comment">// 问卷星打卡</span></span><br><span class="line">    <span class="comment">// **必须**保证Via浏览器为手机默认浏览器</span></span><br><span class="line">    app.openUrl(url);</span><br><span class="line">    desc(<span class="string">'提交成功！'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>);</span><br><span class="line">    jumpTo(<span class="string">'105673***1'</span>);  <span class="comment">// 因为只有语文在问卷星打卡所以~</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  函数写起来还是很快的，简单三行就搞定了，不过要保证能用，就必须要保证 Via 为手机默认浏览器，且需要在 Via 中添加以下脚本：</p><p><img src="Via%E8%84%9A%E6%9C%AC.png" alt=""></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName(<span class="string">'jqradio'</span>)[<span class="number">0</span>].click();</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'q2'</span>).value = <span class="string">'49'</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'q3'</span>).value = <span class="string">'【君の名は】'</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'ctlNext'</span>).click();</span><br><span class="line">}, <span class="number">3000</span>);</span><br></pre></td></tr></tbody></table></figure><p>  接着在 getMemberCount 函数中增加了一段代码，用于判断是否存在群课堂的悬浮窗控件，从而判断自己是否在直播间内（其实这个两天前就应该做了，一直拖到现在才搞）</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (type == <span class="string">'live'</span>) {</span><br><span class="line">    <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (roots[i].packageName() == <span class="string">''</span> &amp;&amp; roots[i].clickable()) {</span><br><span class="line">            viewing = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    viewing = <span class="literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  继续测试，然后发现当悬浮窗存在时，只能点击悬浮窗右上角的 <code>x</code> 才能正常退出直播间，于是安排上了新的代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">auto.setWindowFilter(<span class="function">(<span class="params">win</span>) =&gt;</span> {<span class="keyword">return</span> <span class="literal">true</span>;});</span><br><span class="line"><span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">  <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">      pClick(roots[i].child(<span class="number">0</span>).child(<span class="number">1</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">auto.setWindowFilter(<span class="function">(<span class="params">win</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">return</span> win.type == <span class="string">'TYPE_APPLICATION'</span>;</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>  刚刚在读取消息记录的部分把问卷星打卡也加入了：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">url</span>) </span>{</span><br><span class="line">    url &amp;&amp; wjxSign(url);</span><br><span class="line">})(list[i][<span class="number">1</span>].match(<span class="regexp">/https?:\/\/www\.wjx\.cn\/[A-Za-z0-9/]+\.aspx?/</span>));</span><br></pre></td></tr></tbody></table></figure><p>  严格来说，现在已经是 3 月 14 日凌晨四点了，困得一批，可能写出来的东西会有点混乱，再写估计就要语无伦次了，今天就先到这里吧。</p><p>  待我把 Auto.js 的权限和 QQ 登录状况检查一遍，确保明天早上的两个自动脚本能够顺利运行，没发现什么问题就睡啦</p><h3 id="3-月-14-日">3 月 14 日</h3><p>  很难受，今天早上起来，直接挂机睡觉了，结果因为老脚本中的 now 变量没有替换成 getTime() 函数，导致进入下课逻辑的时候报找不到 now 变量（这波危），看来还是我对脚本太自信了</p><p><img src="%E6%89%BE%E4%B8%8D%E5%88%B0now.png" alt=""></p><p>  下午测试，发现下课逻辑处理不当，导致脚本发生鬼畜，其原因是对等待逻辑的处理有问题，原逻辑是「如果没有发现“谢谢老师”，且 15 分钟前不应该上课，则直接退出」，测试的时候发现这脚本会在上课的前 15 分钟发生鬼畜，反复进退，现将逻辑更改为「如果没有发现“谢谢老师”，且 15 分钟前和现在都不在上课时间，则直接退出」，问题得到解决</p><p>  现在的 Qlivoid++ 还没有像旧版一样的震动提醒功能，我打算在这一版中优化震动提醒的功能，使用频率的变化来体现不同的重要程度，并同时支持调节时间长短的功能：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">notify</span>(<span class="params">importance, time</span>) </span>{</span><br><span class="line">    time = time || <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">var</span> cycle = <span class="number">130</span> - importance*<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> msg = <span class="string">'- '</span>.repeat((time/cycle)|<span class="number">0</span>) + <span class="string">'-'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; msg.length; i++) {</span><br><span class="line">        msg[i] == <span class="string">'-'</span> &amp;&amp; device.vibrate(cycle);</span><br><span class="line">        sleep(cycle+<span class="number">5</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这就是新的消息通知函数，支持频率级别 0 ~ 9，震动时间可调，默认 500 ms</p><p>  下一步准备对 getMemberCount 函数再做一次优化，使用正则表达式匹配标题文字，减少搜索控件的次数，其实最终目的还是为了提高获取聊天记录的效率，全力辅助复读机（这复读机还真是麻烦，逻辑十分复杂）。以及进一步增加当直播出现故障时重启 QQ 的功能</p><h3 id="3-月-15-日">3 月 15 日</h3><p>  昨天有些事忙去了，就没写多少代码，今天打算先把比较简单的入课打卡功能先做了，然后再整理一波复读机的逻辑</p><p>  入课冒泡函数整理如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> signText = [<span class="string">'1'</span>, <span class="string">'#sign#'</span>, <span class="string">'.'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubble</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> time = getTime();</span><br><span class="line">    <span class="keyword">if</span> (~shouldInWhat(time+<span class="number">5</span>) &amp;&amp; !~shouldInWhat(time-<span class="number">7</span>)) {</span><br><span class="line">        <span class="keyword">var</span> msg = signText[(random()*signText.length)|<span class="number">0</span>];</span><br><span class="line">        msg == <span class="string">'#sign#'</span> ?  qciSign(shouldInWhat(getTime())) : sendMessage(msg);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其中涉及到的 sendMessage 函数：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params">msg</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> editText = id(<span class="string">'input'</span>).findOne(<span class="number">3000</span>);</span><br><span class="line">    <span class="keyword">if</span> (editText) {</span><br><span class="line">        editText.setText(msg);</span><br><span class="line">        id(<span class="string">'fun_btn'</span>).findOne(<span class="number">3000</span>).click();;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'自动发送了消息，注意安全。'</span>);</span><br><span class="line">        notify(<span class="number">3</span>, <span class="number">150</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  然后补上昨天的 GetMemberCount 函数升级版，使用字符串处理代替了多次寻找控件，使函数耗时从 1.2s 缩短到小于 400ms</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMemberCount</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>, view = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> title = textMatches(<span class="regexp">/(?:语音通话中 \()?\d+\+?人\)?(?:正在(?:(?:语音)?通话|视频聊天))?|等待其他成员加入\.\.\./</span>).findOne(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span> (title) {</span><br><span class="line">        <span class="keyword">var</span> tText = title.text();</span><br><span class="line">        <span class="keyword">var</span> population = tText.match(<span class="regexp">/(\d+)\+?人/</span>);</span><br><span class="line">        population &amp;&amp; (count = <span class="built_in">parseInt</span>(population[<span class="number">1</span>]));</span><br><span class="line">        <span class="keyword">if</span> (tText.match(<span class="regexp">/语音通话中 \(\d+\+?人\)/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在语音通话/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText == <span class="string">'等待其他成员加入...'</span>) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在视频聊天/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live'</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在通话/</span>)) {</span><br><span class="line">            view = title;</span><br><span class="line">            type = <span class="string">'live+'</span>;  <span class="comment">// 两种方式同时存在时，优先选择群视频</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 通过检测悬浮窗状态判断是否位于课堂内</span></span><br><span class="line">    <span class="keyword">if</span> (type == <span class="string">'live'</span>) {</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">            auto.setWindowFilter(<span class="function">() =&gt;</span> {<span class="keyword">return</span> <span class="literal">true</span>;});</span><br><span class="line">            <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">                <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">                    viewing = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            viewing = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        $();</span><br><span class="line">        auto.setWindowFilter(<span class="function">(<span class="params">win</span>) =&gt;</span> {</span><br><span class="line">            <span class="keyword">return</span> win.type == <span class="string">'TYPE_APPLICATION'</span>;</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> [count, view];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  关于复读机的逻辑，首先必须保证，复读机不能瞎说话，也不能等待很久后才复读说话，必须具有及时性，其次又不能过于自闭，要有一定的活跃度，这样复读机才有其存在的意义</p><p>  首先为了安全考虑，长度大于 5 的消息不会被脚本复读，当屏幕上有自己的消息存在时也不会触发复读，上次复读过的消息也不会被复读（这里的「上次」应该有一个判定机制，如经过一段时间后就不再认为是「上次」），同时注意区分大小写，避免诸如「A」 和「a」被复读两次的情况发生，应有一个算法，对消息进行处理，保证复读内容的有效，准确。</p><h3 id="3-月-16-日">3 月 16 日</h3><p>  发现了一个恶性 bug，如果反复调用 <code>auto.setWindowFilter()</code> 函数，很容易出现获取不到控件的情况，于是为了稳定性考虑，不得已牺牲一些效率，将窗口过滤器设置成全局模式</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto.setWindowFilter(<span class="function">() =&gt;</span> {<span class="keyword">return</span> <span class="literal">true</span>;});</span><br></pre></td></tr></tbody></table></figure><p>  新问题，当群课堂结束以后，悬浮窗文字会变为「<strong>等待中</strong>」，此时标题栏消失，未能正常退出直播间，通过在 getMemberCount 函数末尾对悬浮窗的判定中增加一小段代码解决，当检测到悬浮窗显示的字样变为「等待中」时，启用坐标点击悬浮窗右上角的「<code>×</code>」关闭悬浮窗。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chFlag = type.startsWith(<span class="string">'live'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">            <span class="keyword">if</span> (roots[i].children().findOne(text(<span class="string">'等待中'</span>))) {</span><br><span class="line">                <span class="built_in">console</span>.log();</span><br><span class="line">                pClick(roots[i].child(<span class="number">0</span>).child(<span class="number">1</span>));</span><br><span class="line">            }</span><br><span class="line">            chFlag &amp;&amp; (viewing = <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    chFlag &amp;&amp; (viewing = <span class="literal">false</span>);</span><br><span class="line">}</span><br><span class="line">$();</span><br></pre></td></tr></tbody></table></figure><p>  改完顺手优化了下 reset 函数中对于 QQ 出现异常情况的判定，这样写或许会快一些吧。。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (id(<span class="string">'graybar'</span>).textMatches(<span class="regexp">/加入语音通话失败|网络异常.*/</span>).exists()) {</span><br><span class="line">    restartQQ();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  后续可能会考虑继续加入屏幕日志功能，毕竟没连接电脑的时候看日志很不方便。而且听说开学时间延后到 4 月初了？从现在的进度看来脚本应该能够在开学之前完成，这段时间为了写脚本确实有点太拼了，睡眠不够状态也不太好，今天就先睡个午觉吧（虽然不懂这一觉会睡到几点钟），话说明天就是 Qlivoid 正式开发一个月了呢，时间过得还真快啊。</p><p>  下午化学课继续测试，发现有时候 QQ 的权限会「耍流氓」，在已经禁用悬浮窗权限的情况下依然显示悬浮窗，在代码中加入了一行，使脚本子在每次修改权限的时候至少拨动一次按钮，不知道能否解决问题：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setFloatyPermission</span>(<span class="params">flag</span>) </span>{</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>) </span>{</span><br><span class="line">        intent = <span class="keyword">new</span> Intent(<span class="string">"com.meizu.safe.security.SHOW_APPSEC"</span>);</span><br><span class="line">        intent.addCategory(Intent.CATEGORY_DEFAULT);</span><br><span class="line">        intent.putExtra(<span class="string">"packageName"</span>, qqpkg);</span><br><span class="line">        context.startActivity(intent);</span><br><span class="line">        <span class="keyword">var</span> button = desc(<span class="string">'悬浮窗,'</span>).findOne(<span class="number">2000</span>);</span><br><span class="line">        button.click();</span><br><span class="line">        sleep(<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">if</span> (button) {</span><br><span class="line">            <span class="keyword">if</span> (flag) {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'开启'</span> &amp;&amp; button.click();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> button.text() == <span class="string">'关闭'</span> &amp;&amp; button.click();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    $ = $();</span><br><span class="line">    sleep(<span class="number">800</span>), back();</span><br><span class="line">    <span class="keyword">return</span> $;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  一定要注意这里「开启」和「关闭」的判定要反过来（因为之前点过一次按钮），不然就会授权出错，该给的时候没给，不该给的时候却又给权限。</p><p>  接着直接从旧版 Qlivoid 中复制关于屏幕日志的部分（这部分没怎么问题，不改也能正常使用）：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">screenLog</span>(<span class="params"></span>) </span>{  <span class="comment">// 启动悬浮窗，将日志显示在屏幕上</span></span><br><span class="line">    <span class="keyword">var</span> w = floaty.rawWindow(</span><br><span class="line">        <span class="xml"><span class="tag">&lt;<span class="name">vertical</span> <span class="attr">bg</span>=<span class="string">'#10000000'</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">com.stardust.autojs.core.console.ConsoleView</span> <span class="attr">id</span>=<span class="string">'ConS'</span> <span class="attr">margin</span>=<span class="string">'30'</span>/&gt;</span>    </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">vertical</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">    w.setSize(-<span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">    w.setTouchable(<span class="literal">false</span>);</span><br><span class="line">    ui.run(<span class="function">() =&gt;</span> {</span><br><span class="line">        w.ConS.setConsole(org.autojs.autojs.autojs.AutoJs.getInstance().getGlobalConsole());</span><br><span class="line">        w.ConS.findViewById(<span class="number">213129</span>***<span class="number">3</span>).setVisibility(android.view.View.GONE);</span><br><span class="line">    });    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  下一步准备加入类似旧版的每隔一定周期日志提醒的功能，还可以顺便将复读机的重置器也添加进去。</p><p>  ……出现了严重的 bug，这脚本到上课时间居然不会自己切换群聊，检查了一下发现是由于界面刷新导致之前获取的 View 无效的问题，无奈之下只能再次牺牲效率，增加一次对控件的搜索，下面是再次修改过的 getMemberCount 函数片段：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>, tType = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> title = textMatches(<span class="regexp">/(?:语音通话中 \()?\d+\+?人\)?(?:正在(?:(?:语音)?通话|视频聊天))?|等待其他成员加入\.\.\.|.+(加入|退出)了.+/</span>).findOne(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span> (title) {</span><br><span class="line">    <span class="keyword">var</span> tText = title.text();</span><br><span class="line">    <span class="keyword">var</span> population = tText.match(<span class="regexp">/(\d+)\+?人/</span>);</span><br><span class="line">    population &amp;&amp; (count = <span class="built_in">parseInt</span>(population[<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (tText.match(<span class="regexp">/语音通话中 \(\d+\+?人\)/</span>)) {</span><br><span class="line">        tType = <span class="string">'语音通话中'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在语音通话/</span>)) {</span><br><span class="line">        tType = <span class="string">'人正在语音通话'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">false</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText == <span class="string">'等待其他成员加入...'</span>) {</span><br><span class="line">        tType = <span class="string">'等待其他成员加入'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">        count = <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在视频聊天/</span>)) {</span><br><span class="line">        tType = <span class="string">'人正在视频聊天'</span>;</span><br><span class="line">        type = <span class="string">'live'</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (tText.match(<span class="regexp">/\d+\+?人正在通话/</span>)) {</span><br><span class="line">        tType = <span class="string">'人正在通话'</span>;</span><br><span class="line">        type = <span class="string">'live+'</span>;  <span class="comment">// 两种方式同时存在时，优先选择群视频</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (~tText.search(<span class="regexp">/(?:加入|退出)了/</span>)) {</span><br><span class="line">        tType = <span class="string">'#'</span>;</span><br><span class="line">        type = <span class="string">'share'</span>, viewing = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  将原来的获取控件改成了获取文本，界面切换后再通过文本获取控件，同时修改了正则表达式，使其能够匹配有人加入或退出时的提示，同样对主循环也做了一些修改，使其适应现在的 GerMemberCount 函数，修改后的主循环如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        reset();</span><br><span class="line">        <span class="keyword">var</span> should = shouldInWhat(getTime());</span><br><span class="line">        <span class="keyword">if</span> (id(<span class="string">'rlCommenTitle'</span>).exists()) {</span><br><span class="line">            repeat();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">var</span> pair = getMemberCount();  <span class="comment">// 同时获取人数和入口view</span></span><br><span class="line">        <span class="keyword">var</span> mCount = pair[<span class="number">0</span>], tType = pair[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> ((~should &amp;&amp; !viewing) || !tType) {  <span class="comment">// 应在上课、没在上课 或 找不到标题</span></span><br><span class="line">            jumpTo(classes[should]);</span><br><span class="line">            sleep(<span class="number">2000</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (mCount) {</span><br><span class="line">            <span class="keyword">if</span> (~should &amp;&amp; mCount &gt;= <span class="number">40</span> &amp;&amp; !viewing) {  <span class="comment">// 应在上课、没在上课、人数&gt;=40</span></span><br><span class="line">                notify(<span class="number">3</span>, <span class="number">150</span>), <span class="built_in">console</span>.log(<span class="string">'发现课程，即将加入'</span>);</span><br><span class="line">                setFloatyPermission(type.startsWith(<span class="string">'live'</span>)), sleep(<span class="number">2000</span>);</span><br><span class="line">                rClick(textContains(tType).findOne(<span class="number">100</span>));</span><br><span class="line">                <span class="keyword">switch</span> (type) {</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live+'</span>:</span><br><span class="line">                        pClick(text(<span class="string">'加入视频'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live'</span>:</span><br><span class="line">                        pClick(text(<span class="string">'加入本群房间'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">                        <span class="keyword">if</span> (id(<span class="string">'chief_anchor_txt'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>)) {</span><br><span class="line">                            jumpTo(classes[should]);</span><br><span class="line">                            viewing = <span class="literal">true</span>;</span><br><span class="line">                            sleep(<span class="number">2000</span>), bubble();</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'share'</span>:</span><br><span class="line">                        pClick(text(<span class="string">'立即加入'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>), <span class="number">500</span>);</span><br><span class="line">                        desc(<span class="string">'挂断'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>) &amp;&amp; (jumpTo(classes[should]), viewing = <span class="literal">true</span>);</span><br><span class="line">                        sleep(<span class="number">2000</span>), bubble();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">var</span> forcedExit = !~shouldInWhat(getTime()-<span class="number">15</span>) &amp;&amp; !~shouldInWhat(getTime());</span><br><span class="line">            <span class="keyword">if</span> (viewing &amp;&amp; (mCount &lt; <span class="number">25</span> || exitConfirm || forcedExit)) {</span><br><span class="line">                notify(<span class="number">3</span>, <span class="number">150</span>), <span class="built_in">console</span>.log(<span class="string">'进入下课逻辑'</span>);</span><br><span class="line">                <span class="keyword">switch</span> (type) {</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live+'</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'live'</span>:</span><br><span class="line">                        <span class="keyword">var</span> roots = auto.windowRoots;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roots.length; i++) {</span><br><span class="line">                            <span class="keyword">if</span> (roots[i].packageName() == qqpkg &amp;&amp; roots[i].clickable()) {</span><br><span class="line">                                pClick(roots[i].child(<span class="number">0</span>).child(<span class="number">1</span>));</span><br><span class="line">                                viewing = <span class="literal">false</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'share'</span>:</span><br><span class="line">                        rClick(textContains(tType).findOne(<span class="number">100</span>));</span><br><span class="line">                        desc(<span class="string">'挂断'</span>).findOne(<span class="number">10</span>*<span class="number">1000</span>).click();</span><br><span class="line">                        viewing = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">catch</span>(e) {</span><br><span class="line">        <span class="keyword">var</span> line = e.stack.split(<span class="string">'\n'</span>)[<span class="number">0</span>].match(<span class="regexp">/\t.+:(\d+)/</span>)[<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'错误拦截: At line:'</span> + line + <span class="string">' '</span> + e);</span><br><span class="line">        notify(<span class="number">6</span>, <span class="number">200</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  每隔 5 分钟脚本应把 viewing 设置为 <code>false</code>，避免获取不到 view 时不上课的情况，可以增加脚本的稳定性和安全性</p><h3 id="3-月-17-日">3 月 17 日</h3><p>  犹豫了下决定加入脚本暂停功能，使得脚本能够在运时可控地暂停，方便紧急时的处理和调试，暂停过程中每隔 5s 发送一次震动提醒，代码比较简单，就只有一个悬浮窗和一个死循环，这里就不放出来了。</p><p><img src="%E8%84%9A%E6%9C%AC%E6%9A%82%E5%81%9C.png" alt=""></p><p>  忽略掉乱七八糟的报错，屏幕中间那个写着「✔」的悬浮窗，就是脚本暂停的控制开关，脚本在执行完一个循环后，如果发现设置暂停的变量为 <code>true</code>，就会进入死循环，直到变量值变为 <code>false</code></p><p>  此外随着脚本逻辑越来越复杂，可能以后那些比较复杂的机制，都不太方便把代码直接放出来，可能会转为以图片为主的记录模式</p><p>  终于正式进入复读的开发了吗？先把逻辑整理清楚，接着上次的分析，长度过大的消息不会被复读，一定时间内复读过的消息不会被再次复读；每隔 40s 向前滚动一次「<strong>发送过的消息</strong>」列表，列表长度为 3，即三次内发送过的消息不会被再次复读；如果获取到的消息全部由数字和字母组成，且长度<strong>不为</strong> 1，则全部转为小写，若长度<strong>为</strong>  1，则转为大写，这样一来就能较好的适应各科的发言情况了。每次复读之后都会有 20s 的冷却时间，冷却时间内不会复读任何消息（但依然会记录，只是不读而已），因为有可能会出现复读完成后侧循环刚好完成的情况，复读的冷却要在主循环中进行。</p><p><img src="%E5%A4%8D%E8%AF%BB%E6%9C%BA.png" alt=""></p><p>  复读机完成，能够正常复读，明天继续测试看看还有没有 bug，至此四大金刚函数全部完成，准备将脚本正式投入使用。</p><h3 id="3-月-19-日">3 月 19 日</h3><p>  收到了确切的消息，开学时间是 4 月 7 日，这意味着 Qlivoid++ 还能使用很长的一段时间，在前两日的使用中，当然也发现了一些 bug，其中大部分都已修复，有一些比较棘手的 bug 和待优化的地方我将写在下面，然后一一修复。由于时间关系，修复的过程和具体细节我就不在此具体列出了，当前存在的问题如下：</p><ul><li>✅ 发送消息后没有自动关闭键盘</li><li>✅ 进入课堂时如果正在通话会进入失败</li><li>❎ 重启QQ后scheme失效 <font size="2" color="gray">（这应该不是我能解决的问题吧）</font></li></ul><h2 id="写在最后">写在最后</h2><p>  随着第一条复读消息的发出，Qlivoid++ 的开发也算是告一段落，从 2 月 16 日到 3 月 17 日，历时一个月的开发，说长不长，说短也不短。但从中，我学到了很多新的语法，也更加深入地了解了 JavaScript 的运行机制，同时对自动化测试也有了一个更深的认识，在这一个月的时间里，我遇到过很多的问题，<strong>尝试-错误-Debug-再尝试</strong>，循环往复已不知几轮，但最终，当 Qlivoid++ 在我面前稳定地运行的那一刻，我终于露出了欣慰的笑容。</p><p>  最终便只剩下了一些收尾工作，比如更加合理地安排日志输出，使脚本更加易于使用，如果还有 bug，我也会继续修复，总之这次的项目，真的让我受益匪浅。</p><h2 id="Q-A（2022-新增）">Q &amp; A（2022 新增）</h2><ul><li>Q：大二的你，再回头看 Qlivoid 时，有什么感想？</li></ul><blockquote><p>  A：仅仅靠这些“破铜烂铁”，能花一个月时间将能用的脚本肝出来，还真是一个奇迹。现在的我，虽然技术上有所长进，但跟高中比起来，却少了那一份坚持，也许这就是我该改进的地方罢</p></blockquote><ul><li>Q：如果以你现在掌握的技术，穿越回到高中时代，会如何实现 Qlivoid？</li></ul><blockquote><p>  A：大概是 go-cqhttp 和 Xposed 模块的组合，模块仅用于处理进入/退出课堂，复读机等功能全部交由 Python 后端完成，至于模块与后端的通信，采用本地 Unix Socket 即可</p></blockquote></body></html>]]></content>
      
      
      <categories>
          
          <category> 「旧蒙德」 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>攻克 iSmart</title>
      <link href="/posts/3824/"/>
      <url>/posts/3824/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>  高三那年，正值疫情网课，天学网那听力可是没少做，偶然发现这玩意实际上是本地判题，答案去数据目录翻翻便有，从此便开启了快乐听力（</p><p>  上了大学之后，又听闻 iSmart，其 UI 风格与天学网听力那简直是如出一辙，研究发现这位果然也是本地判题，这波嘛，就是砧板鱼肉，且看我把它轻松收拾</p><h2 id="前期准备">前期准备</h2><p>  众所周知，<a href="http://ismartlearning.cn/">iSmart 有个 web 端</a>，登录进去之后，也能看到课程安排和各种任务点，但是并不能进入学习，会弹出一个「暂不支持」的提示：</p><p><img src="web-not-supported.png" alt=""></p><p>  但是转念一想，既然客户端和 web 端的 UI 完全一致，那么代码层面上多少也会有些共通之处，遂抓包，发现把客户端进入学习的 URL 拿到浏览器打开，是能够正常进入的，只不过没法提交答案：</p><p><img src="capture-1.png" alt=""></p><p><img src="capture-2.png" alt=""></p><p>  回到 web 端目录页，查看「学习」按钮的 click 事件，在第 248 行有一个这样的判断：</p><p><img src="line-248.png" alt=""></p><p>  不难看出这里网页是通过 <code>window.AppInfo</code> 属性来判断是否为客户端的，经过查找，确定当前上下文中只有 3 处 <code>window.AppInfo</code>，且全部用于客户端的判定，这里我们直接将 <code>window.AppInfo</code> 赋值为 <code>true</code>，然后继续往下看代码：</p><p><img src="NetBrowser.png" alt=""></p><p>  向前寻找并没有 <code>NetBrowser</code> 这个变量，在控制台中输入 <code>NetBrowser</code> 也返回 <code>undefined</code>，推测这可能是客户端在套壳浏览器中注册的某个特殊变量，且在正常情况下 <code>userString</code> 应不为空值。</p><p>  再观察内层判断语句，通过 URL 中的词义可猜测：1️⃣号链接是在有分数的情况下展示得分情况的，而试题和答案则通过请求2️⃣号链接获得，然后在之前的抓包结果中搜索2️⃣号链接中的关键字，找到对应的请求:</p><p><img src="search-request.png" alt=""></p><p>  分析其 URL，分离出各个参数：</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:left">值</th></tr></thead><tbody><tr><td style="text-align:center"><code>bookId</code></td><td style="text-align:left"><code>BC9B3ABD9ED9E97007029CF062EAF442</code></td></tr><tr><td style="text-align:center"><code>chapterId</code></td><td style="text-align:left"><code>645806982E7B87B2D917EB566C0CDA17</code></td></tr><tr><td style="text-align:center"><code>taskId</code></td><td style="text-align:left"><code>645806982E7B87B2D917EB566C0CDA17</code></td></tr><tr><td style="text-align:center"><code>paperId</code></td><td style="text-align:left"><code>99F9F9570C883DA308C38E40C91C7D82</code></td></tr><tr><td style="text-align:center"><code>testName</code></td><td style="text-align:left"><code>VOCABULARY</code></td></tr><tr><td style="text-align:center"><code>courseName</code></td><td style="text-align:left"><code>%E5%A4%A7%E8%8B%B1-30304</code></td></tr></tbody></table><p><img src="args-analyze.png" alt=""></p><p>  分析参数，<code>testName</code> 即任务点名称，<code>courseName</code> 即课程名，这两个 Name 都比较好获得。还剩下乱码一样的四个 id，在响应数据中搜索，发现在一个 chapters 请求中包含了全部四个 id:</p><p><img src="chapter%E8%AF%B7%E6%B1%82.png" alt=""></p><p>  这是一个 POST 请求，需要提交 3 个参数：<code>bookId</code>，<code>bookType</code> 和 <code>courseId</code>，返回课程中各单元各任务点的 id。所以接下来的任务就是继续递归寻找这三个参数的来源：</p><p><img src="source-of-3-arguments.png" alt=""></p><p>  我们关注这个向 /client/course/textbook/list-of-student 发起的请求 ，这玩意返回的是某种课程列表之类的东西，而它只需要一个参数：<code>courseId</code></p><p>  继续向上搜索 <code>courseId</code>，发现在另一个 /client/course/list-of-student 请求中返回了这个 <code>courseId</code>，而且它不需要任何特殊参数！</p><p><img src="get-course-id.png" alt=""></p><p>  逻辑闭合，这意味着完全使用 Python 爬取答案数据成为可能！四个 id 都找齐之后，拼接好 URL，然后就可以直接访问它进入练习：</p><p><img src="practise-page.png" alt=""></p><p>  在这个页面显示出来的同时，一个 paperinfo 请求也悄悄地把答案加载到了后台，观察这家伙的请求参数，只需要一个 <code>paperId</code>，所以实际上我们是可以在加载试题之前把答案请求好的</p><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>写一个方便调试的小脚本</span></div>    <div class="hide-content"><p>  这好不容易都在浏览器打开练习了，不给它来点 JavaScript 注入怎么行？考虑从按下按钮时的这两个语句入手，先将 <code>window.AppInfo</code> 直接赋值为 <code>true</code>，然后在 <code>NetBrowser.loadData</code> 中实现页面跳转：</p><p><img src="open-on-web.png" alt=""></p><p>  脚本代码如下：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         强制在 iSmart web 端打开练习</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  Tech otakus save the world！</span></span><br><span class="line"><span class="comment">// @author       Mufanc</span></span><br><span class="line"><span class="comment">// @match        *://me.ismartlearning.cn/center/student/*</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">    <span class="built_in">window</span>.AppInfo = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">window</span>.NetBrowser = {</span><br><span class="line">        <span class="string">'loadData'</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">let</span> params = <span class="keyword">new</span> URLSearchParams();</span><br><span class="line">            params.append(<span class="string">'bookId'</span>, currentNode.book_id);</span><br><span class="line">            params.append(<span class="string">'chapterId'</span>, currentNode.chapterId);</span><br><span class="line">            params.append(<span class="string">'taskId'</span>, currentNode.id);</span><br><span class="line">            params.append(<span class="string">'paperId'</span>, currentNode.paperId);</span><br><span class="line">            <span class="built_in">window</span>.open(<span class="string">'../../center/teacher/course/paper.html?'</span> + params.toString());</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">})();</span><br></pre></td></tr></tbody></table></figure><p>  现在在 web 端点击「学习」按钮时，将直接打开练习页面，但由于没有相关 API，所以仍无法正常实现语音录制、提交成绩等功能。</p></div></div><h2 id="Python｜爬虫部分">Python｜爬虫部分</h2><p>  爬取的过程自然是从登录开始，首先来到登录页面，登录需要验证码，然而这些数字实在过于规整，让人很难不怀疑它的强度：</p><p><img src="login-page.png" alt=""></p><p>  先下载一些验证码样本，叠图之后发现每个字符的位置相对固定，将它们全部按字符拆分之后保存，选择 10 个较完整的数字作为模板：</p><p><img src="images-overlay.png" alt=""></p><p><img src="templates.png" alt=""></p><p>  接下来是代码部分，拿到验证码图片，将其二值化后与各个模板图片进行比对，求出截取的图片与模板图的相似度，取最高者即可，下面给出计算两张图片相似度的函数：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> average, dot, linalg</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sim</span>(<span class="params">im1, im2</span>):</span>  <span class="comment"># 需预处理 im1, im2 至相同尺寸</span></span><br><span class="line">    images = [im1, im2]</span><br><span class="line">    vectors = []</span><br><span class="line">    norms = []</span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">        vector = []</span><br><span class="line">        <span class="keyword">for</span> pixel_tuple <span class="keyword">in</span> image:</span><br><span class="line">            vector.append(average(pixel_tuple))</span><br><span class="line">        vectors.append(vector)</span><br><span class="line">        norms.append(linalg.norm(vector, <span class="number">2</span>))</span><br><span class="line">    a, b = vectors</span><br><span class="line">    a_norm, b_norm = norms</span><br><span class="line">    res = dot(a/a_norm, b/b_norm)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></tbody></table></figure><p>  回到浏览器，查看登录的 click 事件，调用了一个 <code>login()</code> 函数，其中对我们的密码做了一些安全处理，具体为 MD5 -&gt; 加盐 -&gt; MD5：</p><p><img src="md5-sign.png" alt=""></p><p>  成功模拟登录之后就是复刻我们上面寻找答案的过程了，详见项目 <a href="%5Bspider.py%5D(https://github.com/Mufanc/iSmartAuto2/blob/master/automaton/spider/spider.py)">spider.py</a></p><p>  光是获得答案可还不行，想要实现自动化，还需要对获得的数据进行解析，回到上面的 chapters 请求，仔细观察后不难发现其中的各个章节存在着某种树形结构：</p><p><img src="tree-hierarchy.png" alt=""></p><p>  任务之间通过 <code>parent_id</code> 相关联，最终形成了与目录相同的层次结构，<a href="https://github.com/Mufanc/iSmartAuto2/discussions">discussions</a> 中常提到的「父节点不存在」正是因为某些书籍不具备这样的目录结构，从而导致后续解析出现问题。临时的解决方法是将所有任务都扁平化到根节点上，但这同时也丧失了刷课过程中按章节顺序显示进度的能力</p><p>  针对不同的 <code>question_type</code> 设计解析器，可以实现一个自动爬取答案并生成 Markdown 文件的小程序，但我们这里主要关注自动化，因此不再深入展开</p><h2 id="Python｜自动化部分">Python｜自动化部分</h2><h3 id="注入尝试">注入尝试</h3><p>  一个偶然的机会，在启动 iSmart 客户端时加上了 chromium 的 <code>--remote-debugging-port=9222</code> 参数，惊奇地发现 <code>chrome://inspect</code> 中出现了对应的调试选项，尝试访问 <code>http://127.0.0.1:9222/json/version</code>，得知对应协议版本为 1.1，支持的功能较少，不过简单封装一下，也足够实现自动化所使用了。</p><p>  启动抓包工具，任意提交一项作业，一个指向 <code>/client/task/score/submit</code> 的请求吸引了我的注意，查看请求数据：</p><figure class="highlight javascript"><figcaption><span>/client/task/score/submit</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="string">"ut"</span>: <span class="string">"3ad2a7b7ce38f4ee0a3be444907f066ed7c69aedbac495a1bef7d5da724c6177"</span>,</span><br><span class="line">    <span class="string">"tasksJson"</span>: [</span><br><span class="line">        {</span><br><span class="line">            <span class="string">"uid"</span>: <span class="string">"1380007"</span>,</span><br><span class="line">            <span class="string">"taskNo"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"taskId"</span>: <span class="string">"F29B3120DCF689BB2272D29C34713CBD"</span>,</span><br><span class="line">            <span class="string">"studyDate"</span>: <span class="string">"1628685008641"</span>,</span><br><span class="line">            <span class="string">"deviceType"</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">"percent"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"batchTag"</span>: <span class="string">"9FF29A1D768A4441BDD7C1353A9A54C2"</span>,</span><br><span class="line">            <span class="string">"seconds"</span>: <span class="string">"2"</span>,</span><br><span class="line">            <span class="string">"chapterId"</span>: <span class="string">"F29B3120DCF689BB2272D29C34713CBD"</span>,</span><br><span class="line">            <span class="string">"result"</span>: <span class="string">"%7B%22studentid%22:138***7,%22testInfo%22:%7B%22answerdata%22:%22%22,%22markdatao%22:%22%3Celement%20id=%5C%22706a439768bfb6762c0991be2968608e%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%22455bb26ea26c0577aee8fff2ad607b6b%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%22cf365b0c48c467829360fbf7403fb88c%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%227808f2a05bd125ca61497d416583839d%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%22af0de2e5c52aa821aa14a858b49987fe%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%22c0ced4e3e7545626746f46776970b14b%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%228b200b5f9edecc6b6e7ace0341925806%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%3Celement%20id=%5C%22684ab0061566247cbc49bd4015cca3ac%5C%22%3E%3Cmark_data%3E%3Cscore%3E0%3C/score%3E%3Cresult%3E2%3C/result%3E%3C/mark_data%3E%3C/element%3E%22%7D%7D"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"14"</span>,</span><br><span class="line">            <span class="string">"score"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"bookId"</span>: <span class="string">"7B6911511DB6B33638F6C58531D8FBD3"</span></span><br><span class="line">        }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script src="/assets/js/highlight.js" onload="highlight(this, [14], 'green');"></script><p>  注意被高亮的行，将其 URL 解码后可以再次展开如下：</p><figure class="highlight json"><figcaption><span>"result":</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"studentid"</span>: <span class="number">1380007</span>,</span><br><span class="line">    <span class="attr">"testInfo"</span>: {</span><br><span class="line">        <span class="attr">"answerdata"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="attr">"markdatao"</span>: <span class="string">"&lt;element id=\"706a439768bfb6762c0991be2968608e\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"455bb26ea26c0577aee8fff2ad607b6b\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"cf365b0c48c467829360fbf7403fb88c\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"7808f2a05bd125ca61497d416583839d\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"af0de2e5c52aa821aa14a858b49987fe\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"c0ced4e3e7545626746f46776970b14b\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"8b200b5f9edecc6b6e7ace0341925806\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;&lt;element id=\"684ab0061566247cbc49bd4015cca3ac\"&gt;&lt;mark_data&gt;&lt;score&gt;0&lt;/score&gt;&lt;result&gt;2&lt;/result&gt;&lt;/mark_data&gt;&lt;/element&gt;"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  其中 <code>markdatao</code> 又为一段 xml 字符串，继续展开如下（补上了表头和 root 标签）：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"706a439768bfb6762c0991be2968608e"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"455bb26ea26c0577aee8fff2ad607b6b"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"cf365b0c48c467829360fbf7403fb88c"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"7808f2a05bd125ca61497d416583839d"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"af0de2e5c52aa821aa14a858b49987fe"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"c0ced4e3e7545626746f46776970b14b"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"8b200b5f9edecc6b6e7ace0341925806"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">element</span> <span class="attr">id</span>=<span class="string">"684ab0061566247cbc49bd4015cca3ac"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mark_data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">score</span>&gt;</span>0<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>2<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mark_data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>  疑似发送了一些作答信息，但由于顶层 json 中的 <code>ut</code> 值无法确定来源（猜测为某种校验码），且在已加载的 js 文件中无法找到其来源，直接发送「提交试卷」请求的想法暂时作罢。</p><p>  既然无法定位 <code>ut</code> 的来源，那么我们只能另寻出路。还记得刚刚的 <code>NetBrowser</code> 变量吗？在客户端这里，它的值可不是 <code>undefined</code>，通过 <code>Object.keys(NetBrowser)</code> 查看其属性列表，其中有不少的 native function，那么真正的「提交试卷」请求很可能就是通过它发出来的：</p><figure class="highlight javascript"><figcaption><span>查看 NetBrowser 中的 key：</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'doDownloadBook'</span>, <span class="string">'CloseWindow'</span>, <span class="string">'cancelVideoConvert'</span>, <span class="string">'goBack'</span>, <span class="string">'goRefresh'</span>,</span><br><span class="line">    <span class="string">'play'</span>, <span class="string">'loadMediaSource'</span>, <span class="string">'pausePlay'</span>, <span class="string">'resumePlay'</span>, <span class="string">'stopPlay'</span>, <span class="string">'seekPlay'</span>, </span><br><span class="line">    <span class="string">'getCurrentTime'</span>, <span class="string">'getDuration'</span>, <span class="string">'startRecordV2'</span>, <span class="string">'startRecord'</span>, <span class="string">'endRecord'</span>, </span><br><span class="line">    <span class="string">'endRecordV2'</span>, <span class="string">'playRecord'</span>, <span class="string">'pausePlayRecord'</span>, <span class="string">'stopPlayRecord'</span>, <span class="string">'resumePlayRecord'</span>,</span><br><span class="line">    <span class="string">'playAudio'</span>, <span class="string">'getAudioCurrentTime'</span>, <span class="string">'seekPlayAudio'</span>, <span class="string">'pausePlayAudio'</span>, </span><br><span class="line">    <span class="string">'resumePlayAudio'</span>, <span class="string">'stopPlayAudio'</span>, <span class="string">'getVideoCurrentTime'</span>, <span class="string">'getVideoDuration'</span>,</span><br><span class="line">    <span class="string">'pausePlayVideo'</span>, <span class="string">'resumePlayVideo'</span>, <span class="string">'seekVedio'</span>, <span class="string">'stopPlayVideo'</span>, <span class="string">'activeVideo'</span>, </span><br><span class="line">    <span class="string">'isShowVideo'</span>, <span class="string">'initVedioView'</span>, <span class="string">'setPosterPath'</span>, <span class="string">'SetVideoPosition'</span>, <span class="string">'setVideoMute'</span>, </span><br><span class="line">    <span class="string">'setVideoPlayImage'</span>, <span class="string">'getVideoImage'</span>, <span class="string">'setVideoSubtitles'</span>, <span class="string">'activeVideoControl'</span>, </span><br><span class="line">    <span class="string">'startPlayVideo'</span>, <span class="string">'setVideoControlAutoHide'</span>, <span class="string">'setVideoControlVisible'</span>, </span><br><span class="line">    <span class="string">'setFullScreen'</span>, <span class="string">'setAudioStateChangeJSCallback'</span>, <span class="string">'setVideoStateChangeJSCallback'</span>, </span><br><span class="line">    <span class="string">'setPlayRecordStateChangeJSCallback'</span>, <span class="string">'setPageExchangeJSCallback'</span>, <span class="string">'setRecordEndJSCallback'</span>, </span><br><span class="line">    <span class="string">'setRecordScoringJSCallback'</span>, <span class="string">'setRecordStartJSCallback'</span>, <span class="string">'initPageInfo'</span>, <span class="string">'goToMain'</span>, </span><br><span class="line">    <span class="string">'backMain'</span>, <span class="string">'setSlidePostion'</span>, <span class="string">'gotoURL'</span>, <span class="string">'DownloadResoucesV2'</span>, <span class="string">'DownloadResouces'</span>, </span><br><span class="line">    <span class="string">'DownloadBook'</span>, <span class="string">'ReDownloadBook'</span>, <span class="string">'UploadRecordFiles'</span>, <span class="string">'SaveRecordFiles'</span>, </span><br><span class="line">    <span class="string">'loadData'</span>, <span class="string">'saveData'</span>, <span class="string">'clearData'</span>, <span class="string">'loadData4Books'</span>, <span class="string">'saveData4Books'</span>, </span><br><span class="line">    <span class="string">'clearData4Books'</span>, <span class="string">'TaskStudy'</span>, <span class="string">'refreshTrainingCatalog'</span>, <span class="string">'getCourseVideoList'</span>, </span><br><span class="line">    <span class="string">'deleteCourseVideo'</span>, <span class="string">'startCourseRecord'</span>, <span class="string">'uploadCourseVideo'</span>, <span class="string">'playCourseVideo'</span>, </span><br><span class="line">    <span class="string">'openCourseVideoDir'</span>, <span class="string">'getFlipbookOfChapters'</span>, <span class="string">'submitTask'</span>, <span class="string">'getClientInfo'</span>, </span><br><span class="line">    <span class="string">'loadPaperInfos'</span>, <span class="string">'gotoDeviceTest'</span>, <span class="string">'IsValidMP4'</span>, <span class="string">'CodecToH264'</span>, <span class="string">'CanClose'</span>, </span><br><span class="line">    <span class="string">'openAttachment'</span>, <span class="string">'exportPaper'</span>, <span class="string">'stopExportPaper'</span>, <span class="string">'cancelExportPaper'</span>, <span class="string">'openExplorer'</span>, </span><br><span class="line">    <span class="string">'showBindMobile'</span>, <span class="string">'bindMobileFinish'</span>, <span class="string">'getMenuFuncIdList'</span>, <span class="string">'getAccreditList'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p>  乍一看还挺复杂，东西也不少，其实仔细看看不难发现大部分都是与视频和录音相关的，与课程提交相关的就只有 <code>saveData</code>、<code>saveData4Books</code>、<code>TaskStudy</code>、<code>submitTask</code> 这几个，其中与「提交」意思最接近的无非就是 <code>submitTask</code> 了，所以接下来我们对其做 Hook</p><p>  这里选择 jQuery 来动手脚，这样我们注入的内容就能被几乎所有页面加载到，为 jQuery 脚本文件配置一个本地覆盖，然后在末尾添加如下内容：</p><figure class="highlight javascript"><figcaption><span>jquery.min.js</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">window</span>.copy = <span class="function"><span class="keyword">function</span> (<span class="params">text</span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> dom = <span class="built_in">document</span>.createElement(<span class="string">'textarea'</span>)</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(dom)</span><br><span class="line">        dom.innerHTML = text</span><br><span class="line">        dom.select()</span><br><span class="line">        <span class="built_in">document</span>.execCommand(<span class="string">'copy'</span>)</span><br><span class="line">        <span class="built_in">document</span>.body.removeChild(dom)</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    NetBrowser.submitTask = <span class="keyword">new</span> <span class="built_in">Proxy</span>(</span><br><span class="line">        NetBrowser.submitTask, {</span><br><span class="line">            <span class="function"><span class="title">apply</span>(<span class="params">target, context, args</span>)</span> {</span><br><span class="line">                <span class="built_in">window</span>.copy(<span class="built_in">JSON</span>.stringify(args));</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">                    $.jBox(<span class="string">'&lt;div style="font-size: 15px;"&gt;Arguments copied to clipboard.&lt;/div&gt;'</span>, {<span class="string">'title'</span>: <span class="string">'Injected!'</span>})</span><br><span class="line">                }, <span class="number">1000</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">Reflect</span>.apply(target, context, args)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    )</span><br><span class="line">})()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>  当 <code>submitTask</code> 被调用时，这段脚本能将传入的参数以 json 形式 dump 出来，并复制到剪贴板，同时在页面上显示一段消息提示：“Arguments copied to clipboard.”。</p><h3 id="提交成绩">提交成绩</h3><p>  接下来在所有文件中搜索该函数的调用，非常幸运地在 <code>xot.js</code> 中发现了如下代码片段：</p><p><img src="arg-submitTask.png" alt=""></p><p>  无需过多的逆向和猜测，根据代码中的词汇意思便已经能够得知各个参数的含义！现在随便进入一个没有任何题目的任务，然后点击提交，等待数据上传成功后，查看请求中 <code>result</code> 部分：</p><figure class="highlight javascript"><figcaption><span>https://school.ismartlearning.cn/client/task/score/submit</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="string">"studentid"</span>: <span class="number">1380007</span>,</span><br><span class="line">    <span class="string">"testInfo"</span>: {</span><br><span class="line">        <span class="string">"answerdata"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"markdatao"</span>: <span class="string">""</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  这里应该就是 <code>result</code> 的最简形式了，接下来只需操作 <a href="https://chromedevtools.github.io/devtools-protocol/">DevTools API</a> 调用 <code>NetBrowser.submitTask</code> 即可，下面是最终的效果：</p><p><img src="final.png" alt=""></p><p>  由于每次提交的分数是 Number 类型，所以实际上可能可以超过 100 分的上限（？），不过这样属实是太离谱了，下一步需要根据题目类型和题量为每个任务随机选择合适的时长和分数，该部分技术难度不高，这里便不再赘述，详情可以去看看 GitHub 上的代码实现</p><p>  <strong>最后再啰嗦一句，用此法提交的成绩由于 <code>result</code> 数据不全，尚有被检测的可能，如果想要达到完全无感提交，需要进一步分析 <code>answerdata</code> 和 <code>markdatao</code> 两个属性，这里就暂时咕咕咕了（欢迎 PR）。刷课有风险，入坑需谨慎！</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
